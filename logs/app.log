{
  message: '::1 - - [24/Apr/2025:11:04:42 +0000] "GET /users/re HTTP/1.1" 404 147 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-24 12:04:42'
}
{"level":"info","message":"::1 - - [24/Apr/2025:11:05:56 +0000] \"GET /users/re HTTP/1.1\" 404 147 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\"","timestamp":"2025-04-24 12:05:56"}
{
  message: 'localhost',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'bookingdb',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: '557Py2mjs8.',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{ message: '5432', level: 'info', timestamp: '2025-04-24 13:32:45' }
{ message: 'ian', level: 'info', timestamp: '2025-04-24 13:32:45' }
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_day_time ON time_slots(day, start_time, end_time);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX idx_appointments_provider_status ON appointments(provider_id, status);..., params: undefined, duration: 29ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, error: relation "appointments" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 14:19:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:30:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:31:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:41:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:25 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:25'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:58 +0000] "POST /auth/register HTTP/1.1" 400 1413 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:58'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:43:10 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:43:10'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:44:32 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:44:32'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:49:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:50:12 +0000] "POST /auth/register HTTP/1.1" 400 50 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:50:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:52:21 +0000] "POST /auth/register HTTP/1.1" 400 60 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:52:21'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:54:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 23ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 15:54:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Toto","brian@gmail.com","$2b$10$Q8PrUcbPrVjeeO73XiYXXukfLu7x9Lm3Rt9mqePFX5yuimwVVXixC",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: 'User registered successfully: a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:54:44 +0000] "POST /auth/register HTTP/1.1" 201 115 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 17:59:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:42'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:02:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:05:22 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:07:08 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:09:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:09:31 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:10:17 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:12:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 70ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 88ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:11 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:14:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:27 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 62ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:15:57'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:15:57 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:15:57'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 124ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)\n' +
    '    at runNextTicks (node:internal/process/task_queues:65:5)\n' +
    '    at process.processImmediate (node:internal/timers:479:9)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 113ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Client connected from Pool (Total count: 3',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 231ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:47:34 +0000] "POST /api/auth/register HTTP/1.1" 404 157 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 71ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 79ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:52:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 44ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$oO812uPRA/WECJaOZ1gfO.nOE1o0vkOXljE1MGy1RGMk0ETW1FtZi",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'User registered successfully: b486f2f2-e19f-4b00-b28b-b7aed76b6e81',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 115ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 49ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9895ef84-c61f-41a6-816f-96dd39944bca)',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  level: 'error',
  message: "Error during login process for fakeuser@example.com:  Cannot read properties of undefined (reading 'password')",
  stack: "TypeError: Cannot read properties of undefined (reading 'password')\n" +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:20:72)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 500 70 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$x/L5i3pLahkKvvgfhXUifuTOIjaIUmD5HSRuUTdZwZsBl6WvNrTEa",""], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User registered successfully: 703e1d26-f7b7-4b76-ba7e-945536a088c4',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 58ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9d9d9578-6d23-4c89-b19d-eceed0ca063c)',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$/aL2gmrDdhmA0lPRGMkLNu2WyGLTo2oFluCXt1WlEcSXm589t6J8y",""], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'User registered successfully: 6f5a6cf0-db61-4708-a55f-d5b2f2345c4b',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 21:18:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:27:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:32:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Tony","Styles","tony@barbershop.com","hashed-password-1","Barber","Experienced barber, specializing in fades and trims.",4.8], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Linda","Wellness","linda@massagehub.com","hashed-password-2","Massage Therapist","Certified massage therapist focusing on deep tissue and relaxation techniques.",4.9], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:37:20 +0000] "POST /timeslot/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 404 212 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:37:20'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:38:51 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:42:11 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:43:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 36ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:44:05 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 08:45:48' }
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:45:48 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:47:50 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '85da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["85da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Access denied: User ID 85da2cd5-1c59-4f8d-b374-f95ee0d6f533 is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:48:48 +0000] "POST /timeslots/providers/85da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 33ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:39 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Duplicate time slot attempt by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'warn',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:43 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:08:28'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:08:28 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 419 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:09:13'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:09:13 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 125 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:13:38 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 200 836 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:15:49 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:59:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:13:52 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots/%2066aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 404 253 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:13:52'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:14:41 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 404 250 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:14:41'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 3ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:17:11 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 10:18:23' }
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:18:23 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 10:19:16' }
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:19:16 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:22:05 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 200 12 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 25ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: [null], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:24:08 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 200 12 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:25:24 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:25:24'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:25:55 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:25:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:27:12 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:27:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:29:05 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["7ea6049b-cb9c-4767-8263-6d4e152b9c89","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Time slot with id: 7ea6049b-cb9c-4767-8263-6d4e152b9c89 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:33:39 +0000] "DELETE /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/delete-timeslot/7ea6049b-cb9c-4767-8263-6d4e152b9c89 HTTP/1.1" 201 270 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:12:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:12:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  length: 319,
  name: 'error',
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_tasks_updated_at\n' +
    '      BEFORE UPDATE ON tasks \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'namespace.c',
  line: '434',
  routine: 'RangeVarGetRelidExtended',
  level: 'error',
  message: 'Error while initializing the schema relation "tasks" does not exist',
  stack: 'error: relation "tasks" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:1)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  length: 319,
  name: 'error',
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_tasks_updated_at\n' +
    '      BEFORE UPDATE ON tasks \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'namespace.c',
  line: '434',
  routine: 'RangeVarGetRelidExtended',
  level: 'error',
  message: 'Error while initializing the schema relation "tasks" does not exist',
  stack: 'error: relation "tasks" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:08:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  length: 372,
  name: 'error',
  severity: 'ERROR',
  code: '42710',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_time_slots_updated_at\n' +
    '      BEFORE UPDATE ON time_slots \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'trigger.c',
  line: '768',
  routine: 'CreateTriggerFiringOn',
  level: 'error',
  message: 'Error while initializing the schema trigger "update_time_slots_updated_at" for relation "time_slots" already exists',
  stack: 'error: trigger "update_time_slots_updated_at" for relation "time_slots" already exists\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:11:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 24ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  length: 372,
  name: 'error',
  severity: 'ERROR',
  code: '42710',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_time_slots_updated_at\n' +
    '      BEFORE UPDATE ON time_slots \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'trigger.c',
  line: '768',
  routine: 'CreateTriggerFiringOn',
  level: 'error',
  message: 'Error while initializing the schema trigger "update_time_slots_updated_at" for relation "time_slots" already exists',
  stack: 'error: trigger "update_time_slots_updated_at" for relation "time_slots" already exists\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-27","12:00:00","12:30:00"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-27","12:00:00","12:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:23:36 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:25:17 +0000] "PUT /providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 404 238 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:25:17'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Error executing query: { text: UPDATE SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '               ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: syntax error at or near "="}',
  level: 'error',
  timestamp: '2025-04-25 13:28:17'
}
{
  length: 90,
  name: 'error',
  severity: 'ERROR',
  code: '42601',
  detail: undefined,
  hint: undefined,
  position: '49',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'scan.l',
  line: '1244',
  routine: 'scanner_yyerror',
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  syntax error at or near "="',
  stack: 'error: syntax error at or near "="\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:13:34)',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:28:17 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 43 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:31:59'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:31:59'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Error executing query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: could not determine data type of parameter $4}',
  level: 'error',
  timestamp: '2025-04-25 13:32:06'
}
{
  length: 124,
  name: 'error',
  severity: 'ERROR',
  code: '42P18',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '740',
  routine: 'pg_analyze_and_rewrite_varparams',
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  could not determine data type of parameter $4',
  stack: 'error: could not determine data type of parameter $4\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:13:34)',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:32:06 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 59 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 35ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  result is not defined',
  stack: 'ReferenceError: result is not defined\n' +
    '    at updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:27:25)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:32:45 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:33:13 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 200 261 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-27","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:13:48:01 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 200 251 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:05:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:06:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:09:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:10:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:10:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:15:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:15:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 26ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:19:28 +0000] "GET /search/providers/:id/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 175 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:19:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:20:05 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:20:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:20:19 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:20:19'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:22:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:22:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:07:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["7ea6049b-cb9c-4767-8263-6d4e152b9c89","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 16:09:58'
}
{
  level: 'error',
  message: "Error deleting time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  Cannot read properties of undefined (reading 'created_at')",
  stack: "TypeError: Cannot read properties of undefined (reading 'created_at')\n" +
    '    at formatTimestamps (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:8:39)\n' +
    '    at deleteTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:105:25)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:09:58 +0000] "DELETE /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/delete-timeslot/7ea6049b-cb9c-4767-8263-6d4e152b9c89 HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:10:08 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:10:08'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:10:11 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:10:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 16:11:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:11:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:11:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:17:44 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:17:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:31'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:31'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:32 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:45 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:19:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:19:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:19:30'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:19:30 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1657 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:19:30'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:19:33'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:19:33 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1657 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:19:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:20:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:20:24 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 64 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:20:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 7ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 17ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 1ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 19:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 09:44:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:44:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 102ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 99ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 09:49:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:49:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 97ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:08:49:21 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 425 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:04:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:04:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 67ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:35:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 51ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:32:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:32:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 53ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: '::1 - - [26/Apr/2025:10:49:25 +0000] "GET /actors/search?name=TOm%20 HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:25'
}
{
  message: '::1 - - [26/Apr/2025:10:49:26 +0000] "GET /actors/search?name=TOm HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:26'
}
{
  message: '::1 - - [26/Apr/2025:10:49:27 +0000] "GET /actors/search?name=T HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:27'
}
{
  message: '::1 - - [26/Apr/2025:10:49:27 +0000] "GET /actors/search?name=Tom HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:27'
}
{
  message: '::1 - - [26/Apr/2025:10:49:28 +0000] "GET /actors/search?name=Tom%20 HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:28'
}
{
  message: '::1 - - [26/Apr/2025:10:49:28 +0000] "GET /actors/search?name=Tom%20H HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:28'
}
{
  message: '::1 - - [26/Apr/2025:10:49:29 +0000] "GET /actors/search?name=Tom%20Holla HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:29'
}
{
  message: '::1 - - [26/Apr/2025:10:49:30 +0000] "GET /actors/search?name=Tom%20Holland HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:01:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:21:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:22:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:24:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:31:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:35:01 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:35:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:35:29 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:35:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 73ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:43:19 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:01 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:01'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:03 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:44:18'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:44:18'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:44:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:19 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:46 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:46:27 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:46:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:47:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:47:00'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:07 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:29 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:29'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:31 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:31'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:32 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:49:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 52ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:49:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 70ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, time_slot_id, appointment_date, status)\n' +
    '   ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], error: column "time_slot_id" of relation "appointments" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 12:49:41'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '58',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets',
  level: 'error',
  message: 'Error booking appointment for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column "time_slot_id" of relation "appointments" does not exist',
  stack: 'error: column "time_slot_id" of relation "appointments" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:38:31)',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:49:41 +0000] "GET /appointment/booking HTTP/1.1" 500 130 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:50:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 64ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, appointment_date, status)\n' +
    '    ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], error: column "appointment_date" of relation "appointments" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 12:50:41'
}
{
  length: 141,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '71',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets',
  level: 'error',
  message: 'Error booking appointment for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column "appointment_date" of relation "appointments" does not exist',
  stack: 'error: column "appointment_date" of relation "appointments" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:38:31)',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:50:41 +0000] "GET /appointment/booking HTTP/1.1" 500 134 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:50:54 +0000] "GET /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-24T19:16:56.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-26 12:51:42'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:51:42 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:51:42'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:70:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)',
  timestamp: '2025-04-26 12:51:53'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:51:53 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:51:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 75ms, rows: 4}',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:52:22 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 344 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 60ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-26 13:08:12'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:08:12 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:08:12'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed invalid token',
  level: 'error',
  stack: 'JsonWebTokenError: invalid token\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:82:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:291:5)',
  timestamp: '2025-04-26 13:09:18'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:09:18 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:09:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], error: column a.time_slot_id does not exist}',
  level: 'error',
  timestamp: '2025-04-26 13:10:11'
}
{
  length: 173,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "a.timeslot_id".',
  position: '259',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error fetching appointments for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column a.time_slot_id does not exist',
  stack: 'error: column a.time_slot_id does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewMyAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:10:11 +0000] "GET /appointment/view-bookings HTTP/1.1" 500 89 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], duration: 34ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:15:48'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:15:48 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 272 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:15:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:17:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS a.created_at,\n' +
    '             t.day, t.start_time, t.end_time,\n' +
    '             p.fir..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], error: syntax error at or near "."}',
  level: 'error',
  timestamp: '2025-04-26 13:17:17'
}
{
  length: 90,
  name: 'error',
  severity: 'ERROR',
  code: '42601',
  detail: undefined,
  hint: undefined,
  position: '24',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'scan.l',
  line: '1244',
  routine: 'scanner_yyerror',
  level: 'error',
  message: 'Error fetching appointments for client a9b58b58-e455-4dfe-88c8-16cd0878c210: syntax error at or near "."',
  stack: 'error: syntax error at or near "."\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewMyAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:17:17'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:17:17 +0000] "GET /appointment/view-bookings HTTP/1.1" 500 82 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:17:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:48:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], error: column a.time_slot_id does not exist}',
  level: 'error',
  timestamp: '2025-04-26 13:52:28'
}
{
  length: 173,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "a.timeslot_id".',
  position: '255',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error fetching appointments for provider e1022995-d7f7-4ebc-98fd-cad361260475: column a.time_slot_id does not exist',
  stack: 'error: column a.time_slot_id does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewProviderAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:52:28 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 500 98 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 42ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:52:56 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 200 19 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], duration: 61ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:53:12 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 272 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 49ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:53:44 +0000] "GET /appointment/provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 200 267 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:12:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:15:59 +0000] "GET /4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 182 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:15:59'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:16:28 +0000] "GET /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 194 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:16:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:16:30 +0000] "GET /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 194 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:16:30'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed invalid token',
  level: 'error',
  stack: 'JsonWebTokenError: invalid token\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:82:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)',
  timestamp: '2025-04-26 14:17:09'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:17:09 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:17:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:18:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:18:27'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 14:18:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:18:28 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:18:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: 'Error executing query: { text: \n' +
    '        SELECT client_id, provider_id, time_slot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], error: column "time_slot_id" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 14:18:49'
}
{
  length: 183,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "appointments.timeslot_id".',
  position: '41',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error canceling appointment 4e50b113-db0e-48ba-b2be-76039fca95a0: column "time_slot_id" does not exist',
  stack: 'error: column "time_slot_id" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async cancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:15:33)',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:18:49 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 500 91 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Appointment 4e50b113-db0e-48ba-b2be-76039fca95a0 canceled by user a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:19:09 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:34:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:34:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:35:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 8ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:37:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 00:58:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 00:58:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 00:58:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-26T13:47:07.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-28 01:04:59'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:04:59 +0000] "POST /appointment/booking HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:04:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:05:10'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 61ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:10'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-28 01:05:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:11 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:34 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 75ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","a4989665-3dfc-4c53-b6fc-816b1ab26e18","2025-04-24T23:00:00.000Z","booked"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:53 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: [null], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Appointment 8dbe9a24-14c0-435f-8f93-38a78b5669ce canceled successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:07:27 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/8dbe9a24-14c0-435f-8f93-38a78b5669ce/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:34:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:34:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:35:31 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:38:04 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Cancel failed: Appointment 8dbe9a24-14c0-435f-8f93-38a78b5669ce already canceled',
  level: 'warn',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:39:00 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/8dbe9a24-14c0-435f-8f93-38a78b5669ce/cancel HTTP/1.1" 409 45 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:39:11 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:41:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:41:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","618b47c2-ac87-41b0-a88c-1a039fe85a1d","2025-04-24T23:00:00.000Z","booked"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:42:54 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["ced2d41d-18bb-4a83-b723-053286453258"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["ced2d41d-18bb-4a83-b723-053286453258"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Appointment ced2d41d-18bb-4a83-b723-053286453258 canceled successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:43:39 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/ced2d41d-18bb-4a83-b723-053286453258/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:48:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 50ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","618b47c2-ac87-41b0-a88c-1a039fe85a1d","2025-04-24T23:00:00.000Z","booked"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: '🔔 Notification sent to provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:48:43 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:51:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:51:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:54:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:54:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:56:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:57:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:05:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 69ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:21:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 60ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:21:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:20:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 09:05:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:26:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:28:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 12:56:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: '::1 - - [28/Apr/2025:11:58:29 +0000] "GET / HTTP/1.1" 200 176 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:29'
}
{
  message: '::1 - - [28/Apr/2025:11:58:29 +0000] "GET /stylesheets/style.css HTTP/1.1" 304 - "http://localhost:3000/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:29'
}
{
  message: '::1 - - [28/Apr/2025:11:58:36 +0000] "GET /api-docs HTTP/1.1" 301 158 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:36'
}
{
  message: '::1 - - [28/Apr/2025:11:58:36 +0000] "GET /api-docs/ HTTP/1.1" 200 3106 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:36'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 200 154986 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 52392 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 200 229223 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 200 1468326 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:38 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 200 628 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 55622 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:40 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:08:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:21 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:08:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:58'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 55743 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:09:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 55622 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:39 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:38:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:38:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 169ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 144ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 80bdb4b2-37a8-4374-945d-06be28ab0a26)',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:27 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:27 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:27 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$qi3BoF.jwXHNSUIXG6J7duLY6kjka.AKaFU5ln/S4zMZ8fD0G9IYS",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'User registered successfully: 2da57ef3-cba3-4b42-b8ff-3063b7f64c0b',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:28 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:28 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 66ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 216ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email)\n' +
    `      VALUES ('Test', 'Provider', 'provi..., params: undefined, error: null value in column "password" of relation "providers" violates not-null constraint}`,
  level: 'error',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 148ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /providers/undefined/create-timeslots HTTP/1.1" 404 176 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 3d8ca3d4-1c98-4988-b7c3-0387a21e8c28)',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$zqcP4SIAFm3uKcJISapNl.E2aC8H.G0qx/uNOZsUwXMLxAusFmhcG",""], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'User registered successfully: 63f011af-f7d1-4dde-9fd6-7c7143249b64',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 189ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 142ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 133ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /providers/42c6402c-4667-4d21-a214-c9f286ee6e16/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["42c6402c-4667-4d21-a214-c9f286ee6e16"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 78502707-3d9b-4995-b171-704c16396742)',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$X2R6Jt0TVNHKK8mI5ZlaPOzCT4RUSyrOfiKdo5IG64HHGdEb7TMk6",""], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'User registered successfully: 3b959057-740c-4c73-9d9d-c67405a6d5d8',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 201ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 163ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /providers/f2b299b7-aaf0-4562-909a-2103d5a5a3b6/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 136ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f2b299b7-aaf0-4562-909a-2103d5a5a3b6"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 2f7dea88-2299-4dcd-89c0-6198dfdb637c)',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 6ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$O/9w/wZwm/V6FQ.3LlKxg.J5Kg0rE6o6COrIXdhmwvHuL96x5Wxl6",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'User registered successfully: b553d319-4567-4b58-a203-6c21bb32961c',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:18 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:18 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 242ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:43 +0000] "POST /providers/beef51ba-f3bd-44e8-a952-e1399761f3f7/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 346ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 230ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["beef51ba-f3bd-44e8-a952-e1399761f3f7"], duration: 27ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 20ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: f5a2ee0d-b3c6-489b-8369-ccd17ef69578)',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 30ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$d4SOtrMEcNxZP45jVmOAv.jfkGVh43SeEn4MaVUwNBZuItsymfo0C",""], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'User registered successfully: 966c76e9-f6ae-4f21-9896-3ae7544a3b4b',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:03:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:03:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 105ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 146ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 198ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /providers/fc07ed64-c9bc-4e1c-97f8-b265fac950d0/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fc07ed64-c9bc-4e1c-97f8-b265fac950d0"], duration: 30ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: d86c018d-dfce-41e5-ab92-1fb658789a57)',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$lW3sq/eX32wAkT8rcWyR6uDoyOZFCrgqLxJCqzBllMPDQ0p72ZmW6",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'User registered successfully: 15be1a96-a7ee-4e3e-aa8d-4863ea81e9f6',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:18 +0000] "POST /providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 175ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 121ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 132ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 04b3073e-7dd5-49d2-a5f9-f16346700b6b)',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Z/RimF.Bg48o9f6AaZOK.u3kGmk0Uh7tLqpVhqi8Fx.a3sqpGIrRm",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'User registered successfully: 772d587a-0860-4fd9-81d8-db82a11810bb',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 53ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 147ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 158ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 118ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:44 +0000] "POST /providers/65ac1b08-afdf-412c-b05a-012554afe4fd/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["65ac1b08-afdf-412c-b05a-012554afe4fd"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 07e6647c-3625-4787-b35a-f40f893a7ce0)',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$.yWCob7/I3UHHvkcZ6R3D.YUN6vZAQZFex5dBotpCv7xpsF.O5hRC",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'User registered successfully: b9c0f46c-5f86-467f-8c44-dd7e6fd406c1',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 172ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 240ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:19 +0000] "POST /providers/d7eaf1cb-fd6b-4d44-8a36-5446a6f47615/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["d7eaf1cb-fd6b-4d44-8a36-5446a6f47615"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 145ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: bcd7fa53-33e3-4960-b7ac-466daa9716a8)',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Kdzv1l7zYXmCGKUsWRgfsuxOjJdK.5feH9ktYyAXaAjMKqPIo7wTC",""], duration: 28ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'User registered successfully: 07baf321-a203-44b9-820f-60ee07f1057f',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 181ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 164ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:54 +0000] "POST /providers/e9fd8643-f539-49ce-89f3-df961ecdf85d/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 227ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 2e709973-3b90-4537-af70-f3da4e01eec7)',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:54 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["e9fd8643-f539-49ce-89f3-df961ecdf85d"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$OOfLMGW3aWTxwESIyYrX2ODwfNM0os4So.6uPwXZJ5c0KYdNPqUMG",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'User registered successfully: 3cd199de-c80c-48cf-81ce-97d4d6e83948',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 202ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 155ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 133ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /providers/a4dd47d4-43ed-4f94-a479-026db55abe8b/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 02cd8c1b-d80c-4ba8-8cb9-de707091f115)',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a4dd47d4-43ed-4f94-a479-026db55abe8b"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Q89L5U6BkoHktiKMsew5wes4dxOZ22wpWECMFP8SzmqEUUC22ybtm",""], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'User registered successfully: ab65f4ab-e607-46e6-9c3f-b0c824abf7ee',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:48 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  level: 'info',
  message: 'Provider ID',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 169ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 157ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 131ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /providers/19bb468d-f586-43e9-abd4-a19dd3c7f90e/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: ea19f929-af92-4ac7-bb54-7386679847f5)',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["19bb468d-f586-43e9-abd4-a19dd3c7f90e"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$bFerqINe4XHtclbMSKeZ/OEX071Z2nTTwYITBfA50XYDJzcmUQUiy",""], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'User registered successfully: 7a6afbbb-ee65-4884-8afa-c8c74edaeb64',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:22 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 63ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Provider ID: providerId',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 196ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 176ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 106ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:30 +0000] "POST /providers/866eec72-aedd-4d68-a04a-8415a38be836/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["866eec72-aedd-4d68-a04a-8415a38be836"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 88c858c4-12ac-479a-b132-6bd3208507ad)',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$aIH5GtrvHE/cwiazdFYVouAo5J8n4ultHP0ighUloI6v2XUERho3C",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'User registered successfully: fe64bfa0-b362-4cbf-8733-53eb279a7ca8',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:35'
}
{
  message: 'Provider ID: undefined',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 197ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 148ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /providers/57257866-6ca2-404e-a7bd-0f18c184cf4b/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 134ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["57257866-6ca2-404e-a7bd-0f18c184cf4b"], duration: 48ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 32d27966-e586-469f-b31b-356d2a864949)',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$1x44HRY1ncHlcggoOHgpoOGsZsx04Wu1Kl.fF6L5TQlCDTk/AggD2",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'User registered successfully: 4b3cd2cf-a005-4c51-8f7e-d05a0587ad05',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 51ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:12'
}
{
  message: 'Provider ID: undefined',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 240ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 165ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /providers/63f43b98-fbeb-4090-ba62-49fa0fe3c73a/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["63f43b98-fbeb-4090-ba62-49fa0fe3c73a"], duration: 52ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 175ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: b6577a3a-9591-4b14-bd2b-b52513a8e20d)',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$ZnaLRRbm8AvmmoJe0DwpJuYjuDd.9NuF7r3OX1r2LHI5sQnnkiisK",""], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'User registered successfully: c7daf691-4cb1-45a4-bce5-57750cc24327',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:14 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 188ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 148ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 108ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Provider ID: 24862967-dd38-4c37-b24c-ac800104bd82',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /providers/24862967-dd38-4c37-b24c-ac800104bd82/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: ed5bc0cf-61b8-455c-8650-dca1e53bd6e5)',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$HJcvi9HoG.PM3SfQ.U22S.iEbNWzSZXD0k0FsFG9yeL9LPaJOZAl6",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'User registered successfully: 614b6f1b-effa-490e-92be-2f1de975fe02',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:03 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:03 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 30ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 157ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 140ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 2ef98fe4-5269-463f-8982-ffdaf3119444)',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:30 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:30 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:30 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$03VpFHiOYSj1/GEBZjksYebMIro6k1AMOWOzlnSa9V.MLPO9PK5vy",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'User registered successfully: 1735a10b-d726-4a43-bc73-c48150f7bd8e',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:31 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:31 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 179ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 193ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Provider ID: 2e4baec7-e080-478d-a6ec-cd766bc9c7aa',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /providers/2e4baec7-e080-478d-a6ec-cd766bc9c7aa/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["2e4baec7-e080-478d-a6ec-cd766bc9c7aa"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 121ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9ccf2004-ba96-43d7-885e-e03b1964a187)',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$H66hhYXheZi6W0RZ23zZ5.YM9BItjobASuB6O..rTXAFAUCP1mRcG",""], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'User registered successfully: 1b8ff715-8e46-4e63-b599-f597d1dfbf8b',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:42 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:18:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:21:25 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:24:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 226ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 123ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 162ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Provider ID: 14b3b008-94ff-40f9-b420-70cdbb72e02e',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /providers/14b3b008-94ff-40f9-b420-70cdbb72e02e/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 479fac02-6bf5-473a-9f41-e97be4c6a04e)',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["14b3b008-94ff-40f9-b420-70cdbb72e02e"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$PkC89/f9aaqGuiM8u6uDAue4bjqBIhnslqiZxzt4HrxcBf6vAKQ6y",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'User registered successfully: 674912b5-e9bb-4ea5-ab34-a8a5c421abbc',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:28 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:28 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:32:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 210ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 107ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Provider ID: caf19de7-96c2-4330-bb01-6b50b1fb4844',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 184ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "POST /providers/caf19de7-96c2-4330-bb01-6b50b1fb4844/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "GET /provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 404 198 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["caf19de7-96c2-4330-bb01-6b50b1fb4844"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "PATCH /provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/your-appointment-id/cancel HTTP/1.1" 404 213 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: f6a5331c-81cb-4bc6-83d5-2508e85bee51)',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$PlX8D8mf/Yeyiuslm22FNendh7O3bpSr5eAeeqCEHrJ6rHEbAdoLK",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'User registered successfully: 6d206dfe-d690-42de-9d7c-c93c647e8606',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 129ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "GET /provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 404 198 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 208ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 178ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Provider ID: 413e2abf-bfc3-43b6-8b69-3a909ca600cb',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "PATCH /provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/your-appointment-id/cancel HTTP/1.1" 404 213 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "POST /providers/413e2abf-bfc3-43b6-8b69-3a909ca600cb/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["413e2abf-bfc3-43b6-8b69-3a909ca600cb"], duration: 49ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: f9b814a6-4e6f-47ff-be37-a5dec9c61cbf)',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Z3t0dBVyqR4cYBpwGvbbbOvtDEWq4ht8wo9gJalWek3BTEKsljcLK",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'User registered successfully: 1c2754fe-962c-426d-b44d-4b9ef2bd7c09',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:21:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:52'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 220ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "GET /provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 404 198 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 170ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "PATCH /provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/your-appointment-id/cancel HTTP/1.1" 404 213 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 3c02ea4b-340e-480f-a00b-8ce6f1407035)',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$z9IO27fg7v5z9k0.cqIiKO5NwDqJ7fJX7rMjBnpWuMTn1QKh7Ptr.",""], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'User registered successfully: 77a6095a-1177-44b1-b71c-e49373156f8f',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:54 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:22:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:22:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:22:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:22:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 91ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 171ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 51371952-f43f-4a8c-acb3-46df4aff693b)',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$PbqF2Fd2yKmcivMFpzsGq.8S35hTBvgo3K28MEnQNLXxHRO9Og9DG",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'User registered successfully: 7278d71c-6fcf-4033-9c7f-306cbfbdc383',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:36:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:40:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 168ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:41 +0000] "POST /auth/register HTTP/1.1" 400 112 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 5c8f70c3-750f-44f8-8f13-feffabeccc1f)',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:42 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:42 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:42 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 195ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/register HTTP/1.1" 400 50 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9aa00048-d7ec-48ea-9d01-2e8b1be3485b)',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:45:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855129152@example.com"], duration: 107ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 204ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a5d00e9e-b8cf-4097-ba49-88d453b80915)',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855129152@example.com","$2b$10$peP3asj5yFgYdmSqwCY68uZ9UgFTfJJTHlg5RcKRIZ9Hb3Z3jFzSu",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'User registered successfully: 2eedce6a-4173-4f8b-8b6d-77244adce57b',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:46:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:46:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 176ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855179064@example.com"], duration: 130ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 65581752-5b40-48ab-92b1-8e8e4d822af1)',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855179064@example.com","$2b$10$rU0qvl/7ZVusAaCFA6oV/u1EPXN2TjTQPvs9PrzgG/cAnON8W.YfO",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'User registered successfully: cf382a23-6365-433d-85ec-f34af093c34f',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:47:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:47:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:47:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:47:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 178ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855244972@example.com"], duration: 114ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 5c7faa6c-3262-44c0-a3f9-1961be597388)',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 15ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855244972@example.com","$2b$10$YYcOr.igksi6TQ.Z5Gl7WenxEg5oYUFzxsbX7wXnHKEsmIP7K7zJ6",""], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'User registered successfully: 31863b25-9e4d-464c-b95a-3eefd6da3719',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 158ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855287747@example.com"], duration: 109ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: d7c30e8c-c56c-4b7a-b4c2-abfbfd77a7a9)',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855287747@example.com","$2b$10$VWVkvqt3gMDS4PZ4slEMW.d19llSXEQVNh2DQocgpUXV9YF8HvbMO",""], duration: 42ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'User registered successfully: 0de920bc-d5d5-4945-b286-3e64cc9fa878',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:58:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 180ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 171ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855942725@example.com"], duration: 111ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /providers/3dbd7c08-3a6f-4717-9055-74c251e0371d/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["3dbd7c08-3a6f-4717-9055-74c251e0371d"], duration: 48ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a85b5f3c-8680-419e-add5-361e2f115905)',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855942725@example.com","$2b$10$ITtuZ1aj4BYmpn.1OoQxQewvV/6pUR3KClblTjSFIZiPbIfjQJGv.",""], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'User registered successfully: 500fd9ee-d359-40ec-829f-6fdcf78be61d',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:01:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 136ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 161ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856113906@example.com"], duration: 115ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /providers/b1dbd73e-9f37-4500-92da-43a2ad884e21/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["b1dbd73e-9f37-4500-92da-43a2ad884e21"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9e6df675-b2b2-4af6-8305-b3b00552039d)',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856113906@example.com","$2b$10$b0QyMH2uIrJv2qM0huQAc.pSiI8GHLyXLtwQgO3j01gGcwQp5K66u",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'User registered successfully: ad888b76-956e-43d7-8a41-b137329480f0',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856176773@example.com"], duration: 116ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 221ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 160ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /providers/00993922-01d1-4915-892b-f70fb5f9171e/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["00993922-01d1-4915-892b-f70fb5f9171e"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: b96894de-1a93-487e-9095-c5a1ff2e0554)',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856176773@example.com","$2b$10$fdizrXEboOuswSP81if8ROwlgUot2FNnzZ5qAyi1A9SamqSu/Z9uu",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'User registered successfully: a2860ba7-b24d-49ac-b482-c116c8c033ae',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:04:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856302792@example.com"], duration: 113ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 191ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 151ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /providers/9d0e9d92-2d8b-474c-ac71-014f7a5db49a/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: fa5e40d0-2fde-4ec2-858c-7daf5fd6ad9d)',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["9d0e9d92-2d8b-474c-ac71-014f7a5db49a"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856302792@example.com","$2b$10$qfzOXcDqstUrJ.smkDf5Te7f5ZtIOqhSpjxYN0vOebhBlJSwFHlCG",""], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'User registered successfully: 04e5ae2f-b411-46fd-a847-55a9fa671cf9',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 55ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 8ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 185ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 218ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856510892@example.com"], duration: 130ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /providers/39d26026-0ace-4ea5-bd78-b9df7c4e8bc9/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["39d26026-0ace-4ea5-bd78-b9df7c4e8bc9"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a0db5e47-62d1-43b1-b7b0-12d6bf1f7a50)',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856510892@example.com","$2b$10$CtOg1dC9d1mt54K6QkjE/uJa7cXwGjdZ6.rZ.uxogKPPEmmPaycrW",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'User registered successfully: a3c1bb0f-70a0-4887-a5e8-0089c1e152a1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:46'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856594047@example.com"], duration: 100ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 167ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 149ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /providers/f75082c2-125c-4a78-be94-ca005ac2cfcb/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f75082c2-125c-4a78-be94-ca005ac2cfcb"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: cc7f9688-61b7-4faf-adb0-c16e6fb17286)',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856594047@example.com","$2b$10$l3HqleUHHf7qTEoJba0t2ezLI9xMN60x7jRdb1QcZpOj0mY6G2E6i",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'User registered successfully: 7f1eb2e6-6e57-458c-9e2d-ff8528f87907',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 199ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 212ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /providers/298e4f98-0d0f-4dcf-ad25-5c6c4c0cced2/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["298e4f98-0d0f-4dcf-ad25-5c6c4c0cced2"], duration: 50ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856753395@example.com"], duration: 188ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: b9fe5d0f-5aad-4225-a925-141727cdf164)',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856753395@example.com","$2b$10$4iIGHUuZ2skE5vl9Bh8WWOaQm19FvoQMn7Xykv78jWBLxJmLQJuB6",""], duration: 35ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: 'User registered successfully: 600de175-2bec-493c-ae5e-58f0e8e8acb2',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:34 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 173ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745857155526@example.com"], duration: 118ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 174ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:15 +0000] "POST /providers/b2f67f72-a28c-47d0-8762-21fcffbdd8bd/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: cdc84805-24fa-4bc5-9978-b5b30ee3eff1)',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:15 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["b2f67f72-a28c-47d0-8762-21fcffbdd8bd"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:16 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:16 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745857155526@example.com","$2b$10$Hnae6YHCHwWWPvOuXFBrj.zXrJjxnHgrBamCOseV2NDWNLP1UW/R6",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'User registered successfully: f2773c96-87bf-4735-a7d1-4fd4cd0d9a19',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:16 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 234ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /providers/7b895143-f470-43bf-95db-dedf380cd9d5/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7b895143-f470-43bf-95db-dedf380cd9d5"], duration: 26ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 325ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: c7735bf5-78b9-4393-8688-60f643cf3921)',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745857221443@example.com"], duration: 161ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745857221443@example.com","$2b$10$oE0avMVNkrEzgPEaxcPRKecDNgowuvSJJ2TqcKLHE6LETjGFQ0AoS",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:22'
}
{
  message: 'User registered successfully: 244e25c7-9131-4ef2-ae1a-7ac01acc11db',
  level: 'info',
  timestamp: '2025-04-28 17:20:22'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:22 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 172ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 132ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745857533800@example.com"], duration: 124ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /providers/c46c8ed8-fd22-424c-83b7-4bbef188b85c/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9fdf9a4b-1396-4fab-8782-ba574b434517)',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c46c8ed8-fd22-424c-83b7-4bbef188b85c"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 26ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745857533800@example.com","$2b$10$/pB1lF5hbx9Nip4GuLzUKex5dKmakCe796SQru2FT14TLsflZlR6K",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'User registered successfully: 84f8f28a-54dc-4ef1-8e42-070081060591',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 171ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 185ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745858670965@example.com"], duration: 131ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6afa7d52-88a7-4eb2-b9a3-839778429d8c"], duration: 28ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a2c46e30-d368-4a78-99f6-88d63fe1f3c3)',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 42ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745858670965@example.com","$2b$10$BAQXyn3nXVbAGWWQh.pn.ekOivI.Yxx0/OhJsKjoAUUdAYZo7pgGW",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'User registered successfully: ed00b528-ee7d-4901-bc4e-f6271fa4604f',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 179ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 145ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["46bc2ea5-faf6-451b-b2c7-e01424a9372d"], duration: 27ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745859067510@example.com"], duration: 129ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 876202df-1be7-4004-a3a7-0d7274ffc8bd)',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:07 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:07 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:07 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745859067510@example.com","$2b$10$kY6Uv81/NjU9H1pFF6vCoO1PJ0EVsKXoRpDlPpozYwUdDmw2mrF96",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: 'User registered successfully: 0ef8bee2-310a-4088-ad98-899f549c0496',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:08 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:52:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:52:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:52:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 149ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:52:26'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["15faf609-17e0-4c85-b97e-db7327aa4e9a"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:52:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 65ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:53:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 132ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["690381b1-027c-492b-8910-76755cf079f7"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:54:04 +0000] "POST /providers/c0e33914-6223-42b4-9068-4f7dd360cd6a/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c0e33914-6223-42b4-9068-4f7dd360cd6a"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 30ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:59:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 143ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:59:29 +0000] "POST /timeslot/providers/ce87d070-772f-40de-acc4-07de29a18023/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["ce87d070-772f-40de-acc4-07de29a18023"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:00:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:00:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 139ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:00:05'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:00:06 +0000] "POST /timeslot/providers/7fce423b-6298-4fc9-8322-f1771c088979/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:00:06'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7fce423b-6298-4fc9-8322-f1771c088979"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:00:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:00:33 +0000] "POST /timeslot/providers/f9c27d35-ca95-4b18-b872-d9ed705353d8/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f9c27d35-ca95-4b18-b872-d9ed705353d8"], duration: 48ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 48ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 114ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:02:08 +0000] "POST /timeslot/providers/372a19f9-1658-4205-9378-9330d246cc47/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["372a19f9-1658-4205-9378-9330d246cc47"], duration: 42ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:12:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:12:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 184ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:12:52 +0000] "POST /timeslot/providers/c8d90a2a-7b08-461d-a1b6-43b280991626/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c8d90a2a-7b08-461d-a1b6-43b280991626"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:19:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 12ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 143ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:19:35 +0000] "POST /timeslot/providers/368e934c-0408-4222-9b9a-5128ddab96bc/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["368e934c-0408-4222-9b9a-5128ddab96bc"], duration: 44ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:20:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 136ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:20:42 +0000] "POST /timeslot/providers/30b3ed50-dbbb-49a6-9be5-bf888df1e305/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["30b3ed50-dbbb-49a6-9be5-bf888df1e305"], duration: 44ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:04:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:04:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 247ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:04:14'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a4fb9c0f-b6ed-4782-809a-40bf0ff159c6"], duration: 52ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:04:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 147ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:05:32 +0000] "POST /timeslot/providers/1461cd80-b74c-4a7e-8427-67e24954ca11/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1461cd80-b74c-4a7e-8427-67e24954ca11"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:05:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:06:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 175ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:06:52 +0000] "POST /timeslot/providers/51772082-6c28-4d08-9f97-e0f8996fab33/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["51772082-6c28-4d08-9f97-e0f8996fab33"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:11:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:11:10'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 234ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:11:10'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:11:11 +0000] "POST /timeslot/providers/1436042b-169e-4e19-bb6c-0070b3fb67dc/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:11:11'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1436042b-169e-4e19-bb6c-0070b3fb67dc"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:11:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:15:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:15:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 156ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["fd86006c-49c3-40ca-aa63-f78c4dc9b793","2025-05-01","09:00:00","09:30:00"], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["fd86006c-49c3-40ca-aa63-f78c4dc9b793","2025-05-01","09:00:00","09:30:00"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Time slot created Successfully by the user fd86006c-49c3-40ca-aa63-f78c4dc9b793 : c67eb7bf-90a9-4327-b347-a4a0cb5395b1',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:15:27 +0000] "POST /timeslots/providers/fd86006c-49c3-40ca-aa63-f78c4dc9b793/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["c67eb7bf-90a9-4327-b347-a4a0cb5395b1"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fd86006c-49c3-40ca-aa63-f78c4dc9b793"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:16:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:16:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 175ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["c3fe1a82-fdb6-4971-96db-a2f2d5b3504a","2025-05-01","09:00:00","09:30:00"], duration: 9ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["c3fe1a82-fdb6-4971-96db-a2f2d5b3504a","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Time slot created Successfully by the user c3fe1a82-fdb6-4971-96db-a2f2d5b3504a : 8ed27693-5f7e-4598-9e21-9443afb06447',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:18:57 +0000] "POST /timeslots/providers/c3fe1a82-fdb6-4971-96db-a2f2d5b3504a/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8ed27693-5f7e-4598-9e21-9443afb06447"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:18:58'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c3fe1a82-fdb6-4971-96db-a2f2d5b3504a"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:18:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 125ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["137fd17e-10e6-4be7-aefc-cf008f9345aa","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["137fd17e-10e6-4be7-aefc-cf008f9345aa","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Time slot created Successfully by the user 137fd17e-10e6-4be7-aefc-cf008f9345aa : 0654e7f4-4be4-4281-8e71-0455d0a38331',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:26:57 +0000] "POST /timeslots/providers/137fd17e-10e6-4be7-aefc-cf008f9345aa/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["0654e7f4-4be4-4281-8e71-0455d0a38331"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["137fd17e-10e6-4be7-aefc-cf008f9345aa"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:27:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 194ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d","2025-05-01","09:00:00","09:30:00"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Time slot created Successfully by the user fdd49d77-09be-4b82-bc58-2bdb3d26345d : 3e611054-cc56-4678-a2a9-e57251e48d64',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:27:40 +0000] "POST /timeslots/providers/fdd49d77-09be-4b82-bc58-2bdb3d26345d/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:27:40 +0000] "GET /timeslots/providers/fdd49d77-09be-4b82-bc58-2bdb3d26345d/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["3e611054-cc56-4678-a2a9-e57251e48d64"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 171ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["e10a79fa-2668-4221-b562-01b5938869f8","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["e10a79fa-2668-4221-b562-01b5938869f8","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Time slot created Successfully by the user e10a79fa-2668-4221-b562-01b5938869f8 : d0c6eba3-a54c-4568-914e-b07324859353',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:29:23 +0000] "POST /timeslots/providers/e10a79fa-2668-4221-b562-01b5938869f8/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'd0c6eba3-a54c-4568-914e-b07324859353',
    provider_id: 'e10a79fa-2668-4221-b562-01b5938869f8',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:29:23',
    updated_at: '2025-04-29 07:29:23'
  },
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e10a79fa-2668-4221-b562-01b5938869f8"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:29:23 +0000] "GET /timeslots/providers/e10a79fa-2668-4221-b562-01b5938869f8/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  slots: [
    {
      day: '2025-04-30T23:00:00.000Z',
      start_time: '09:00:00',
      end_time: '09:30:00',
      is_booked: false,
      created_at: '2025-04-29 07:29:23',
      updated_at: '2025-04-29 07:29:23'
    }
  ],
  level: 'info',
  message: 'List of created time slots:',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["d0c6eba3-a54c-4568-914e-b07324859353"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["e10a79fa-2668-4221-b562-01b5938869f8"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:30:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:30:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 139ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4","2025-05-01","09:00:00","09:30:00"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Time slot created Successfully by the user d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4 : 85126e6d-d82e-4f8e-817a-0561e047a86f',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:30:48 +0000] "POST /timeslots/providers/d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '85126e6d-d82e-4f8e-817a-0561e047a86f',
    provider_id: 'd30f4bd6-7ba7-4e8a-a542-c5efe11c47c4',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:30:48',
    updated_at: '2025-04-29 07:30:48'
  },
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:30:48 +0000] "GET /timeslots/providers/d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["85126e6d-d82e-4f8e-817a-0561e047a86f"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:31:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:31:38'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:31:38'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8","2025-05-01","09:00:00","09:30:00"], duration: 9ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Time slot created Successfully by the user 5d8a72ac-0ceb-4225-80df-d03b55c1dac8 : bcaab227-f3c5-4140-9505-aa4381053ddd',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:31:39 +0000] "POST /timeslots/providers/5d8a72ac-0ceb-4225-80df-d03b55c1dac8/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'bcaab227-f3c5-4140-9505-aa4381053ddd',
    provider_id: '5d8a72ac-0ceb-4225-80df-d03b55c1dac8',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:31:39',
    updated_at: '2025-04-29 07:31:39'
  },
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:31:39 +0000] "GET /timeslots/providers/5d8a72ac-0ceb-4225-80df-d03b55c1dac8/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:31:39',
        updated_at: '2025-04-29 07:31:39'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["bcaab227-f3c5-4140-9505-aa4381053ddd"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:31:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 48ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:32:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 65ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 125ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef","2025-05-01","09:00:00","09:30:00"], duration: 22ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef","2025-05-01","09:00:00","09:30:00"], duration: 15ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Time slot created Successfully by the user f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef : a494d2e9-80af-4a1f-97b2-d25b4a796065',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:32:15 +0000] "POST /timeslots/providers/f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'a494d2e9-80af-4a1f-97b2-d25b4a796065',
    provider_id: 'f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:32:15',
    updated_at: '2025-04-29 07:32:15'
  },
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:32:15 +0000] "GET /timeslots/providers/f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:32:15',
        updated_at: '2025-04-29 07:32:15'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["a494d2e9-80af-4a1f-97b2-d25b4a796065"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:33:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:33:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 146ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3","2025-05-01","09:00:00","09:30:00"], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3","2025-05-01","09:00:00","09:30:00"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Time slot created Successfully by the user 5dfae5de-d47c-4287-9dd1-2801d16a93b3 : 11157ace-95b0-467a-b436-a5344e1a64a7',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:33:08 +0000] "POST /timeslots/providers/5dfae5de-d47c-4287-9dd1-2801d16a93b3/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '11157ace-95b0-467a-b436-a5344e1a64a7',
    provider_id: '5dfae5de-d47c-4287-9dd1-2801d16a93b3',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:33:08',
    updated_at: '2025-04-29 07:33:08'
  },
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:33:08 +0000] "GET /timeslots/providers/5dfae5de-d47c-4287-9dd1-2801d16a93b3/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:33:08',
        updated_at: '2025-04-29 07:33:08'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["11157ace-95b0-467a-b436-a5344e1a64a7"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:09'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:34:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:34:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:34:23'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:34:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250","2025-05-01","09:00:00","09:30:00"], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250","2025-05-01","09:00:00","09:30:00"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Time slot created Successfully by the user 80df618f-0b8e-4fa1-8f87-9494ccffd250 : 4d02b4d9-90ac-411b-a3e1-d3de3b0f339c',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:34:24 +0000] "POST /timeslots/providers/80df618f-0b8e-4fa1-8f87-9494ccffd250/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '4d02b4d9-90ac-411b-a3e1-d3de3b0f339c',
    provider_id: '80df618f-0b8e-4fa1-8f87-9494ccffd250',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:34:24',
    updated_at: '2025-04-29 07:34:24'
  },
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:34:24 +0000] "GET /timeslots/providers/80df618f-0b8e-4fa1-8f87-9494ccffd250/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:34:24',
        updated_at: '2025-04-29 07:34:24'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["4d02b4d9-90ac-411b-a3e1-d3de3b0f339c"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:37:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('View..., params: undefined, duration: 129ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time, status)\n' +
    `      VALUES ($1, '20..., params: ["69ee8d5f-924b-4f3c-b64f-3caef54dbfb8"], error: column "status" of relation "time_slots" does not exist}`,
  level: 'error',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE provider_id = $1..., params: ["69ee8d5f-924b-4f3c-b64f-3caef54dbfb8"], duration: 55ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["69ee8d5f-924b-4f3c-b64f-3caef54dbfb8"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:37:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:38:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:38:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:38:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:38:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:38:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:38:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('View..., params: undefined, duration: 100ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["f3092252-c98e-4e0e-9181-4865e448a807"], error: INSERT has more expressions than target columns}`,
  level: 'error',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE provider_id = $1..., params: ["f3092252-c98e-4e0e-9181-4865e448a807"], duration: 55ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f3092252-c98e-4e0e-9181-4865e448a807"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:39:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:39:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:39:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:39:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:39:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 130ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:39:43'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["8fe5caae-3ad3-4c8b-a2ec-026deb61616b","2025-05-01","09:00:00","09:30:00"], duration: 22ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:39:43'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["8fe5caae-3ad3-4c8b-a2ec-026deb61616b","2025-05-01","09:00:00","09:30:00"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:39:43'
}
{
  message: 'Time slot created Successfully by the user 8fe5caae-3ad3-4c8b-a2ec-026deb61616b : 8b906633-02ec-407a-aa6c-dc6725a811dc',
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:39:44 +0000] "POST /timeslots/providers/8fe5caae-3ad3-4c8b-a2ec-026deb61616b/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '8b906633-02ec-407a-aa6c-dc6725a811dc',
    provider_id: '8fe5caae-3ad3-4c8b-a2ec-026deb61616b',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:39:43',
    updated_at: '2025-04-29 07:39:43'
  },
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["8fe5caae-3ad3-4c8b-a2ec-026deb61616b"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:39:44 +0000] "GET /timeslots/providers/8fe5caae-3ad3-4c8b-a2ec-026deb61616b/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:39:43',
        updated_at: '2025-04-29 07:39:43'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8b906633-02ec-407a-aa6c-dc6725a811dc"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["8fe5caae-3ad3-4c8b-a2ec-026deb61616b"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:39:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:46:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:46:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:46:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 148ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["1e8add2d-efda-4c22-a285-86ead1077f99","2025-05-01","09:00:00","09:30:00"], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["1e8add2d-efda-4c22-a285-86ead1077f99","2025-05-01","09:00:00","09:30:00"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Time slot created Successfully by the user 1e8add2d-efda-4c22-a285-86ead1077f99 : 7e298172-6d44-472e-b5ba-ed786ee1addf',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:46:54 +0000] "POST /timeslots/providers/1e8add2d-efda-4c22-a285-86ead1077f99/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '7e298172-6d44-472e-b5ba-ed786ee1addf',
    provider_id: '1e8add2d-efda-4c22-a285-86ead1077f99',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:46:54',
    updated_at: '2025-04-29 07:46:54'
  },
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["1e8add2d-efda-4c22-a285-86ead1077f99"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:46:54 +0000] "GET /timeslots/providers/1e8add2d-efda-4c22-a285-86ead1077f99/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:46:54',
        updated_at: '2025-04-29 07:46:54'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:46:54 +0000] "PUT /timeslot/providers/1e8add2d-efda-4c22-a285-86ead1077f99/update-timeslot/7e298172-6d44-472e-b5ba-ed786ee1addf HTTP/1.1" 404 247 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["7e298172-6d44-472e-b5ba-ed786ee1addf"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1e8add2d-efda-4c22-a285-86ead1077f99"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:46:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:47:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:47:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 135ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["a85f9770-725c-49b8-a7b1-2c12f084ef8a","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["a85f9770-725c-49b8-a7b1-2c12f084ef8a","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Time slot created Successfully by the user a85f9770-725c-49b8-a7b1-2c12f084ef8a : 8ce400d0-7766-4b98-9962-e83e8a768d00',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:47:23 +0000] "POST /timeslots/providers/a85f9770-725c-49b8-a7b1-2c12f084ef8a/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '8ce400d0-7766-4b98-9962-e83e8a768d00',
    provider_id: 'a85f9770-725c-49b8-a7b1-2c12f084ef8a',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:47:23',
    updated_at: '2025-04-29 07:47:23'
  },
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["a85f9770-725c-49b8-a7b1-2c12f084ef8a"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:47:23 +0000] "GET /timeslots/providers/a85f9770-725c-49b8-a7b1-2c12f084ef8a/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:47:23',
        updated_at: '2025-04-29 07:47:23'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","8ce400d0-7766-4b98-9962-e83e8a768d00","a85f9770-725c-49b8-a7b1-2c12f084ef8a"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Slot 8ce400d0-7766-4b98-9962-e83e8a768d00 updated Successfully by provider a85f9770-725c-49b8-a7b1-2c12f084ef8a',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:47:23 +0000] "PUT /timeslots/providers/a85f9770-725c-49b8-a7b1-2c12f084ef8a/update-timeslot/8ce400d0-7766-4b98-9962-e83e8a768d00 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8ce400d0-7766-4b98-9962-e83e8a768d00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a85f9770-725c-49b8-a7b1-2c12f084ef8a"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:47:23'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:48:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 126ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["a040da4d-32fb-4eec-8af1-f93908832c89","2025-05-01","09:00:00","09:30:00"], duration: 9ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["a040da4d-32fb-4eec-8af1-f93908832c89","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Time slot created Successfully by the user a040da4d-32fb-4eec-8af1-f93908832c89 : dfe22857-07d4-4cab-a3fe-9f3be8c3d013',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:48:21 +0000] "POST /timeslots/providers/a040da4d-32fb-4eec-8af1-f93908832c89/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'dfe22857-07d4-4cab-a3fe-9f3be8c3d013',
    provider_id: 'a040da4d-32fb-4eec-8af1-f93908832c89',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:48:21',
    updated_at: '2025-04-29 07:48:21'
  },
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["a040da4d-32fb-4eec-8af1-f93908832c89"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:48:21 +0000] "GET /timeslots/providers/a040da4d-32fb-4eec-8af1-f93908832c89/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:48:21',
        updated_at: '2025-04-29 07:48:21'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","dfe22857-07d4-4cab-a3fe-9f3be8c3d013","a040da4d-32fb-4eec-8af1-f93908832c89"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Slot dfe22857-07d4-4cab-a3fe-9f3be8c3d013 updated Successfully by provider a040da4d-32fb-4eec-8af1-f93908832c89',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:48:21 +0000] "PUT /timeslots/providers/a040da4d-32fb-4eec-8af1-f93908832c89/update-timeslot/dfe22857-07d4-4cab-a3fe-9f3be8c3d013 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["dfe22857-07d4-4cab-a3fe-9f3be8c3d013"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a040da4d-32fb-4eec-8af1-f93908832c89"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:48:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:48:46'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:48:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:49:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 106ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:49:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 9ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:49:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:49:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 161ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["cbdf2436-154e-4647-b567-03ec5be54bb2","2025-05-01","09:00:00","09:30:00"], duration: 9ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["cbdf2436-154e-4647-b567-03ec5be54bb2","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Time slot created Successfully by the user cbdf2436-154e-4647-b567-03ec5be54bb2 : b3066d80-2847-4d8c-beb7-8aaa614c722c',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:49:13 +0000] "POST /timeslots/providers/cbdf2436-154e-4647-b567-03ec5be54bb2/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'b3066d80-2847-4d8c-beb7-8aaa614c722c',
    provider_id: 'cbdf2436-154e-4647-b567-03ec5be54bb2',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:49:13',
    updated_at: '2025-04-29 07:49:13'
  },
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["cbdf2436-154e-4647-b567-03ec5be54bb2"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:49:13 +0000] "GET /timeslots/providers/cbdf2436-154e-4647-b567-03ec5be54bb2/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:49:13',
        updated_at: '2025-04-29 07:49:13'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","b3066d80-2847-4d8c-beb7-8aaa614c722c","cbdf2436-154e-4647-b567-03ec5be54bb2"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Slot b3066d80-2847-4d8c-beb7-8aaa614c722c updated Successfully by provider cbdf2436-154e-4647-b567-03ec5be54bb2',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:49:13 +0000] "PUT /timeslots/providers/cbdf2436-154e-4647-b567-03ec5be54bb2/update-timeslot/b3066d80-2847-4d8c-beb7-8aaa614c722c HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["b3066d80-2847-4d8c-beb7-8aaa614c722c"], duration: 20ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["cbdf2436-154e-4647-b567-03ec5be54bb2"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:49:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:56:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["b70beebf-77af-41a5-b3e8-7297bb6f8244","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["b70beebf-77af-41a5-b3e8-7297bb6f8244","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Time slot created Successfully by the user b70beebf-77af-41a5-b3e8-7297bb6f8244 : 97b29cb8-c2dd-45a6-a69c-8d5d2765b6c7',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:56:22 +0000] "POST /timeslots/providers/b70beebf-77af-41a5-b3e8-7297bb6f8244/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '97b29cb8-c2dd-45a6-a69c-8d5d2765b6c7',
    provider_id: 'b70beebf-77af-41a5-b3e8-7297bb6f8244',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:56:22',
    updated_at: '2025-04-29 07:56:22'
  },
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["b70beebf-77af-41a5-b3e8-7297bb6f8244"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:56:22 +0000] "GET /timeslots/providers/b70beebf-77af-41a5-b3e8-7297bb6f8244/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:56:22',
        updated_at: '2025-04-29 07:56:22'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","97b29cb8-c2dd-45a6-a69c-8d5d2765b6c7","b70beebf-77af-41a5-b3e8-7297bb6f8244"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Slot 97b29cb8-c2dd-45a6-a69c-8d5d2765b6c7 updated Successfully by provider b70beebf-77af-41a5-b3e8-7297bb6f8244',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:56:22 +0000] "PUT /timeslots/providers/b70beebf-77af-41a5-b3e8-7297bb6f8244/update-timeslot/97b29cb8-c2dd-45a6-a69c-8d5d2765b6c7 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["97b29cb8-c2dd-45a6-a69c-8d5d2765b6c7"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["b70beebf-77af-41a5-b3e8-7297bb6f8244"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:56:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:02:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 51ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["469e5b01-70a6-4248-bd4d-ad3ee40ee54d","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["469e5b01-70a6-4248-bd4d-ad3ee40ee54d","2025-05-01","09:00:00","09:30:00"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Time slot created Successfully by the user 469e5b01-70a6-4248-bd4d-ad3ee40ee54d : 99426ca0-22c7-4564-8f66-5657b1df7a59',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:02:07 +0000] "POST /timeslots/providers/469e5b01-70a6-4248-bd4d-ad3ee40ee54d/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '99426ca0-22c7-4564-8f66-5657b1df7a59',
    provider_id: '469e5b01-70a6-4248-bd4d-ad3ee40ee54d',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:02:07',
    updated_at: '2025-04-29 08:02:07'
  },
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["469e5b01-70a6-4248-bd4d-ad3ee40ee54d"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:02:07 +0000] "GET /timeslots/providers/469e5b01-70a6-4248-bd4d-ad3ee40ee54d/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:02:07',
        updated_at: '2025-04-29 08:02:07'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","99426ca0-22c7-4564-8f66-5657b1df7a59","469e5b01-70a6-4248-bd4d-ad3ee40ee54d"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Slot 99426ca0-22c7-4564-8f66-5657b1df7a59 updated Successfully by provider 469e5b01-70a6-4248-bd4d-ad3ee40ee54d',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:02:07 +0000] "PUT /timeslots/providers/469e5b01-70a6-4248-bd4d-ad3ee40ee54d/update-timeslot/99426ca0-22c7-4564-8f66-5657b1df7a59 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["99426ca0-22c7-4564-8f66-5657b1df7a59"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["469e5b01-70a6-4248-bd4d-ad3ee40ee54d"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:02:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:07:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 76ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["43da3f68-c41f-48c3-9a5c-09fec58bd893","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["43da3f68-c41f-48c3-9a5c-09fec58bd893","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Time slot created Successfully by the user 43da3f68-c41f-48c3-9a5c-09fec58bd893 : 8cb3f3f0-dd4e-4725-b236-ac48219e1429',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:07:45 +0000] "POST /timeslots/providers/43da3f68-c41f-48c3-9a5c-09fec58bd893/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '8cb3f3f0-dd4e-4725-b236-ac48219e1429',
    provider_id: '43da3f68-c41f-48c3-9a5c-09fec58bd893',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:07:45',
    updated_at: '2025-04-29 08:07:45'
  },
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["43da3f68-c41f-48c3-9a5c-09fec58bd893"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:07:45 +0000] "GET /timeslots/providers/43da3f68-c41f-48c3-9a5c-09fec58bd893/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:07:45',
        updated_at: '2025-04-29 08:07:45'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","8cb3f3f0-dd4e-4725-b236-ac48219e1429","43da3f68-c41f-48c3-9a5c-09fec58bd893"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Slot 8cb3f3f0-dd4e-4725-b236-ac48219e1429 updated Successfully by provider 43da3f68-c41f-48c3-9a5c-09fec58bd893',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:07:45 +0000] "PUT /timeslots/providers/43da3f68-c41f-48c3-9a5c-09fec58bd893/update-timeslot/8cb3f3f0-dd4e-4725-b236-ac48219e1429 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: {
    id: '8cb3f3f0-dd4e-4725-b236-ac48219e1429',
    provider_id: '43da3f68-c41f-48c3-9a5c-09fec58bd893',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:07:45',
    updated_at: '2025-04-29 08:07:45'
  },
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8cb3f3f0-dd4e-4725-b236-ac48219e1429"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["43da3f68-c41f-48c3-9a5c-09fec58bd893"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:07:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:09:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 75ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["8d0c5d93-df25-4242-aaa5-8e5fb438c9c1","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["8d0c5d93-df25-4242-aaa5-8e5fb438c9c1","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Time slot created Successfully by the user 8d0c5d93-df25-4242-aaa5-8e5fb438c9c1 : d1cd9c4e-af5c-4369-8f0d-14a014605400',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:09:15 +0000] "POST /timeslots/providers/8d0c5d93-df25-4242-aaa5-8e5fb438c9c1/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'd1cd9c4e-af5c-4369-8f0d-14a014605400',
    provider_id: '8d0c5d93-df25-4242-aaa5-8e5fb438c9c1',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:09:15',
    updated_at: '2025-04-29 08:09:15'
  },
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["8d0c5d93-df25-4242-aaa5-8e5fb438c9c1"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:09:15 +0000] "GET /timeslots/providers/8d0c5d93-df25-4242-aaa5-8e5fb438c9c1/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:09:15',
        updated_at: '2025-04-29 08:09:15'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","d1cd9c4e-af5c-4369-8f0d-14a014605400","8d0c5d93-df25-4242-aaa5-8e5fb438c9c1"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Slot d1cd9c4e-af5c-4369-8f0d-14a014605400 updated Successfully by provider 8d0c5d93-df25-4242-aaa5-8e5fb438c9c1',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:09:15 +0000] "PUT /timeslots/providers/8d0c5d93-df25-4242-aaa5-8e5fb438c9c1/update-timeslot/d1cd9c4e-af5c-4369-8f0d-14a014605400 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: {
    id: 'd1cd9c4e-af5c-4369-8f0d-14a014605400',
    provider_id: '8d0c5d93-df25-4242-aaa5-8e5fb438c9c1',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:09:15',
    updated_at: '2025-04-29 08:09:15'
  },
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["d1cd9c4e-af5c-4369-8f0d-14a014605400"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["8d0c5d93-df25-4242-aaa5-8e5fb438c9c1"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:09:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:10:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 47ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["17b66914-eff8-45de-a8f5-cd77ee1fec4f","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["17b66914-eff8-45de-a8f5-cd77ee1fec4f","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Time slot created Successfully by the user 17b66914-eff8-45de-a8f5-cd77ee1fec4f : 6988e020-bfca-4bef-9405-91b31a9bb341',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:10:05 +0000] "POST /timeslots/providers/17b66914-eff8-45de-a8f5-cd77ee1fec4f/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '6988e020-bfca-4bef-9405-91b31a9bb341',
    provider_id: '17b66914-eff8-45de-a8f5-cd77ee1fec4f',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:10:05',
    updated_at: '2025-04-29 08:10:05'
  },
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["17b66914-eff8-45de-a8f5-cd77ee1fec4f"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:10:05 +0000] "GET /timeslots/providers/17b66914-eff8-45de-a8f5-cd77ee1fec4f/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:10:05',
        updated_at: '2025-04-29 08:10:05'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","6988e020-bfca-4bef-9405-91b31a9bb341","17b66914-eff8-45de-a8f5-cd77ee1fec4f"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Slot 6988e020-bfca-4bef-9405-91b31a9bb341 updated Successfully by provider 17b66914-eff8-45de-a8f5-cd77ee1fec4f',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:10:05 +0000] "PUT /timeslots/providers/17b66914-eff8-45de-a8f5-cd77ee1fec4f/update-timeslot/6988e020-bfca-4bef-9405-91b31a9bb341 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{ message: undefined, level: 'info', timestamp: '2025-04-29 08:10:05' }
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["6988e020-bfca-4bef-9405-91b31a9bb341"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["17b66914-eff8-45de-a8f5-cd77ee1fec4f"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:10:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:10:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:10:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 59ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["af28b2f4-7e86-443e-a234-3901392ab34c","2025-05-01","09:00:00","09:30:00"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["af28b2f4-7e86-443e-a234-3901392ab34c","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Time slot created Successfully by the user af28b2f4-7e86-443e-a234-3901392ab34c : 3e3f57c9-d32b-414c-9982-444b0f29a1c0',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:10:28 +0000] "POST /timeslots/providers/af28b2f4-7e86-443e-a234-3901392ab34c/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '3e3f57c9-d32b-414c-9982-444b0f29a1c0',
    provider_id: 'af28b2f4-7e86-443e-a234-3901392ab34c',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:10:28',
    updated_at: '2025-04-29 08:10:28'
  },
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["af28b2f4-7e86-443e-a234-3901392ab34c"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:10:28 +0000] "GET /timeslots/providers/af28b2f4-7e86-443e-a234-3901392ab34c/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:10:28',
        updated_at: '2025-04-29 08:10:28'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","3e3f57c9-d32b-414c-9982-444b0f29a1c0","af28b2f4-7e86-443e-a234-3901392ab34c"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Slot 3e3f57c9-d32b-414c-9982-444b0f29a1c0 updated Successfully by provider af28b2f4-7e86-443e-a234-3901392ab34c',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:10:28 +0000] "PUT /timeslots/providers/af28b2f4-7e86-443e-a234-3901392ab34c/update-timeslot/3e3f57c9-d32b-414c-9982-444b0f29a1c0 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: {
    id: '3e3f57c9-d32b-414c-9982-444b0f29a1c0',
    provider_id: 'af28b2f4-7e86-443e-a234-3901392ab34c',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:10:28',
    updated_at: '2025-04-29 08:10:28'
  },
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["3e3f57c9-d32b-414c-9982-444b0f29a1c0"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["af28b2f4-7e86-443e-a234-3901392ab34c"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:10:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:11:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 63ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["6fe9538f-7b3e-491e-af0d-9b41fd677190","2025-05-01","09:00:00","09:30:00"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["6fe9538f-7b3e-491e-af0d-9b41fd677190","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Time slot created Successfully by the user 6fe9538f-7b3e-491e-af0d-9b41fd677190 : 77ccf22f-1f84-4201-8093-f13da7090e3f',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:11:49 +0000] "POST /timeslots/providers/6fe9538f-7b3e-491e-af0d-9b41fd677190/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '77ccf22f-1f84-4201-8093-f13da7090e3f',
    provider_id: '6fe9538f-7b3e-491e-af0d-9b41fd677190',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:11:49',
    updated_at: '2025-04-29 08:11:49'
  },
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["6fe9538f-7b3e-491e-af0d-9b41fd677190"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:11:49 +0000] "GET /timeslots/providers/6fe9538f-7b3e-491e-af0d-9b41fd677190/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:11:49',
        updated_at: '2025-04-29 08:11:49'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","77ccf22f-1f84-4201-8093-f13da7090e3f","6fe9538f-7b3e-491e-af0d-9b41fd677190"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Slot 77ccf22f-1f84-4201-8093-f13da7090e3f updated Successfully by provider 6fe9538f-7b3e-491e-af0d-9b41fd677190',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:11:49 +0000] "PUT /timeslots/providers/6fe9538f-7b3e-491e-af0d-9b41fd677190/update-timeslot/77ccf22f-1f84-4201-8093-f13da7090e3f HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: {
    id: '77ccf22f-1f84-4201-8093-f13da7090e3f',
    provider_id: '6fe9538f-7b3e-491e-af0d-9b41fd677190',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:11:49',
    updated_at: '2025-04-29 08:11:49'
  },
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["77ccf22f-1f84-4201-8093-f13da7090e3f"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6fe9538f-7b3e-491e-af0d-9b41fd677190"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:11:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:13:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 36ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["08558e78-e84c-4e0a-bc79-85967da617ec","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["08558e78-e84c-4e0a-bc79-85967da617ec","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Time slot created Successfully by the user 08558e78-e84c-4e0a-bc79-85967da617ec : 81a32347-0c36-47c1-93a2-98adb82b56c6',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:13:36 +0000] "POST /timeslots/providers/08558e78-e84c-4e0a-bc79-85967da617ec/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '81a32347-0c36-47c1-93a2-98adb82b56c6',
    provider_id: '08558e78-e84c-4e0a-bc79-85967da617ec',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:13:36',
    updated_at: '2025-04-29 08:13:36'
  },
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["08558e78-e84c-4e0a-bc79-85967da617ec"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:13:36 +0000] "GET /timeslots/providers/08558e78-e84c-4e0a-bc79-85967da617ec/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:13:36',
        updated_at: '2025-04-29 08:13:36'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","81a32347-0c36-47c1-93a2-98adb82b56c6","08558e78-e84c-4e0a-bc79-85967da617ec"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Slot 81a32347-0c36-47c1-93a2-98adb82b56c6 updated Successfully by provider 08558e78-e84c-4e0a-bc79-85967da617ec',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:13:36 +0000] "PUT /timeslots/providers/08558e78-e84c-4e0a-bc79-85967da617ec/update-timeslot/81a32347-0c36-47c1-93a2-98adb82b56c6 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: {
    id: '81a32347-0c36-47c1-93a2-98adb82b56c6',
    provider_id: '08558e78-e84c-4e0a-bc79-85967da617ec',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:13:36',
    updated_at: '2025-04-29 08:13:36'
  },
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["81a32347-0c36-47c1-93a2-98adb82b56c6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["08558e78-e84c-4e0a-bc79-85967da617ec"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:13:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:14:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 60ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["c2e7129a-8595-4aca-bda2-dc29a084cdae","2025-05-01","09:00:00","09:30:00"], duration: 8ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["c2e7129a-8595-4aca-bda2-dc29a084cdae","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Time slot created Successfully by the user c2e7129a-8595-4aca-bda2-dc29a084cdae : e5732134-26a4-4112-8089-5af51efb6a15',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:14:17 +0000] "POST /timeslots/providers/c2e7129a-8595-4aca-bda2-dc29a084cdae/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'e5732134-26a4-4112-8089-5af51efb6a15',
    provider_id: 'c2e7129a-8595-4aca-bda2-dc29a084cdae',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:14:17',
    updated_at: '2025-04-29 08:14:17'
  },
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["c2e7129a-8595-4aca-bda2-dc29a084cdae"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:14:17 +0000] "GET /timeslots/providers/c2e7129a-8595-4aca-bda2-dc29a084cdae/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:14:17',
        updated_at: '2025-04-29 08:14:17'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","e5732134-26a4-4112-8089-5af51efb6a15","c2e7129a-8595-4aca-bda2-dc29a084cdae"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Slot e5732134-26a4-4112-8089-5af51efb6a15 updated Successfully by provider c2e7129a-8595-4aca-bda2-dc29a084cdae',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:14:17 +0000] "PUT /timeslots/providers/c2e7129a-8595-4aca-bda2-dc29a084cdae/update-timeslot/e5732134-26a4-4112-8089-5af51efb6a15 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["e5732134-26a4-4112-8089-5af51efb6a15"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c2e7129a-8595-4aca-bda2-dc29a084cdae"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:14:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 59ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["0279edcc-49c2-4b77-b56b-fead8583b3b7","2025-05-01","09:00:00","09:30:00"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["0279edcc-49c2-4b77-b56b-fead8583b3b7","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Time slot created Successfully by the user 0279edcc-49c2-4b77-b56b-fead8583b3b7 : b1188c61-4ef6-44fb-9368-74b2ced66113',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:15:38 +0000] "POST /timeslots/providers/0279edcc-49c2-4b77-b56b-fead8583b3b7/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'b1188c61-4ef6-44fb-9368-74b2ced66113',
    provider_id: '0279edcc-49c2-4b77-b56b-fead8583b3b7',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:15:38',
    updated_at: '2025-04-29 08:15:38'
  },
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["0279edcc-49c2-4b77-b56b-fead8583b3b7"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:15:38 +0000] "GET /timeslots/providers/0279edcc-49c2-4b77-b56b-fead8583b3b7/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:15:38',
        updated_at: '2025-04-29 08:15:38'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","b1188c61-4ef6-44fb-9368-74b2ced66113","0279edcc-49c2-4b77-b56b-fead8583b3b7"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Slot b1188c61-4ef6-44fb-9368-74b2ced66113 updated Successfully by provider 0279edcc-49c2-4b77-b56b-fead8583b3b7',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:15:38 +0000] "PUT /timeslots/providers/0279edcc-49c2-4b77-b56b-fead8583b3b7/update-timeslot/b1188c61-4ef6-44fb-9368-74b2ced66113 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["b1188c61-4ef6-44fb-9368-74b2ced66113"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["0279edcc-49c2-4b77-b56b-fead8583b3b7"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:15:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:16:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:16:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 56ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["4aa07232-f206-48d2-8564-ca3abe27a07b","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["4aa07232-f206-48d2-8564-ca3abe27a07b","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Time slot created Successfully by the user 4aa07232-f206-48d2-8564-ca3abe27a07b : 8b769a7a-f58b-4d32-9111-97b3ea5adfe2',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:16:45 +0000] "POST /timeslots/providers/4aa07232-f206-48d2-8564-ca3abe27a07b/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '8b769a7a-f58b-4d32-9111-97b3ea5adfe2',
    provider_id: '4aa07232-f206-48d2-8564-ca3abe27a07b',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:16:45',
    updated_at: '2025-04-29 08:16:45'
  },
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["4aa07232-f206-48d2-8564-ca3abe27a07b"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:16:45 +0000] "GET /timeslots/providers/4aa07232-f206-48d2-8564-ca3abe27a07b/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:16:45',
        updated_at: '2025-04-29 08:16:45'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","8b769a7a-f58b-4d32-9111-97b3ea5adfe2","4aa07232-f206-48d2-8564-ca3abe27a07b"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Slot 8b769a7a-f58b-4d32-9111-97b3ea5adfe2 updated Successfully by provider 4aa07232-f206-48d2-8564-ca3abe27a07b',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:16:45 +0000] "PUT /timeslots/providers/4aa07232-f206-48d2-8564-ca3abe27a07b/update-timeslot/8b769a7a-f58b-4d32-9111-97b3ea5adfe2 HTTP/1.1" 200 265 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: {
    id: '8b769a7a-f58b-4d32-9111-97b3ea5adfe2',
    provider_id: '4aa07232-f206-48d2-8564-ca3abe27a07b',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:16:45',
    updated_at: '2025-04-29 08:16:45'
  },
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8b769a7a-f58b-4d32-9111-97b3ea5adfe2"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["4aa07232-f206-48d2-8564-ca3abe27a07b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:16:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:19:20'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-29 08:19:25'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:19:25'
}
{
  message: 'Access denied: User ID 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 is not a provider',
  level: 'warn',
  timestamp: '2025-04-29 08:19:25'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:19:25 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:19:25'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-29 08:19:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:19:40'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 20ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:19:40'
}
{
  message: 'Access denied: User ID 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 is not a provider',
  level: 'warn',
  timestamp: '2025-04-29 08:19:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:19:40 +0000] "GET /appointment/provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:19:40'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-27","12:00:00","12:30:00"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-27","12:00:00","12:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: 'Time slot created Successfully by the user e1022995-d7f7-4ebc-98fd-cad361260475 : d1168cd1-497e-47d0-8028-88d558df0541',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:21:27 +0000] "POST /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/create-timeslots HTTP/1.1" 201 304 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:21:27'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:22:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:22:26'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:26'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-27","12:00:00","12:30:00","d1168cd1-497e-47d0-8028-88d558df0541","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:26'
}
{
  message: 'Slot d1168cd1-497e-47d0-8028-88d558df0541 updated Successfully by provider e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:22:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:22:26 +0000] "PUT /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/update-timeslot/d1168cd1-497e-47d0-8028-88d558df0541 HTTP/1.1" 200 323 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:22:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 32ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["8ddb6067-9010-4483-8cae-bebd6c8fc5c3","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["8ddb6067-9010-4483-8cae-bebd6c8fc5c3","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Time slot created Successfully by the user 8ddb6067-9010-4483-8cae-bebd6c8fc5c3 : 629ef9e8-9b3a-4856-a612-2a75053b2634',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:22:45 +0000] "POST /timeslots/providers/8ddb6067-9010-4483-8cae-bebd6c8fc5c3/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '629ef9e8-9b3a-4856-a612-2a75053b2634',
    provider_id: '8ddb6067-9010-4483-8cae-bebd6c8fc5c3',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:22:45',
    updated_at: '2025-04-29 08:22:45'
  },
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["8ddb6067-9010-4483-8cae-bebd6c8fc5c3"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:22:45 +0000] "GET /timeslots/providers/8ddb6067-9010-4483-8cae-bebd6c8fc5c3/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:22:45',
        updated_at: '2025-04-29 08:22:45'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","629ef9e8-9b3a-4856-a612-2a75053b2634","8ddb6067-9010-4483-8cae-bebd6c8fc5c3"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Slot 629ef9e8-9b3a-4856-a612-2a75053b2634 updated Successfully by provider 8ddb6067-9010-4483-8cae-bebd6c8fc5c3',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:22:45 +0000] "PUT /timeslots/providers/8ddb6067-9010-4483-8cae-bebd6c8fc5c3/update-timeslot/629ef9e8-9b3a-4856-a612-2a75053b2634 HTTP/1.1" 200 323 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'ime slot updated successfully',
  updatedSlot: {
    id: '629ef9e8-9b3a-4856-a612-2a75053b2634',
    provider_id: '8ddb6067-9010-4483-8cae-bebd6c8fc5c3',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:22:45',
    updated_at: '2025-04-29 08:22:45'
  },
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["629ef9e8-9b3a-4856-a612-2a75053b2634"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["8ddb6067-9010-4483-8cae-bebd6c8fc5c3"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:22:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:23:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:23:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:23:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 36ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["7932e6e3-6314-4d68-b9c5-21cdeba707df","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["7932e6e3-6314-4d68-b9c5-21cdeba707df","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Time slot created Successfully by the user 7932e6e3-6314-4d68-b9c5-21cdeba707df : 919dd66e-e355-4830-947a-ede1579a245a',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:23:07 +0000] "POST /timeslots/providers/7932e6e3-6314-4d68-b9c5-21cdeba707df/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '919dd66e-e355-4830-947a-ede1579a245a',
    provider_id: '7932e6e3-6314-4d68-b9c5-21cdeba707df',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:23:07',
    updated_at: '2025-04-29 08:23:07'
  },
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["7932e6e3-6314-4d68-b9c5-21cdeba707df"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:23:07 +0000] "GET /timeslots/providers/7932e6e3-6314-4d68-b9c5-21cdeba707df/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:23:07',
        updated_at: '2025-04-29 08:23:07'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","919dd66e-e355-4830-947a-ede1579a245a","7932e6e3-6314-4d68-b9c5-21cdeba707df"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Slot 919dd66e-e355-4830-947a-ede1579a245a updated Successfully by provider 7932e6e3-6314-4d68-b9c5-21cdeba707df',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:23:07 +0000] "PUT /timeslots/providers/7932e6e3-6314-4d68-b9c5-21cdeba707df/update-timeslot/919dd66e-e355-4830-947a-ede1579a245a HTTP/1.1" 200 324 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '919dd66e-e355-4830-947a-ede1579a245a',
    provider_id: '7932e6e3-6314-4d68-b9c5-21cdeba707df',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:23:07',
    updated_at: '2025-04-29 08:23:07'
  },
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["919dd66e-e355-4830-947a-ede1579a245a"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7932e6e3-6314-4d68-b9c5-21cdeba707df"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:23:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:25:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["000090f1-749c-460e-8b19-d6bd5e040e19","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["000090f1-749c-460e-8b19-d6bd5e040e19","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Time slot created Successfully by the user 000090f1-749c-460e-8b19-d6bd5e040e19 : 66624be8-2b17-417a-be37-36484f0facd8',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:25:05 +0000] "POST /timeslots/providers/000090f1-749c-460e-8b19-d6bd5e040e19/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '66624be8-2b17-417a-be37-36484f0facd8',
    provider_id: '000090f1-749c-460e-8b19-d6bd5e040e19',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:25:05',
    updated_at: '2025-04-29 08:25:05'
  },
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["000090f1-749c-460e-8b19-d6bd5e040e19"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:25:05 +0000] "GET /timeslots/providers/000090f1-749c-460e-8b19-d6bd5e040e19/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:25:05',
        updated_at: '2025-04-29 08:25:05'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","66624be8-2b17-417a-be37-36484f0facd8","000090f1-749c-460e-8b19-d6bd5e040e19"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Slot 66624be8-2b17-417a-be37-36484f0facd8 updated Successfully by provider 000090f1-749c-460e-8b19-d6bd5e040e19',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:25:05 +0000] "PUT /timeslots/providers/000090f1-749c-460e-8b19-d6bd5e040e19/update-timeslot/66624be8-2b17-417a-be37-36484f0facd8 HTTP/1.1" 200 324 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '66624be8-2b17-417a-be37-36484f0facd8',
    provider_id: '000090f1-749c-460e-8b19-d6bd5e040e19',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:25:05',
    updated_at: '2025-04-29 08:25:05'
  },
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["66624be8-2b17-417a-be37-36484f0facd8"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["000090f1-749c-460e-8b19-d6bd5e040e19"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:25:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:25:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 50ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["6a9b7e08-460d-495b-97b5-d8f87dc51c99","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["6a9b7e08-460d-495b-97b5-d8f87dc51c99","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Time slot created Successfully by the user 6a9b7e08-460d-495b-97b5-d8f87dc51c99 : 33255b56-0c4a-4150-8152-7375787239f8',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:26:04 +0000] "POST /timeslots/providers/6a9b7e08-460d-495b-97b5-d8f87dc51c99/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '33255b56-0c4a-4150-8152-7375787239f8',
    provider_id: '6a9b7e08-460d-495b-97b5-d8f87dc51c99',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:26:04',
    updated_at: '2025-04-29 08:26:04'
  },
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["6a9b7e08-460d-495b-97b5-d8f87dc51c99"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:26:04 +0000] "GET /timeslots/providers/6a9b7e08-460d-495b-97b5-d8f87dc51c99/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:26:04',
        updated_at: '2025-04-29 08:26:04'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","33255b56-0c4a-4150-8152-7375787239f8","6a9b7e08-460d-495b-97b5-d8f87dc51c99"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Slot 33255b56-0c4a-4150-8152-7375787239f8 updated Successfully by provider 6a9b7e08-460d-495b-97b5-d8f87dc51c99',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:26:04 +0000] "PUT /timeslots/providers/6a9b7e08-460d-495b-97b5-d8f87dc51c99/update-timeslot/33255b56-0c4a-4150-8152-7375787239f8 HTTP/1.1" 200 324 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '33255b56-0c4a-4150-8152-7375787239f8',
    provider_id: '6a9b7e08-460d-495b-97b5-d8f87dc51c99',
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:26:04',
    updated_at: '2025-04-29 08:26:04'
  },
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["33255b56-0c4a-4150-8152-7375787239f8"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6a9b7e08-460d-495b-97b5-d8f87dc51c99"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:26:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:32:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:32:31'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:32:34'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:34'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-27","12:00:00","12:30:00","d1168cd1-497e-47d0-8028-88d558df0541","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:34'
}
{
  message: 'Slot d1168cd1-497e-47d0-8028-88d558df0541 updated Successfully by provider e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:32:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:32:34 +0000] "PUT /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/update-timeslot/d1168cd1-497e-47d0-8028-88d558df0541 HTTP/1.1" 200 310 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:32:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:32:46'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:32:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 39ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["401b6a36-d0a2-408c-854c-6e02ba7b1342","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["401b6a36-d0a2-408c-854c-6e02ba7b1342","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Time slot created Successfully by the user 401b6a36-d0a2-408c-854c-6e02ba7b1342 : e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:32:52 +0000] "POST /timeslots/providers/401b6a36-d0a2-408c-854c-6e02ba7b1342/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac',
    provider_id: '401b6a36-d0a2-408c-854c-6e02ba7b1342',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:32:52',
    updated_at: '2025-04-29 08:32:52'
  },
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["401b6a36-d0a2-408c-854c-6e02ba7b1342"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:32:52 +0000] "GET /timeslots/providers/401b6a36-d0a2-408c-854c-6e02ba7b1342/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:32:52',
        updated_at: '2025-04-29 08:32:52'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac","401b6a36-d0a2-408c-854c-6e02ba7b1342"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Slot e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac updated Successfully by provider 401b6a36-d0a2-408c-854c-6e02ba7b1342',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:32:52 +0000] "PUT /timeslots/providers/401b6a36-d0a2-408c-854c-6e02ba7b1342/update-timeslot/e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: 'e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac',
    provider_id: '401b6a36-d0a2-408c-854c-6e02ba7b1342',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:32:52',
    updated_at: '2025-04-29 08:32:52'
  },
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["e5b5c81d-6cf5-46bf-84e7-e8cd9afb30ac"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["401b6a36-d0a2-408c-854c-6e02ba7b1342"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:32:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:35:12'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-27","12:30:00","13:00:00"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-27","12:30:00","13:00:00"], duration: 33ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: 'Time slot created Successfully by the user e1022995-d7f7-4ebc-98fd-cad361260475 : 878e84da-77f1-4519-9d8b-539d9f0dcb97',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:35:48 +0000] "POST /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/create-timeslots HTTP/1.1" 201 304 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:35:48'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:36:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:36:26'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 33ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:36:26'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["878e84da-77f1-4519-9d8b-539d9f0dcb97","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:36:26'
}
{
  message: 'Time slot with id: 878e84da-77f1-4519-9d8b-539d9f0dcb97 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:36:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:36:26 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/878e84da-77f1-4519-9d8b-539d9f0dcb97 HTTP/1.1" 200 299 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:36:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:37:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:37:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:37:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 63ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:37:15'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["1778e012-f38f-4e3c-8e1b-40c2731f7d46","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["1778e012-f38f-4e3c-8e1b-40c2731f7d46","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Time slot created Successfully by the user 1778e012-f38f-4e3c-8e1b-40c2731f7d46 : 57eb0b4e-487f-46d8-b67d-7c28b200ec76',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:16 +0000] "POST /timeslots/providers/1778e012-f38f-4e3c-8e1b-40c2731f7d46/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '57eb0b4e-487f-46d8-b67d-7c28b200ec76',
    provider_id: '1778e012-f38f-4e3c-8e1b-40c2731f7d46',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:37:16',
    updated_at: '2025-04-29 08:37:16'
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["1778e012-f38f-4e3c-8e1b-40c2731f7d46"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:16 +0000] "GET /timeslots/providers/1778e012-f38f-4e3c-8e1b-40c2731f7d46/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:37:16',
        updated_at: '2025-04-29 08:37:16'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","57eb0b4e-487f-46d8-b67d-7c28b200ec76","1778e012-f38f-4e3c-8e1b-40c2731f7d46"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Slot 57eb0b4e-487f-46d8-b67d-7c28b200ec76 updated Successfully by provider 1778e012-f38f-4e3c-8e1b-40c2731f7d46',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:16 +0000] "PUT /timeslots/providers/1778e012-f38f-4e3c-8e1b-40c2731f7d46/update-timeslot/57eb0b4e-487f-46d8-b67d-7c28b200ec76 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '57eb0b4e-487f-46d8-b67d-7c28b200ec76',
    provider_id: '1778e012-f38f-4e3c-8e1b-40c2731f7d46',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:37:16',
    updated_at: '2025-04-29 08:37:16'
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["57eb0b4e-487f-46d8-b67d-7c28b200ec76"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1778e012-f38f-4e3c-8e1b-40c2731f7d46"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:37:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 61ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["ef5b1263-d393-4a01-81c7-2bedca5f9b81","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["ef5b1263-d393-4a01-81c7-2bedca5f9b81","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Time slot created Successfully by the user ef5b1263-d393-4a01-81c7-2bedca5f9b81 : 2a75c841-a8f9-4060-a3b1-23f33420a531',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:36 +0000] "POST /timeslots/providers/ef5b1263-d393-4a01-81c7-2bedca5f9b81/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '2a75c841-a8f9-4060-a3b1-23f33420a531',
    provider_id: 'ef5b1263-d393-4a01-81c7-2bedca5f9b81',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:37:36',
    updated_at: '2025-04-29 08:37:36'
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["ef5b1263-d393-4a01-81c7-2bedca5f9b81"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:36 +0000] "GET /timeslots/providers/ef5b1263-d393-4a01-81c7-2bedca5f9b81/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:37:36',
        updated_at: '2025-04-29 08:37:36'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","2a75c841-a8f9-4060-a3b1-23f33420a531","ef5b1263-d393-4a01-81c7-2bedca5f9b81"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Slot 2a75c841-a8f9-4060-a3b1-23f33420a531 updated Successfully by provider ef5b1263-d393-4a01-81c7-2bedca5f9b81',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:36 +0000] "PUT /timeslots/providers/ef5b1263-d393-4a01-81c7-2bedca5f9b81/update-timeslot/2a75c841-a8f9-4060-a3b1-23f33420a531 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '2a75c841-a8f9-4060-a3b1-23f33420a531',
    provider_id: 'ef5b1263-d393-4a01-81c7-2bedca5f9b81',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:37:36',
    updated_at: '2025-04-29 08:37:36'
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:36 +0000] "DELETE /timeslot/providers/ef5b1263-d393-4a01-81c7-2bedca5f9b81/delete-timeslot/2a75c841-a8f9-4060-a3b1-23f33420a531 HTTP/1.1" 404 250 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["2a75c841-a8f9-4060-a3b1-23f33420a531"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["ef5b1263-d393-4a01-81c7-2bedca5f9b81"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:37:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:37:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 62ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["34d5eb33-a800-4863-995e-729eae268466","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["34d5eb33-a800-4863-995e-729eae268466","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Time slot created Successfully by the user 34d5eb33-a800-4863-995e-729eae268466 : 10afe60b-d5bc-4a9e-86f7-22beddf094c8',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:56 +0000] "POST /timeslots/providers/34d5eb33-a800-4863-995e-729eae268466/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '10afe60b-d5bc-4a9e-86f7-22beddf094c8',
    provider_id: '34d5eb33-a800-4863-995e-729eae268466',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:37:56',
    updated_at: '2025-04-29 08:37:56'
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["34d5eb33-a800-4863-995e-729eae268466"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:56 +0000] "GET /timeslots/providers/34d5eb33-a800-4863-995e-729eae268466/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:37:56',
        updated_at: '2025-04-29 08:37:56'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","10afe60b-d5bc-4a9e-86f7-22beddf094c8","34d5eb33-a800-4863-995e-729eae268466"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Slot 10afe60b-d5bc-4a9e-86f7-22beddf094c8 updated Successfully by provider 34d5eb33-a800-4863-995e-729eae268466',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:56 +0000] "PUT /timeslots/providers/34d5eb33-a800-4863-995e-729eae268466/update-timeslot/10afe60b-d5bc-4a9e-86f7-22beddf094c8 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '10afe60b-d5bc-4a9e-86f7-22beddf094c8',
    provider_id: '34d5eb33-a800-4863-995e-729eae268466',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:37:56',
    updated_at: '2025-04-29 08:37:56'
  },
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["10afe60b-d5bc-4a9e-86f7-22beddf094c8","34d5eb33-a800-4863-995e-729eae268466"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Time slot with id: 10afe60b-d5bc-4a9e-86f7-22beddf094c8 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:37:56 +0000] "DELETE /timeslots/providers/34d5eb33-a800-4863-995e-729eae268466/delete-timeslot/10afe60b-d5bc-4a9e-86f7-22beddf094c8 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["10afe60b-d5bc-4a9e-86f7-22beddf094c8"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["34d5eb33-a800-4863-995e-729eae268466"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:37:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:40:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["f3d829de-49f6-4ed2-a832-fb71a5bbcd49","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["f3d829de-49f6-4ed2-a832-fb71a5bbcd49","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Time slot created Successfully by the user f3d829de-49f6-4ed2-a832-fb71a5bbcd49 : 55ba796c-0196-4fba-9aa3-9322d80ee16f',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:19 +0000] "POST /timeslots/providers/f3d829de-49f6-4ed2-a832-fb71a5bbcd49/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '55ba796c-0196-4fba-9aa3-9322d80ee16f',
    provider_id: 'f3d829de-49f6-4ed2-a832-fb71a5bbcd49',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:40:19',
    updated_at: '2025-04-29 08:40:19'
  },
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["f3d829de-49f6-4ed2-a832-fb71a5bbcd49"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:19 +0000] "GET /timeslots/providers/f3d829de-49f6-4ed2-a832-fb71a5bbcd49/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:40:19',
        updated_at: '2025-04-29 08:40:19'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","55ba796c-0196-4fba-9aa3-9322d80ee16f","f3d829de-49f6-4ed2-a832-fb71a5bbcd49"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Slot 55ba796c-0196-4fba-9aa3-9322d80ee16f updated Successfully by provider f3d829de-49f6-4ed2-a832-fb71a5bbcd49',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:19 +0000] "PUT /timeslots/providers/f3d829de-49f6-4ed2-a832-fb71a5bbcd49/update-timeslot/55ba796c-0196-4fba-9aa3-9322d80ee16f HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '55ba796c-0196-4fba-9aa3-9322d80ee16f',
    provider_id: 'f3d829de-49f6-4ed2-a832-fb71a5bbcd49',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:40:19',
    updated_at: '2025-04-29 08:40:19'
  },
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["55ba796c-0196-4fba-9aa3-9322d80ee16f","f3d829de-49f6-4ed2-a832-fb71a5bbcd49"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Time slot with id: 55ba796c-0196-4fba-9aa3-9322d80ee16f has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:19 +0000] "DELETE /timeslots/providers/f3d829de-49f6-4ed2-a832-fb71a5bbcd49/delete-timeslot/55ba796c-0196-4fba-9aa3-9322d80ee16f HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["55ba796c-0196-4fba-9aa3-9322d80ee16f"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f3d829de-49f6-4ed2-a832-fb71a5bbcd49"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:40:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Time slot created Successfully by the user 71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca : 8c7178f4-4173-42eb-9cb1-a47dcc1dfd24',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:52 +0000] "POST /timeslots/providers/71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '8c7178f4-4173-42eb-9cb1-a47dcc1dfd24',
    provider_id: '71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:40:52',
    updated_at: '2025-04-29 08:40:52'
  },
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:52 +0000] "GET /timeslots/providers/71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:40:52',
        updated_at: '2025-04-29 08:40:52'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","8c7178f4-4173-42eb-9cb1-a47dcc1dfd24","71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Slot 8c7178f4-4173-42eb-9cb1-a47dcc1dfd24 updated Successfully by provider 71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:52 +0000] "PUT /timeslots/providers/71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca/update-timeslot/8c7178f4-4173-42eb-9cb1-a47dcc1dfd24 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '8c7178f4-4173-42eb-9cb1-a47dcc1dfd24',
    provider_id: '71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:40:52',
    updated_at: '2025-04-29 08:40:52'
  },
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["8c7178f4-4173-42eb-9cb1-a47dcc1dfd24","71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Time slot with id: 8c7178f4-4173-42eb-9cb1-a47dcc1dfd24 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:40:52 +0000] "DELETE /timeslots/providers/71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca/delete-timeslot/8c7178f4-4173-42eb-9cb1-a47dcc1dfd24 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8c7178f4-4173-42eb-9cb1-a47dcc1dfd24"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["71676cc2-0cf4-4cef-8ba2-8e9cb7c105ca"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:40:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:41:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["756a4798-9963-4eda-947e-edd51707bd90","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["756a4798-9963-4eda-947e-edd51707bd90","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Time slot created Successfully by the user 756a4798-9963-4eda-947e-edd51707bd90 : 864cf282-4a5a-4db1-86e7-9a6ed4800219',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:41:48 +0000] "POST /timeslots/providers/756a4798-9963-4eda-947e-edd51707bd90/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '864cf282-4a5a-4db1-86e7-9a6ed4800219',
    provider_id: '756a4798-9963-4eda-947e-edd51707bd90',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:41:48',
    updated_at: '2025-04-29 08:41:48'
  },
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["756a4798-9963-4eda-947e-edd51707bd90"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:41:48 +0000] "GET /timeslots/providers/756a4798-9963-4eda-947e-edd51707bd90/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:41:48',
        updated_at: '2025-04-29 08:41:48'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","864cf282-4a5a-4db1-86e7-9a6ed4800219","756a4798-9963-4eda-947e-edd51707bd90"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Slot 864cf282-4a5a-4db1-86e7-9a6ed4800219 updated Successfully by provider 756a4798-9963-4eda-947e-edd51707bd90',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:41:48 +0000] "PUT /timeslots/providers/756a4798-9963-4eda-947e-edd51707bd90/update-timeslot/864cf282-4a5a-4db1-86e7-9a6ed4800219 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '864cf282-4a5a-4db1-86e7-9a6ed4800219',
    provider_id: '756a4798-9963-4eda-947e-edd51707bd90',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:41:48',
    updated_at: '2025-04-29 08:41:48'
  },
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:41:48 +0000] "GET /search/providers/756a4798-9963-4eda-947e-edd51707bd90/available-slots HTTP/1.1" 401 53 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["864cf282-4a5a-4db1-86e7-9a6ed4800219","756a4798-9963-4eda-947e-edd51707bd90"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Time slot with id: 864cf282-4a5a-4db1-86e7-9a6ed4800219 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:41:48 +0000] "DELETE /timeslots/providers/756a4798-9963-4eda-947e-edd51707bd90/delete-timeslot/864cf282-4a5a-4db1-86e7-9a6ed4800219 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["864cf282-4a5a-4db1-86e7-9a6ed4800219"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["756a4798-9963-4eda-947e-edd51707bd90"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:41:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:42:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 61ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["fa2bbded-c755-4724-b6da-b4623dd1dbcb","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["fa2bbded-c755-4724-b6da-b4623dd1dbcb","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Time slot created Successfully by the user fa2bbded-c755-4724-b6da-b4623dd1dbcb : 962f355b-03ff-49dd-88f0-70cefeb1a429',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:42:08 +0000] "POST /timeslots/providers/fa2bbded-c755-4724-b6da-b4623dd1dbcb/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '962f355b-03ff-49dd-88f0-70cefeb1a429',
    provider_id: 'fa2bbded-c755-4724-b6da-b4623dd1dbcb',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:42:08',
    updated_at: '2025-04-29 08:42:08'
  },
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["fa2bbded-c755-4724-b6da-b4623dd1dbcb"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:42:08 +0000] "GET /timeslots/providers/fa2bbded-c755-4724-b6da-b4623dd1dbcb/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:42:08',
        updated_at: '2025-04-29 08:42:08'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","962f355b-03ff-49dd-88f0-70cefeb1a429","fa2bbded-c755-4724-b6da-b4623dd1dbcb"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Slot 962f355b-03ff-49dd-88f0-70cefeb1a429 updated Successfully by provider fa2bbded-c755-4724-b6da-b4623dd1dbcb',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:42:08 +0000] "PUT /timeslots/providers/fa2bbded-c755-4724-b6da-b4623dd1dbcb/update-timeslot/962f355b-03ff-49dd-88f0-70cefeb1a429 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '962f355b-03ff-49dd-88f0-70cefeb1a429',
    provider_id: 'fa2bbded-c755-4724-b6da-b4623dd1dbcb',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:42:08',
    updated_at: '2025-04-29 08:42:08'
  },
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:42:08 +0000] "GET /timeslots/search/providers/fa2bbded-c755-4724-b6da-b4623dd1dbcb/available-slots HTTP/1.1" 401 53 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["962f355b-03ff-49dd-88f0-70cefeb1a429","fa2bbded-c755-4724-b6da-b4623dd1dbcb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Time slot with id: 962f355b-03ff-49dd-88f0-70cefeb1a429 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:42:08 +0000] "DELETE /timeslots/providers/fa2bbded-c755-4724-b6da-b4623dd1dbcb/delete-timeslot/962f355b-03ff-49dd-88f0-70cefeb1a429 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["962f355b-03ff-49dd-88f0-70cefeb1a429"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fa2bbded-c755-4724-b6da-b4623dd1dbcb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:42:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:43:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:43:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:43:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:44:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 65ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["5fe5121a-5e4f-4fd4-8430-399cddf1c39c","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["5fe5121a-5e4f-4fd4-8430-399cddf1c39c","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Time slot created Successfully by the user 5fe5121a-5e4f-4fd4-8430-399cddf1c39c : 35b1baaa-fd67-46e3-8f3e-455ea26c7780',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:44:48 +0000] "POST /timeslots/providers/5fe5121a-5e4f-4fd4-8430-399cddf1c39c/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '35b1baaa-fd67-46e3-8f3e-455ea26c7780',
    provider_id: '5fe5121a-5e4f-4fd4-8430-399cddf1c39c',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:44:48',
    updated_at: '2025-04-29 08:44:48'
  },
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["5fe5121a-5e4f-4fd4-8430-399cddf1c39c"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:44:48 +0000] "GET /timeslots/providers/5fe5121a-5e4f-4fd4-8430-399cddf1c39c/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:44:48',
        updated_at: '2025-04-29 08:44:48'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","35b1baaa-fd67-46e3-8f3e-455ea26c7780","5fe5121a-5e4f-4fd4-8430-399cddf1c39c"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Slot 35b1baaa-fd67-46e3-8f3e-455ea26c7780 updated Successfully by provider 5fe5121a-5e4f-4fd4-8430-399cddf1c39c',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:44:48 +0000] "PUT /timeslots/providers/5fe5121a-5e4f-4fd4-8430-399cddf1c39c/update-timeslot/35b1baaa-fd67-46e3-8f3e-455ea26c7780 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '35b1baaa-fd67-46e3-8f3e-455ea26c7780',
    provider_id: '5fe5121a-5e4f-4fd4-8430-399cddf1c39c',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:44:48',
    updated_at: '2025-04-29 08:44:48'
  },
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["5fe5121a-5e4f-4fd4-8430-399cddf1c39c","2025-04-24","2025-04-30"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:44:48 +0000] "GET /timeslots/search/providers/5fe5121a-5e4f-4fd4-8430-399cddf1c39c/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 21 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["35b1baaa-fd67-46e3-8f3e-455ea26c7780","5fe5121a-5e4f-4fd4-8430-399cddf1c39c"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Time slot with id: 35b1baaa-fd67-46e3-8f3e-455ea26c7780 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:44:48 +0000] "DELETE /timeslots/providers/5fe5121a-5e4f-4fd4-8430-399cddf1c39c/delete-timeslot/35b1baaa-fd67-46e3-8f3e-455ea26c7780 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["35b1baaa-fd67-46e3-8f3e-455ea26c7780"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["5fe5121a-5e4f-4fd4-8430-399cddf1c39c"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:44:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:45:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:47:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 68ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["4be5cc77-9abb-48f0-938e-70533c22c717","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["4be5cc77-9abb-48f0-938e-70533c22c717","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Time slot created Successfully by the user 4be5cc77-9abb-48f0-938e-70533c22c717 : 6ae98f38-1cf6-472f-a7a6-dfdd48364cdc',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:47:23 +0000] "POST /timeslots/providers/4be5cc77-9abb-48f0-938e-70533c22c717/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '6ae98f38-1cf6-472f-a7a6-dfdd48364cdc',
    provider_id: '4be5cc77-9abb-48f0-938e-70533c22c717',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:47:23',
    updated_at: '2025-04-29 08:47:23'
  },
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["4be5cc77-9abb-48f0-938e-70533c22c717"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:47:23 +0000] "GET /timeslots/providers/4be5cc77-9abb-48f0-938e-70533c22c717/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:47:23',
        updated_at: '2025-04-29 08:47:23'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","6ae98f38-1cf6-472f-a7a6-dfdd48364cdc","4be5cc77-9abb-48f0-938e-70533c22c717"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Slot 6ae98f38-1cf6-472f-a7a6-dfdd48364cdc updated Successfully by provider 4be5cc77-9abb-48f0-938e-70533c22c717',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:47:23 +0000] "PUT /timeslots/providers/4be5cc77-9abb-48f0-938e-70533c22c717/update-timeslot/6ae98f38-1cf6-472f-a7a6-dfdd48364cdc HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '6ae98f38-1cf6-472f-a7a6-dfdd48364cdc',
    provider_id: '4be5cc77-9abb-48f0-938e-70533c22c717',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:47:23',
    updated_at: '2025-04-29 08:47:23'
  },
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["4be5cc77-9abb-48f0-938e-70533c22c717","2025-04-24","2025-04-30"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:47:23 +0000] "GET /timeslots/search/providers/4be5cc77-9abb-48f0-938e-70533c22c717/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 21 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["6ae98f38-1cf6-472f-a7a6-dfdd48364cdc","4be5cc77-9abb-48f0-938e-70533c22c717"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Time slot with id: 6ae98f38-1cf6-472f-a7a6-dfdd48364cdc has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:47:23 +0000] "DELETE /timeslots/providers/4be5cc77-9abb-48f0-938e-70533c22c717/delete-timeslot/6ae98f38-1cf6-472f-a7a6-dfdd48364cdc HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["6ae98f38-1cf6-472f-a7a6-dfdd48364cdc"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["4be5cc77-9abb-48f0-938e-70533c22c717"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:47:23'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 08:50:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:50:01'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 15ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:50:01'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-24","2025-04-30"], duration: 3ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-29 08:50:01'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:50:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:50:01 +0000] "GET /timeslots/search/providers/e1022995-d7f7-4ebc-98fd-cad361260475/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 263 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 08:50:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:50:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 65ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["e3444da6-5b85-44ce-91f5-d4df2fe01e06","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["e3444da6-5b85-44ce-91f5-d4df2fe01e06","2025-05-01","09:00:00","09:30:00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Time slot created Successfully by the user e3444da6-5b85-44ce-91f5-d4df2fe01e06 : 0177320b-28bb-4278-859a-986e69841ff6',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:50:47 +0000] "POST /timeslots/providers/e3444da6-5b85-44ce-91f5-d4df2fe01e06/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '0177320b-28bb-4278-859a-986e69841ff6',
    provider_id: 'e3444da6-5b85-44ce-91f5-d4df2fe01e06',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:50:47',
    updated_at: '2025-04-29 08:50:47'
  },
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e3444da6-5b85-44ce-91f5-d4df2fe01e06"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:50:47 +0000] "GET /timeslots/providers/e3444da6-5b85-44ce-91f5-d4df2fe01e06/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:50:47',
        updated_at: '2025-04-29 08:50:47'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","0177320b-28bb-4278-859a-986e69841ff6","e3444da6-5b85-44ce-91f5-d4df2fe01e06"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Slot 0177320b-28bb-4278-859a-986e69841ff6 updated Successfully by provider e3444da6-5b85-44ce-91f5-d4df2fe01e06',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:50:47 +0000] "PUT /timeslots/providers/e3444da6-5b85-44ce-91f5-d4df2fe01e06/update-timeslot/0177320b-28bb-4278-859a-986e69841ff6 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '0177320b-28bb-4278-859a-986e69841ff6',
    provider_id: 'e3444da6-5b85-44ce-91f5-d4df2fe01e06',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:50:47',
    updated_at: '2025-04-29 08:50:47'
  },
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["e3444da6-5b85-44ce-91f5-d4df2fe01e06","2025-04-24","2025-04-30"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:50:47 +0000] "GET /timeslots/search/providers/e3444da6-5b85-44ce-91f5-d4df2fe01e06/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 21 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["0177320b-28bb-4278-859a-986e69841ff6","e3444da6-5b85-44ce-91f5-d4df2fe01e06"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Time slot with id: 0177320b-28bb-4278-859a-986e69841ff6 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:50:47 +0000] "DELETE /timeslots/providers/e3444da6-5b85-44ce-91f5-d4df2fe01e06/delete-timeslot/0177320b-28bb-4278-859a-986e69841ff6 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["0177320b-28bb-4278-859a-986e69841ff6"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["e3444da6-5b85-44ce-91f5-d4df2fe01e06"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:50:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:52:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 63ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["1df61204-a461-4176-be5c-4e0d524475f6","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["1df61204-a461-4176-be5c-4e0d524475f6","2025-05-01","09:00:00","09:30:00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Time slot created Successfully by the user 1df61204-a461-4176-be5c-4e0d524475f6 : 57fbdfc4-a248-4d86-854e-ef02207f1671',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:52:30 +0000] "POST /timeslots/providers/1df61204-a461-4176-be5c-4e0d524475f6/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '57fbdfc4-a248-4d86-854e-ef02207f1671',
    provider_id: '1df61204-a461-4176-be5c-4e0d524475f6',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:52:30',
    updated_at: '2025-04-29 08:52:30'
  },
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["1df61204-a461-4176-be5c-4e0d524475f6"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:52:30 +0000] "GET /timeslots/providers/1df61204-a461-4176-be5c-4e0d524475f6/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:52:30',
        updated_at: '2025-04-29 08:52:30'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","57fbdfc4-a248-4d86-854e-ef02207f1671","1df61204-a461-4176-be5c-4e0d524475f6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Slot 57fbdfc4-a248-4d86-854e-ef02207f1671 updated Successfully by provider 1df61204-a461-4176-be5c-4e0d524475f6',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:52:30 +0000] "PUT /timeslots/providers/1df61204-a461-4176-be5c-4e0d524475f6/update-timeslot/57fbdfc4-a248-4d86-854e-ef02207f1671 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '57fbdfc4-a248-4d86-854e-ef02207f1671',
    provider_id: '1df61204-a461-4176-be5c-4e0d524475f6',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:52:30',
    updated_at: '2025-04-29 08:52:30'
  },
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["1df61204-a461-4176-be5c-4e0d524475f6","2025-04-24","2025-04-30"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:52:30 +0000] "GET /timeslots/search/providers/1df61204-a461-4176-be5c-4e0d524475f6/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 21 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{ message: 0, level: 'info', timestamp: '2025-04-29 08:52:30' }
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["57fbdfc4-a248-4d86-854e-ef02207f1671","1df61204-a461-4176-be5c-4e0d524475f6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Time slot with id: 57fbdfc4-a248-4d86-854e-ef02207f1671 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:52:30 +0000] "DELETE /timeslots/providers/1df61204-a461-4176-be5c-4e0d524475f6/delete-timeslot/57fbdfc4-a248-4d86-854e-ef02207f1671 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["57fbdfc4-a248-4d86-854e-ef02207f1671"], duration: 0ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1df61204-a461-4176-be5c-4e0d524475f6"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:52:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:53:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 61ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["19603d52-926f-4f2f-ad98-07072fe66028","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["19603d52-926f-4f2f-ad98-07072fe66028","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Time slot created Successfully by the user 19603d52-926f-4f2f-ad98-07072fe66028 : 109ffe57-2187-4ae0-b42f-b831908f1aae',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:53:35 +0000] "POST /timeslots/providers/19603d52-926f-4f2f-ad98-07072fe66028/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '109ffe57-2187-4ae0-b42f-b831908f1aae',
    provider_id: '19603d52-926f-4f2f-ad98-07072fe66028',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:53:35',
    updated_at: '2025-04-29 08:53:35'
  },
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["19603d52-926f-4f2f-ad98-07072fe66028"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:53:35 +0000] "GET /timeslots/providers/19603d52-926f-4f2f-ad98-07072fe66028/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:53:35',
        updated_at: '2025-04-29 08:53:35'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","109ffe57-2187-4ae0-b42f-b831908f1aae","19603d52-926f-4f2f-ad98-07072fe66028"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Slot 109ffe57-2187-4ae0-b42f-b831908f1aae updated Successfully by provider 19603d52-926f-4f2f-ad98-07072fe66028',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:53:35 +0000] "PUT /timeslots/providers/19603d52-926f-4f2f-ad98-07072fe66028/update-timeslot/109ffe57-2187-4ae0-b42f-b831908f1aae HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '109ffe57-2187-4ae0-b42f-b831908f1aae',
    provider_id: '19603d52-926f-4f2f-ad98-07072fe66028',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:53:35',
    updated_at: '2025-04-29 08:53:35'
  },
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["19603d52-926f-4f2f-ad98-07072fe66028","2025-04-24","2025-04-30"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:53:35 +0000] "GET /timeslots/search/providers/19603d52-926f-4f2f-ad98-07072fe66028/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 21 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{ message: 0, level: 'info', timestamp: '2025-04-29 08:53:35' }
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["109ffe57-2187-4ae0-b42f-b831908f1aae","19603d52-926f-4f2f-ad98-07072fe66028"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Time slot with id: 109ffe57-2187-4ae0-b42f-b831908f1aae has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:53:35 +0000] "DELETE /timeslots/providers/19603d52-926f-4f2f-ad98-07072fe66028/delete-timeslot/109ffe57-2187-4ae0-b42f-b831908f1aae HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["109ffe57-2187-4ae0-b42f-b831908f1aae"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["19603d52-926f-4f2f-ad98-07072fe66028"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:53:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:54:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:54:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 67ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["63efada6-afaa-493f-8b1f-3dd7ec43ed21","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["63efada6-afaa-493f-8b1f-3dd7ec43ed21","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Time slot created Successfully by the user 63efada6-afaa-493f-8b1f-3dd7ec43ed21 : b5262c7e-e14e-4b0c-86a0-c6beae396198',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:54:13 +0000] "POST /timeslots/providers/63efada6-afaa-493f-8b1f-3dd7ec43ed21/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'b5262c7e-e14e-4b0c-86a0-c6beae396198',
    provider_id: '63efada6-afaa-493f-8b1f-3dd7ec43ed21',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:54:13',
    updated_at: '2025-04-29 08:54:13'
  },
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["63efada6-afaa-493f-8b1f-3dd7ec43ed21"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:54:13 +0000] "GET /timeslots/providers/63efada6-afaa-493f-8b1f-3dd7ec43ed21/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:54:13',
        updated_at: '2025-04-29 08:54:13'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","b5262c7e-e14e-4b0c-86a0-c6beae396198","63efada6-afaa-493f-8b1f-3dd7ec43ed21"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Slot b5262c7e-e14e-4b0c-86a0-c6beae396198 updated Successfully by provider 63efada6-afaa-493f-8b1f-3dd7ec43ed21',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:54:13 +0000] "PUT /timeslots/providers/63efada6-afaa-493f-8b1f-3dd7ec43ed21/update-timeslot/b5262c7e-e14e-4b0c-86a0-c6beae396198 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: 'b5262c7e-e14e-4b0c-86a0-c6beae396198',
    provider_id: '63efada6-afaa-493f-8b1f-3dd7ec43ed21',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:54:13',
    updated_at: '2025-04-29 08:54:13'
  },
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["63efada6-afaa-493f-8b1f-3dd7ec43ed21","2025-04-24","2025-08-30"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:54:13 +0000] "GET /timeslots/search/providers/63efada6-afaa-493f-8b1f-3dd7ec43ed21/available-slots?from=2025-04-24&to=2025-08-30 HTTP/1.1" 200 101 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{ message: 1, level: 'info', timestamp: '2025-04-29 08:54:13' }
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["b5262c7e-e14e-4b0c-86a0-c6beae396198","63efada6-afaa-493f-8b1f-3dd7ec43ed21"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Time slot with id: b5262c7e-e14e-4b0c-86a0-c6beae396198 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:54:13 +0000] "DELETE /timeslots/providers/63efada6-afaa-493f-8b1f-3dd7ec43ed21/delete-timeslot/b5262c7e-e14e-4b0c-86a0-c6beae396198 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["b5262c7e-e14e-4b0c-86a0-c6beae396198"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["63efada6-afaa-493f-8b1f-3dd7ec43ed21"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:54:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:55:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["37f0f1f2-0fe8-424c-b792-bb7df06d73e6","2025-05-01","09:00:00","09:30:00"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["37f0f1f2-0fe8-424c-b792-bb7df06d73e6","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Time slot created Successfully by the user 37f0f1f2-0fe8-424c-b792-bb7df06d73e6 : bf989dee-cbd5-4a4e-a261-fbbd3eb7a963',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:07 +0000] "POST /timeslots/providers/37f0f1f2-0fe8-424c-b792-bb7df06d73e6/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'bf989dee-cbd5-4a4e-a261-fbbd3eb7a963',
    provider_id: '37f0f1f2-0fe8-424c-b792-bb7df06d73e6',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:55:07',
    updated_at: '2025-04-29 08:55:07'
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["37f0f1f2-0fe8-424c-b792-bb7df06d73e6"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:07 +0000] "GET /timeslots/providers/37f0f1f2-0fe8-424c-b792-bb7df06d73e6/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:55:07',
        updated_at: '2025-04-29 08:55:07'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","bf989dee-cbd5-4a4e-a261-fbbd3eb7a963","37f0f1f2-0fe8-424c-b792-bb7df06d73e6"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Slot bf989dee-cbd5-4a4e-a261-fbbd3eb7a963 updated Successfully by provider 37f0f1f2-0fe8-424c-b792-bb7df06d73e6',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:07 +0000] "PUT /timeslots/providers/37f0f1f2-0fe8-424c-b792-bb7df06d73e6/update-timeslot/bf989dee-cbd5-4a4e-a261-fbbd3eb7a963 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: 'bf989dee-cbd5-4a4e-a261-fbbd3eb7a963',
    provider_id: '37f0f1f2-0fe8-424c-b792-bb7df06d73e6',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:55:07',
    updated_at: '2025-04-29 08:55:07'
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["37f0f1f2-0fe8-424c-b792-bb7df06d73e6","2025-04-24","2025-08-30"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:07 +0000] "GET /timeslots/search/providers/37f0f1f2-0fe8-424c-b792-bb7df06d73e6/available-slots?from=2025-04-24&to=2025-08-30 HTTP/1.1" 200 101 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{ message: 1, level: 'info', timestamp: '2025-04-29 08:55:07' }
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["bf989dee-cbd5-4a4e-a261-fbbd3eb7a963","37f0f1f2-0fe8-424c-b792-bb7df06d73e6"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Time slot with id: bf989dee-cbd5-4a4e-a261-fbbd3eb7a963 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:07 +0000] "DELETE /timeslots/providers/37f0f1f2-0fe8-424c-b792-bb7df06d73e6/delete-timeslot/bf989dee-cbd5-4a4e-a261-fbbd3eb7a963 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["bf989dee-cbd5-4a4e-a261-fbbd3eb7a963"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["37f0f1f2-0fe8-424c-b792-bb7df06d73e6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:55:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 45ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["05ec5c00-1710-4bf9-9d84-15354f2f9888","2025-05-01","09:00:00","09:30:00"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["05ec5c00-1710-4bf9-9d84-15354f2f9888","2025-05-01","09:00:00","09:30:00"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Time slot created Successfully by the user 05ec5c00-1710-4bf9-9d84-15354f2f9888 : 54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:44 +0000] "POST /timeslots/providers/05ec5c00-1710-4bf9-9d84-15354f2f9888/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2',
    provider_id: '05ec5c00-1710-4bf9-9d84-15354f2f9888',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:55:44',
    updated_at: '2025-04-29 08:55:44'
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["05ec5c00-1710-4bf9-9d84-15354f2f9888"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:44 +0000] "GET /timeslots/providers/05ec5c00-1710-4bf9-9d84-15354f2f9888/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:55:44',
        updated_at: '2025-04-29 08:55:44'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2","05ec5c00-1710-4bf9-9d84-15354f2f9888"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Slot 54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2 updated Successfully by provider 05ec5c00-1710-4bf9-9d84-15354f2f9888',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:44 +0000] "PUT /timeslots/providers/05ec5c00-1710-4bf9-9d84-15354f2f9888/update-timeslot/54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2',
    provider_id: '05ec5c00-1710-4bf9-9d84-15354f2f9888',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:55:44',
    updated_at: '2025-04-29 08:55:44'
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["05ec5c00-1710-4bf9-9d84-15354f2f9888","2025-04-24","2025-08-30"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:44 +0000] "GET /timeslots/search/providers/05ec5c00-1710-4bf9-9d84-15354f2f9888/available-slots?from=2025-04-24&to=2025-08-30 HTTP/1.1" 200 101 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: {
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00'
  },
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2","05ec5c00-1710-4bf9-9d84-15354f2f9888"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Time slot with id: 54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:55:44 +0000] "DELETE /timeslots/providers/05ec5c00-1710-4bf9-9d84-15354f2f9888/delete-timeslot/54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["54bd4169-83c7-4d8b-abc8-fbe2a7d9c1a2"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["05ec5c00-1710-4bf9-9d84-15354f2f9888"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:55:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 08:57:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 49ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["07eefb90-60b5-4057-810a-68aab24429f7","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["07eefb90-60b5-4057-810a-68aab24429f7","2025-05-01","09:00:00","09:30:00"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Time slot created Successfully by the user 07eefb90-60b5-4057-810a-68aab24429f7 : 976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:57:48 +0000] "POST /timeslots/providers/07eefb90-60b5-4057-810a-68aab24429f7/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3',
    provider_id: '07eefb90-60b5-4057-810a-68aab24429f7',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:57:48',
    updated_at: '2025-04-29 08:57:48'
  },
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["07eefb90-60b5-4057-810a-68aab24429f7"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:57:48 +0000] "GET /timeslots/providers/07eefb90-60b5-4057-810a-68aab24429f7/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 08:57:48',
        updated_at: '2025-04-29 08:57:48'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3","07eefb90-60b5-4057-810a-68aab24429f7"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: 'Slot 976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3 updated Successfully by provider 07eefb90-60b5-4057-810a-68aab24429f7',
  level: 'info',
  timestamp: '2025-04-29 08:57:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:57:49 +0000] "PUT /timeslots/providers/07eefb90-60b5-4057-810a-68aab24429f7/update-timeslot/976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3 HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3',
    provider_id: '07eefb90-60b5-4057-810a-68aab24429f7',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 08:57:48',
    updated_at: '2025-04-29 08:57:48'
  },
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["07eefb90-60b5-4057-810a-68aab24429f7","2025-04-24","2025-08-30"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:57:49 +0000] "GET /timeslots/search/providers/07eefb90-60b5-4057-810a-68aab24429f7/available-slots?from=2025-04-24&to=2025-08-30 HTTP/1.1" 200 101 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: {
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00'
  },
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3","07eefb90-60b5-4057-810a-68aab24429f7"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Time slot with id: 976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:07:57:49 +0000] "DELETE /timeslots/providers/07eefb90-60b5-4057-810a-68aab24429f7/delete-timeslot/976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3 HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["976a5d5d-dfb3-4da1-b4e2-c3dc5ff956d3"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["07eefb90-60b5-4057-810a-68aab24429f7"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 08:57:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:03:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:03:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:06:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:06:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:08:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-28T16:21:25.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:09:07 +0000] "POST /appointment/booking HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-28T16:21:25.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:09:07 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 41ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:09:07 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 200 19 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-28T16:21:25.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:09:07 +0000] "PATCH /appointment/your-booked-appointment-id/cancel HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["your-appointment-id"], error: invalid input syntax for type uuid: "your-appointment-id"}',
  level: 'error',
  timestamp: '2025-04-29 09:09:07'
}
{
  length: 151,
  name: 'error',
  severity: 'ERROR',
  code: '22P02',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: "unnamed portal parameter $1 = '...'",
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'uuid.c',
  line: '133',
  routine: 'string_to_uuid',
  level: 'error',
  message: 'Error canceling appointment your-appointment-id by provider e1022995-d7f7-4ebc-98fd-cad361260475: invalid input syntax for type uuid: "your-appointment-id"',
  stack: 'error: invalid input syntax for type uuid: "your-appointment-id"\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:173:22)\n' +
    '    at async providerCancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:14:31)',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:09:07 +0000] "PATCH /appointment/provider/e1022995-d7f7-4ebc-98fd-cad361260475/your-appointment-id/cancel HTTP/1.1" 500 112 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:09:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:09:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:09:36'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-28T16:21:25.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-29 09:09:36'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:09:36 +0000] "POST /appointment/booking HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:09:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:16:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 5ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["3dbd093a-bbc5-400d-a555-3053a91b9bde"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["06a3fa3c-dc9c-4e9b-9638-da13e89fb00a"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["8f32f16c-5f9f-4648-96cc-3022f6d51375","3dbd093a-bbc5-400d-a555-3053a91b9bde","06a3fa3c-dc9c-4e9b-9638-da13e89fb00a","2025-04-29T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["06a3fa3c-dc9c-4e9b-9638-da13e89fb00a"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Appointment successfully booked for client 8f32f16c-5f9f-4648-96cc-3022f6d51375 on slot 06a3fa3c-dc9c-4e9b-9638-da13e89fb00a',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  level: 'error',
  message: "Error booking appointment for client 8f32f16c-5f9f-4648-96cc-3022f6d51375: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:16:47 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:16:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:17:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 63ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 4ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["ee957c89-cfd3-452f-9bbd-a625767050d4"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["afd20c3e-0088-4de7-8965-7351d9a2b85f"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["f82e1351-e2a7-47e7-9604-20ac05651182","ee957c89-cfd3-452f-9bbd-a625767050d4","afd20c3e-0088-4de7-8965-7351d9a2b85f","2025-04-29T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["afd20c3e-0088-4de7-8965-7351d9a2b85f"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Appointment successfully booked for client f82e1351-e2a7-47e7-9604-20ac05651182 on slot afd20c3e-0088-4de7-8965-7351d9a2b85f',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  level: 'error',
  message: "Error booking appointment for client f82e1351-e2a7-47e7-9604-20ac05651182: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:17:22 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:17:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:20:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 74ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 4ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["6652cada-2ba7-4428-9674-aa6f37c26009"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["5b6d6ba8-439d-47f8-99f6-113a3b2cab4b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["ec54cfe0-4995-49db-ad9a-9de5e0acb9f7","6652cada-2ba7-4428-9674-aa6f37c26009","5b6d6ba8-439d-47f8-99f6-113a3b2cab4b","2025-04-29T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["5b6d6ba8-439d-47f8-99f6-113a3b2cab4b"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Appointment successfully booked for client ec54cfe0-4995-49db-ad9a-9de5e0acb9f7 on slot 5b6d6ba8-439d-47f8-99f6-113a3b2cab4b',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  level: 'error',
  message: "Error booking appointment for client ec54cfe0-4995-49db-ad9a-9de5e0acb9f7: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:20:45 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:20:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:21:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:21:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:21:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:21:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:21:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:21:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 70ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 3ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["fd097bd7-4b93-4f20-93f3-09e3577e6a18"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["4604dbd0-1404-4c54-89d5-73f027528a37"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["1849b231-b437-4f8f-b8d4-e98cdc266c8c","fd097bd7-4b93-4f20-93f3-09e3577e6a18","4604dbd0-1404-4c54-89d5-73f027528a37","2025-04-29T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["4604dbd0-1404-4c54-89d5-73f027528a37"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Appointment successfully booked for client 1849b231-b437-4f8f-b8d4-e98cdc266c8c on slot 4604dbd0-1404-4c54-89d5-73f027528a37',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  level: 'error',
  message: "Error booking appointment for client 1849b231-b437-4f8f-b8d4-e98cdc266c8c: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:21:39 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:21:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:22:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:22:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:22:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:22:58'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 64ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:22:58'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 4ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:22:58'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["042f1dea-b738-4574-ae11-906388b070d0"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:22:58'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["eccc7948-2ac9-4842-b39b-8b169cb9a7f9"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:22:59'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["3798e704-9948-4e8d-837a-dbaf45c4d3e7","042f1dea-b738-4574-ae11-906388b070d0","eccc7948-2ac9-4842-b39b-8b169cb9a7f9","2025-04-29T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:22:59'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["eccc7948-2ac9-4842-b39b-8b169cb9a7f9"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:22:59'
}
{
  message: 'Appointment successfully booked for client 3798e704-9948-4e8d-837a-dbaf45c4d3e7 on slot eccc7948-2ac9-4842-b39b-8b169cb9a7f9',
  level: 'info',
  timestamp: '2025-04-29 09:22:59'
}
{
  level: 'error',
  message: "Error booking appointment for client 3798e704-9948-4e8d-837a-dbaf45c4d3e7: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:22:59'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:22:59 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:22:59'
}
{
  message: ' The time slot id is: eccc7948-2ac9-4842-b39b-8b169cb9a7f9',
  level: 'info',
  timestamp: '2025-04-29 09:22:59'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:23:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:23:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 37ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 4ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["ad2475a7-0019-404a-af21-f11f0c972bb0"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["19cb7801-4062-4901-998f-79705ab6a4d5"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["e4f4ebc0-012c-41f7-871a-a852785cf405","ad2475a7-0019-404a-af21-f11f0c972bb0","19cb7801-4062-4901-998f-79705ab6a4d5","2025-04-29T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["19cb7801-4062-4901-998f-79705ab6a4d5"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Appointment successfully booked for client e4f4ebc0-012c-41f7-871a-a852785cf405 on slot 19cb7801-4062-4901-998f-79705ab6a4d5',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  level: 'error',
  message: "Error booking appointment for client e4f4ebc0-012c-41f7-871a-a852785cf405: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:23:46 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: ' The time slot id is: [object Object]',
  level: 'info',
  timestamp: '2025-04-29 09:23:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:24:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:24:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:24:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 63ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 4ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["352f8b66-bf0f-40cb-8c06-398d127213bc"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["98b1cb49-eaa8-4cf1-bb76-1f5dd6c9b803"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["d4cdf61e-1e91-487f-9423-16838ae7453c","352f8b66-bf0f-40cb-8c06-398d127213bc","98b1cb49-eaa8-4cf1-bb76-1f5dd6c9b803","2025-04-29T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["98b1cb49-eaa8-4cf1-bb76-1f5dd6c9b803"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Appointment successfully booked for client d4cdf61e-1e91-487f-9423-16838ae7453c on slot 98b1cb49-eaa8-4cf1-bb76-1f5dd6c9b803',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  level: 'error',
  message: "Error booking appointment for client d4cdf61e-1e91-487f-9423-16838ae7453c: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:24:30 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Server error while booking appointment',
  error: "Cannot read properties of undefined (reading 'to')",
  level: 'info',
  timestamp: '2025-04-29 09:24:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:25:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 66ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 5ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["a1270393-e916-4bc7-9779-f64151ed737d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["e4c4b8e5-410c-4422-a57d-7e4076737a82"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["25c3861d-0c1c-4662-b384-d388af58b066","a1270393-e916-4bc7-9779-f64151ed737d","e4c4b8e5-410c-4422-a57d-7e4076737a82","2025-04-29T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["e4c4b8e5-410c-4422-a57d-7e4076737a82"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Appointment successfully booked for client 25c3861d-0c1c-4662-b384-d388af58b066 on slot e4c4b8e5-410c-4422-a57d-7e4076737a82',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  level: 'error',
  message: "Error booking appointment for client 25c3861d-0c1c-4662-b384-d388af58b066: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:25:50 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'response body',
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Server error while booking appointment',
  error: "Cannot read properties of undefined (reading 'to')",
  level: 'info',
  timestamp: '2025-04-29 09:25:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:28:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 38ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 4ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["bc510915-b737-4dff-904d-958f433904bf"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["928fb3e3-d1e2-44b4-9646-75435756ebfe"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["928fb3e3-d1e2-44b4-9646-75435756ebfe"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["74cdd26d-4a74-4874-beef-26bcad046164","bc510915-b737-4dff-904d-958f433904bf","928fb3e3-d1e2-44b4-9646-75435756ebfe","2025-04-29T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["928fb3e3-d1e2-44b4-9646-75435756ebfe"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Appointment successfully booked for client 74cdd26d-4a74-4874-beef-26bcad046164 on slot 928fb3e3-d1e2-44b4-9646-75435756ebfe',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  level: 'error',
  message: "Error booking appointment for client 74cdd26d-4a74-4874-beef-26bcad046164: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:28:55 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'response body',
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Server error while booking appointment',
  error: "Cannot read properties of undefined (reading 'to')",
  level: 'info',
  timestamp: '2025-04-29 09:28:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:29:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Executed query: { text: INSERT INTO clients (first_name, last_name, email, password)\n' +
    "       VALUES ('Test', 'Client', 'clien..., params: undefined, duration: 39ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Executed query: { text: INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "       VALUES ('Test', 'Pr..., params: undefined, duration: 5ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Executed query: { text: INSERT INTO time_slots (provider_id, day, start_time, end_time, is_booked)\n' +
    '       VALUES ($1, CURREN..., params: ["f4204aca-df49-4b1c-b593-4a9e4ff51177"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["4bbc913f-90d0-44cb-bab6-f7ec604c2cc4"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["602fcab3-c137-4173-a188-50c8a1146f7e","f4204aca-df49-4b1c-b593-4a9e4ff51177","4bbc913f-90d0-44cb-bab6-f7ec604c2cc4","2025-04-29T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["4bbc913f-90d0-44cb-bab6-f7ec604c2cc4"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Appointment successfully booked for client 602fcab3-c137-4173-a188-50c8a1146f7e on slot 4bbc913f-90d0-44cb-bab6-f7ec604c2cc4',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  level: 'error',
  message: "Error booking appointment for client 602fcab3-c137-4173-a188-50c8a1146f7e: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:30:48 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'response body',
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Server error while booking appointment',
  error: "Cannot read properties of undefined (reading 'to')",
  level: 'info',
  timestamp: '2025-04-29 09:30:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:37:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:37:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:39:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:39:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:49:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 33ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$FwfT0ZPdWnh8nGUYclEE/e1Lw/9xHS1JWM/vimd7NtJXqphe2yJ3a",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'User registered successfully: b5eb0be6-8c20-4d7f-a634-b32843880f46',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:49:37 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'User logged in successfully: client@example.com (ID: b5eb0be6-8c20-4d7f-a634-b32843880f46)',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:49:37 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:49:37 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Error executing query: { text: DELETE FROM appointments WHERE time_slot_id = $1..., params: [null], error: column "time_slot_id" does not exist}',
  level: 'error',
  timestamp: '2025-04-29 09:49:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:50:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:51:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:51:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 26ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:51:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: client@example.com',
  level: 'warn',
  timestamp: '2025-04-29 09:51:14'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:51:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:51:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:51:14'
}
{
  message: 'User logged in successfully: client@example.com (ID: b5eb0be6-8c20-4d7f-a634-b32843880f46)',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:51:15 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:51:15 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 21ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:51:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:51:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:51:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:40'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 25ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$MbviQ.IaSx0HqEhOQP3OS.C5qxG2Y7T04ZXAZMFC3ffor.IHZ6O2i",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'User registered successfully: 4a924427-e9c3-431e-93d3-c5c2ecd2fe1f',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:51:41 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'User logged in successfully: client@example.com (ID: 4a924427-e9c3-431e-93d3-c5c2ecd2fe1f)',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:51:41 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 20ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 0ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:51:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:51:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 25ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$CVOjfn23dYYOVRtrus092uke/kWvI.SoznSKsSDdaFdEfmTtOMIwW",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'User registered successfully: fcad219c-e4c5-490a-9b32-5bf523828206',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:52:02 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'User logged in successfully: client@example.com (ID: fcad219c-e4c5-490a-9b32-5bf523828206)',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:52:02 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:52:02 +0000] "POST /appointments/booking HTTP/1.1" 404 160 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 21ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 0ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:52:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 55ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:55:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 26ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$yk2yC9OGn0G/jU2z.QZ1DeqnhzZBb5O2pAsMFiZyCvtpnzoDAHSi2",null], duration: 32ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'User registered successfully: 08673941-bf17-4819-941a-5da96873fea7',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:55:55 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'User logged in successfully: client@example.com (ID: 08673941-bf17-4819-941a-5da96873fea7)',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:55:55 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:55:55 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 18ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:55:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:58:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 09:59:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 28ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$jAybw0jbxe0RQMfOPYbIAe.CYQXHXwpFUpgnY7MzOAZfOPmKOmVRu",null], duration: 33ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'User registered successfully: 5a4669ba-2f7d-4ece-8939-7ce21faad080',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:59:11 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'User logged in successfully: client@example.com (ID: 5a4669ba-2f7d-4ece-8939-7ce21faad080)',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:59:11 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745917151901.gmail.com"], duration: 34ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time, status)\n' +
    `      VALUES ($1, '20..., params: ["a0f5b071-1a0d-4c79-b676-477b821c79e7"], error: column "status" of relation "time_slots" does not exist}`,
  level: 'error',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:08:59:11 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 17ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a0f5b071-1a0d-4c79-b676-477b821c79e7"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 09:59:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:02:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:02:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:02:39'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 30ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$qqYEBR4DlNfMSjpUdeFKVefTnxSMEM6EbT5fd1UbkighqI5JhOaku",null], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'User registered successfully: 57ce1c1a-a8e3-49bb-8684-582d88754ff7',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:02:40 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'User logged in successfully: client@example.com (ID: 57ce1c1a-a8e3-49bb-8684-582d88754ff7)',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:02:40 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745917360157.gmail.com"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["68bfb25d-b3f7-4e58-bd21-5e4e8cbb78a5"], duration: 8ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["876f80db-3297-4b43-b2f6-7659014076c8"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["57ce1c1a-a8e3-49bb-8684-582d88754ff7","68bfb25d-b3f7-4e58-bd21-5e4e8cbb78a5","876f80db-3297-4b43-b2f6-7659014076c8","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["876f80db-3297-4b43-b2f6-7659014076c8"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Appointment successfully booked for client 57ce1c1a-a8e3-49bb-8684-582d88754ff7 on slot 876f80db-3297-4b43-b2f6-7659014076c8',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  level: 'error',
  message: "Error booking appointment for client 57ce1c1a-a8e3-49bb-8684-582d88754ff7: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:02:40 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["876f80db-3297-4b43-b2f6-7659014076c8"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["876f80db-3297-4b43-b2f6-7659014076c8"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["68bfb25d-b3f7-4e58-bd21-5e4e8cbb78a5"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:02:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:04:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:04:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 31ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$7cUl0HbjLAJGPvDqqS4QHO2tK3Z7Z6uBPvkIhjo0H6UsRuev0fZUG",null], duration: 33ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'User registered successfully: b1d0884e-e7c7-4a1d-b036-b480e13c29ec',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:04:41 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'User logged in successfully: client@example.com (ID: b1d0884e-e7c7-4a1d-b036-b480e13c29ec)',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:04:41 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:04:41 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 16ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: [null], duration: 0ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:04:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:06:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 35ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$9H6pM61Ohgk/csIYfB4afOUfNbYuDoNQaqTJfd.i19MJWwT21oBL6",null], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'User registered successfully: 0fef4ca5-effd-43b6-a13c-e43accb0e216',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:06:25 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'User logged in successfully: client@example.com (ID: 0fef4ca5-effd-43b6-a13c-e43accb0e216)',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:06:25 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745917585853@gmail.com0"], duration: 11ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time, status)\n' +
    `      VALUES ($1, '20..., params: ["7ba08a84-207a-4852-a5e9-0f35061b3140"], error: column "status" of relation "time_slots" does not exist}`,
  level: 'error',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:06:25 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: [null], duration: 22ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: [null], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7ba08a84-207a-4852-a5e9-0f35061b3140"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:06:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:06:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 26ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$NBjDVgb05BYMnTHfufJo6uZ0bKXqn8TSK6F8mBCCqum0W1Ehs1ffK",null], duration: 32ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'User registered successfully: 812ec83b-012d-4d2b-88fb-2c7e5ab3727e',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:07:00 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'User logged in successfully: client@example.com (ID: 812ec83b-012d-4d2b-88fb-2c7e5ab3727e)',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:07:00 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745917620420@gmail.com0"], duration: 32ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["fefb1a8b-e700-4c28-87d0-717d5afbb7cd"], duration: 6ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["c2ea9a0a-e649-4c9a-990a-15aa0e756f27"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["812ec83b-012d-4d2b-88fb-2c7e5ab3727e","fefb1a8b-e700-4c28-87d0-717d5afbb7cd","c2ea9a0a-e649-4c9a-990a-15aa0e756f27","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["c2ea9a0a-e649-4c9a-990a-15aa0e756f27"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Appointment successfully booked for client 812ec83b-012d-4d2b-88fb-2c7e5ab3727e on slot c2ea9a0a-e649-4c9a-990a-15aa0e756f27',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  level: 'error',
  message: "Error booking appointment for client 812ec83b-012d-4d2b-88fb-2c7e5ab3727e: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:07:00 +0000] "POST /appointment/booking HTTP/1.1" 500 113 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["c2ea9a0a-e649-4c9a-990a-15aa0e756f27"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["c2ea9a0a-e649-4c9a-990a-15aa0e756f27"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fefb1a8b-e700-4c28-87d0-717d5afbb7cd"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:07:00'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:17:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 28ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$O0IaSFwlm68FCfqXuK4HSu/8.DLE3Y99Bg5dNcZ6GjkZVS0/KEIjK",null], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'User registered successfully: 42559204-248c-4599-9847-b243c08d36ff',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:17:54 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'User logged in successfully: client@example.com (ID: 42559204-248c-4599-9847-b243c08d36ff)',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:17:54 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745918274711@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["2c137165-2712-4fae-b246-227777c5ed64"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["23ec3bac-50a6-40bc-825e-5e4e2b95d9eb"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["42559204-248c-4599-9847-b243c08d36ff","2c137165-2712-4fae-b246-227777c5ed64","23ec3bac-50a6-40bc-825e-5e4e2b95d9eb","2025-04-30T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["23ec3bac-50a6-40bc-825e-5e4e2b95d9eb"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Appointment successfully booked for client 42559204-248c-4599-9847-b243c08d36ff on slot 23ec3bac-50a6-40bc-825e-5e4e2b95d9eb',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  level: 'error',
  message: "Error booking time slot for client 42559204-248c-4599-9847-b243c08d36ff: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:296:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:17:54 +0000] "POST /appointment/booking HTTP/1.1" 500 98 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["23ec3bac-50a6-40bc-825e-5e4e2b95d9eb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["23ec3bac-50a6-40bc-825e-5e4e2b95d9eb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["2c137165-2712-4fae-b246-227777c5ed64"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:17:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:20:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 28ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$YqyEHGdCuE21nX9bFu1o2uKRMlATQDkYIVudw3vszvbKORrxMTtlK",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'User registered successfully: 54baea3e-83cc-478f-8f4d-5a89e54a1e5a',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:20:16 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'User logged in successfully: client@example.com (ID: 54baea3e-83cc-478f-8f4d-5a89e54a1e5a)',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:20:16 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745918416453@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["c64e0421-4835-406c-8e5e-5867fb39f86a"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["b0d6b5d0-dfd9-4293-830b-92df6b03ec33"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["54baea3e-83cc-478f-8f4d-5a89e54a1e5a","c64e0421-4835-406c-8e5e-5867fb39f86a","b0d6b5d0-dfd9-4293-830b-92df6b03ec33","2025-04-30T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["b0d6b5d0-dfd9-4293-830b-92df6b03ec33"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Appointment successfully booked for client 54baea3e-83cc-478f-8f4d-5a89e54a1e5a on slot b0d6b5d0-dfd9-4293-830b-92df6b03ec33',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:20:16 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["b0d6b5d0-dfd9-4293-830b-92df6b03ec33"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["b0d6b5d0-dfd9-4293-830b-92df6b03ec33"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c64e0421-4835-406c-8e5e-5867fb39f86a"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:20:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:22:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:22:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 30ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$9xqLTtLiwxjV7hJKeMryLOIxRD6qyReBQbI1FlNCq/LyEdlienueK",null], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'User registered successfully: d6a23239-fe93-47ff-8a0a-6dc65545c8d2',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:22:14 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'User logged in successfully: client@example.com (ID: d6a23239-fe93-47ff-8a0a-6dc65545c8d2)',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:22:14 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745918534292@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["3bb59dbe-8728-4b6a-a32c-a4a1b8b2dad1"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["becbd3a3-22af-4fea-8f4d-ac1c4e8233dc"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["d6a23239-fe93-47ff-8a0a-6dc65545c8d2","3bb59dbe-8728-4b6a-a32c-a4a1b8b2dad1","becbd3a3-22af-4fea-8f4d-ac1c4e8233dc","2025-04-30T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["becbd3a3-22af-4fea-8f4d-ac1c4e8233dc"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Appointment successfully booked for client d6a23239-fe93-47ff-8a0a-6dc65545c8d2 on slot becbd3a3-22af-4fea-8f4d-ac1c4e8233dc',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:22:14 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["becbd3a3-22af-4fea-8f4d-ac1c4e8233dc"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["becbd3a3-22af-4fea-8f4d-ac1c4e8233dc"], duration: 29ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["3bb59dbe-8728-4b6a-a32c-a4a1b8b2dad1"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:22:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:23:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:23:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:23:32'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 25ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:23:32'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$vTMCygeQX/SrDoFrFLNkzerkf5ucVGqHAWBD6ZwBRHShd6JPsIIda",null], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'User registered successfully: 8bef7452-0c0d-4862-b6f3-59ea6c780039',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:23:33 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'User logged in successfully: client@example.com (ID: 8bef7452-0c0d-4862-b6f3-59ea6c780039)',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:23:33 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745918613135@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["2b77c42e-9c18-4276-add8-9b9ad71cf9d7"], duration: 3ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0dcde7f4-6f4f-41cd-ba4e-732b67eb54f6"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["8bef7452-0c0d-4862-b6f3-59ea6c780039","2b77c42e-9c18-4276-add8-9b9ad71cf9d7","0dcde7f4-6f4f-41cd-ba4e-732b67eb54f6","2025-04-30T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["0dcde7f4-6f4f-41cd-ba4e-732b67eb54f6"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Appointment successfully booked for client 8bef7452-0c0d-4862-b6f3-59ea6c780039 on slot 0dcde7f4-6f4f-41cd-ba4e-732b67eb54f6',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:23:33 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["0dcde7f4-6f4f-41cd-ba4e-732b67eb54f6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["0dcde7f4-6f4f-41cd-ba4e-732b67eb54f6"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["2b77c42e-9c18-4276-add8-9b9ad71cf9d7"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:23:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:28:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 36ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$ECWtkyqhUsRPkYAZ6FSVKOkpK.7G1EMc6IinK8HQ7/lNaecXTT/5C",null], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'User registered successfully: 7ad78258-2895-46a2-9661-d5bac072b1f9',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:28:34 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'User logged in successfully: client@example.com (ID: 7ad78258-2895-46a2-9661-d5bac072b1f9)',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:28:34 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745918914536@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["c6b37d2c-fcf1-4710-bac0-de166f17875c"], duration: 7ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["2428b4f0-3bd5-46b0-a018-c0a09f06638f"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["7ad78258-2895-46a2-9661-d5bac072b1f9","c6b37d2c-fcf1-4710-bac0-de166f17875c","2428b4f0-3bd5-46b0-a018-c0a09f06638f","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["2428b4f0-3bd5-46b0-a018-c0a09f06638f"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Appointment successfully booked for client 7ad78258-2895-46a2-9661-d5bac072b1f9 on slot 2428b4f0-3bd5-46b0-a018-c0a09f06638f',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:28:34 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["7ad78258-2895-46a2-9661-d5bac072b1f9"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:28:34 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["2428b4f0-3bd5-46b0-a018-c0a09f06638f"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["2428b4f0-3bd5-46b0-a018-c0a09f06638f"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c6b37d2c-fcf1-4710-bac0-de166f17875c"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:28:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 10:55:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 72ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$Bcq5jbjSFlDsfr8ww2rCeuAmQMpWwLePAnCFK8xNhvAPTXYrmeyE.",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'User registered successfully: 06cdde6b-8ecd-4fdf-8969-6a7b97fcd988',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:55:15 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'User logged in successfully: client@example.com (ID: 06cdde6b-8ecd-4fdf-8969-6a7b97fcd988)',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:55:15 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745920515640@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["e0fd4880-98f9-4e96-b816-56de369f0d58"], duration: 8ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["482348ad-e4d2-40f5-95a4-e4422764ca65"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["06cdde6b-8ecd-4fdf-8969-6a7b97fcd988","e0fd4880-98f9-4e96-b816-56de369f0d58","482348ad-e4d2-40f5-95a4-e4422764ca65","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["482348ad-e4d2-40f5-95a4-e4422764ca65"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Appointment successfully booked for client 06cdde6b-8ecd-4fdf-8969-6a7b97fcd988 on slot 482348ad-e4d2-40f5-95a4-e4422764ca65',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:55:15 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["06cdde6b-8ecd-4fdf-8969-6a7b97fcd988"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:55:15 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e0fd4880-98f9-4e96-b816-56de369f0d58"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:09:55:15 +0000] "GET /appointment/provider/view-bookings/e0fd4880-98f9-4e96-b816-56de369f0d58 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["482348ad-e4d2-40f5-95a4-e4422764ca65"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["482348ad-e4d2-40f5-95a4-e4422764ca65"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["e0fd4880-98f9-4e96-b816-56de369f0d58"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 10:55:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:02:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:02:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:02:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 41ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:02:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$k/x1pwNM2BQRvf01Q16i5OWHQN2sDrQTxdIHHTH1PgxGnxg37rgmi",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'User registered successfully: 1c98ec2e-b2cc-42f7-ad52-e2faead054f7',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:02:31 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'User logged in successfully: client@example.com (ID: 1c98ec2e-b2cc-42f7-ad52-e2faead054f7)',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:02:31 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745920951396@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["c27b3606-f91d-4d7c-9952-7ce28f6acd63"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["c03979b5-bbf4-4b2e-aa73-b760c0ebb8cb"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["1c98ec2e-b2cc-42f7-ad52-e2faead054f7","c27b3606-f91d-4d7c-9952-7ce28f6acd63","c03979b5-bbf4-4b2e-aa73-b760c0ebb8cb","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["c03979b5-bbf4-4b2e-aa73-b760c0ebb8cb"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Appointment successfully booked for client 1c98ec2e-b2cc-42f7-ad52-e2faead054f7 on slot c03979b5-bbf4-4b2e-aa73-b760c0ebb8cb',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:02:31 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["1c98ec2e-b2cc-42f7-ad52-e2faead054f7"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:02:31 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["c27b3606-f91d-4d7c-9952-7ce28f6acd63"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:02:31 +0000] "GET /appointment/provider/view-bookings/c27b3606-f91d-4d7c-9952-7ce28f6acd63 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["c03979b5-bbf4-4b2e-aa73-b760c0ebb8cb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["c03979b5-bbf4-4b2e-aa73-b760c0ebb8cb"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c27b3606-f91d-4d7c-9952-7ce28f6acd63"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:02:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:03:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:04:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:04:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:04:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 56ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$NZjDK84BWBJeoZeiH0YFzeg6YcpKWqJvTRU5iDfm5ftlTlNLz6noC",null], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'User registered successfully: 47c64af0-f121-4a79-b19a-d1e9d98bc39e',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:05:06 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'User logged in successfully: client@example.com (ID: 47c64af0-f121-4a79-b19a-d1e9d98bc39e)',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:05:06 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:05:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745921107001@gmail.com0"], duration: 6ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["f9347e4b-cfaf-4b31-a901-9dd2995805d3"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0ed3f3a2-631c-4360-8657-21436b5d0676"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["47c64af0-f121-4a79-b19a-d1e9d98bc39e","f9347e4b-cfaf-4b31-a901-9dd2995805d3","0ed3f3a2-631c-4360-8657-21436b5d0676","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["0ed3f3a2-631c-4360-8657-21436b5d0676"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Appointment successfully booked for client 47c64af0-f121-4a79-b19a-d1e9d98bc39e on slot 0ed3f3a2-631c-4360-8657-21436b5d0676',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:05:07 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["47c64af0-f121-4a79-b19a-d1e9d98bc39e"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:05:07 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["f9347e4b-cfaf-4b31-a901-9dd2995805d3"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:05:07 +0000] "GET /appointment/provider/view-bookings/f9347e4b-cfaf-4b31-a901-9dd2995805d3 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["a97538a7-3f1a-491b-ac7e-1a8391e23aca"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["a97538a7-3f1a-491b-ac7e-1a8391e23aca"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Appointment a97538a7-3f1a-491b-ac7e-1a8391e23aca canceled by user 47c64af0-f121-4a79-b19a-d1e9d98bc39e',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  level: 'error',
  message: "Error canceling appointment a97538a7-3f1a-491b-ac7e-1a8391e23aca: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at cancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:159:14)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:05:07 +0000] "PATCH /appointment/a97538a7-3f1a-491b-ac7e-1a8391e23aca/cancel HTTP/1.1" 500 103 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["0ed3f3a2-631c-4360-8657-21436b5d0676"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["0ed3f3a2-631c-4360-8657-21436b5d0676"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f9347e4b-cfaf-4b31-a901-9dd2995805d3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:05:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:06:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:08:00'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:08:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:08:06'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 60ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:08:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$hi8M4I/D7JbExMwyBupKIuKwuK94fljbAwQdsRoA.XTl5iwvBa0US",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:06'
}
{
  message: 'User registered successfully: b2a4bd5e-8fde-43e7-a7f7-7561e96b047a',
  level: 'info',
  timestamp: '2025-04-29 11:08:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:06 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:06'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'User logged in successfully: client@example.com (ID: b2a4bd5e-8fde-43e7-a7f7-7561e96b047a)',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:07 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745921287190@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["ae79056a-67ca-4c18-8ce7-ad45dad8b642"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["159eb400-a959-44db-9386-528aaf577979"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["b2a4bd5e-8fde-43e7-a7f7-7561e96b047a","ae79056a-67ca-4c18-8ce7-ad45dad8b642","159eb400-a959-44db-9386-528aaf577979","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["159eb400-a959-44db-9386-528aaf577979"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Appointment successfully booked for client b2a4bd5e-8fde-43e7-a7f7-7561e96b047a on slot 159eb400-a959-44db-9386-528aaf577979',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:07 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["b2a4bd5e-8fde-43e7-a7f7-7561e96b047a"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:07 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["ae79056a-67ca-4c18-8ce7-ad45dad8b642"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:07 +0000] "GET /appointment/provider/view-bookings/ae79056a-67ca-4c18-8ce7-ad45dad8b642 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["b2a4bd5e-8fde-43e7-a7f7-7561e96b047a"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:07 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["edb0d7d9-8b35-44fa-8cec-38c7b76a58b7"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["edb0d7d9-8b35-44fa-8cec-38c7b76a58b7"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Appointment edb0d7d9-8b35-44fa-8cec-38c7b76a58b7 canceled by user b2a4bd5e-8fde-43e7-a7f7-7561e96b047a',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  level: 'error',
  message: "Error canceling appointment edb0d7d9-8b35-44fa-8cec-38c7b76a58b7: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at cancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:159:14)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:08:07 +0000] "PATCH /appointment/edb0d7d9-8b35-44fa-8cec-38c7b76a58b7/cancel HTTP/1.1" 500 103 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["159eb400-a959-44db-9386-528aaf577979"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["159eb400-a959-44db-9386-528aaf577979"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["ae79056a-67ca-4c18-8ce7-ad45dad8b642"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:08:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:09:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 62ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$rPAmXdsIjVt4wPYNvUikueGYl/t0Xs1QIgWQb5tLxQiMIXN.jCeIa",null], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'User registered successfully: 027ae289-60a7-4a91-b16a-b7187fd47df2',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'User logged in successfully: client@example.com (ID: 027ae289-60a7-4a91-b16a-b7187fd47df2)',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745921390629@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["c8cb193c-77bc-4858-8d1a-5032a36c3e32"], duration: 10ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["bae134f6-5ef6-4628-8cba-db50d0662776"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["027ae289-60a7-4a91-b16a-b7187fd47df2","c8cb193c-77bc-4858-8d1a-5032a36c3e32","bae134f6-5ef6-4628-8cba-db50d0662776","2025-04-30T23:00:00.000Z","booked"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["bae134f6-5ef6-4628-8cba-db50d0662776"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Appointment successfully booked for client 027ae289-60a7-4a91-b16a-b7187fd47df2 on slot bae134f6-5ef6-4628-8cba-db50d0662776',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["027ae289-60a7-4a91-b16a-b7187fd47df2"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["c8cb193c-77bc-4858-8d1a-5032a36c3e32"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "GET /appointment/provider/view-bookings/c8cb193c-77bc-4858-8d1a-5032a36c3e32 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["027ae289-60a7-4a91-b16a-b7187fd47df2"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["6f3d6019-3a5f-47ed-83a0-25c88311de77"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["6f3d6019-3a5f-47ed-83a0-25c88311de77"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Appointment 6f3d6019-3a5f-47ed-83a0-25c88311de77 canceled by user 027ae289-60a7-4a91-b16a-b7187fd47df2',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:09:50 +0000] "PATCH /appointment/6f3d6019-3a5f-47ed-83a0-25c88311de77/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["bae134f6-5ef6-4628-8cba-db50d0662776"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["bae134f6-5ef6-4628-8cba-db50d0662776"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c8cb193c-77bc-4858-8d1a-5032a36c3e32"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:09:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:13:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 71ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$aQsv0M1RU1khiDp7PcgyXeJP5UbhD9syej/8UPIhv51jSH6m67FCW",null], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'User registered successfully: a7919ce3-034b-4719-b461-e65689ad0204',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:44 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'User logged in successfully: client@example.com (ID: a7919ce3-034b-4719-b461-e65689ad0204)',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:44 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745921624886@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["233c29f4-724a-4a2f-9fec-10ab21494479"], duration: 7ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["c3e787db-5db3-4604-aad1-c9bd08b42971"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a7919ce3-034b-4719-b461-e65689ad0204","233c29f4-724a-4a2f-9fec-10ab21494479","c3e787db-5db3-4604-aad1-c9bd08b42971","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["c3e787db-5db3-4604-aad1-c9bd08b42971"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Appointment successfully booked for client a7919ce3-034b-4719-b461-e65689ad0204 on slot c3e787db-5db3-4604-aad1-c9bd08b42971',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:44 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a7919ce3-034b-4719-b461-e65689ad0204"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:44 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["233c29f4-724a-4a2f-9fec-10ab21494479"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:44 +0000] "GET /appointment/provider/view-bookings/233c29f4-724a-4a2f-9fec-10ab21494479 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a7919ce3-034b-4719-b461-e65689ad0204"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:44 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:44'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["9395ac40-9733-4cd5-b263-5ff260bf0b09"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["9395ac40-9733-4cd5-b263-5ff260bf0b09"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Appointment 9395ac40-9733-4cd5-b263-5ff260bf0b09 canceled by user a7919ce3-034b-4719-b461-e65689ad0204',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:13:45 +0000] "PATCH /appointment/9395ac40-9733-4cd5-b263-5ff260bf0b09/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["c3e787db-5db3-4604-aad1-c9bd08b42971"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["c3e787db-5db3-4604-aad1-c9bd08b42971"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["233c29f4-724a-4a2f-9fec-10ab21494479"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:13:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:14:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 46ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$3ha7eNkFRi0e1PqO2Ta4T.X0H5q23GAk52bEfTv014nJpL9kCiurm",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'User registered successfully: f481ddb2-a981-4770-9330-02a347d1210d',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'User logged in successfully: client@example.com (ID: f481ddb2-a981-4770-9330-02a347d1210d)',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745921674667@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["6a5c8e1a-69f0-41bd-927b-255411d40f58"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["5f554e10-213b-4539-ad1d-e4546adf08e3"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["f481ddb2-a981-4770-9330-02a347d1210d","6a5c8e1a-69f0-41bd-927b-255411d40f58","5f554e10-213b-4539-ad1d-e4546adf08e3","2025-04-30T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["5f554e10-213b-4539-ad1d-e4546adf08e3"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Appointment successfully booked for client f481ddb2-a981-4770-9330-02a347d1210d on slot 5f554e10-213b-4539-ad1d-e4546adf08e3',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["f481ddb2-a981-4770-9330-02a347d1210d"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["6a5c8e1a-69f0-41bd-927b-255411d40f58"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "GET /appointment/provider/view-bookings/6a5c8e1a-69f0-41bd-927b-255411d40f58 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["f481ddb2-a981-4770-9330-02a347d1210d"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["b28bf367-36e6-44e0-92f6-fa060272d091"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["b28bf367-36e6-44e0-92f6-fa060272d091"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Appointment b28bf367-36e6-44e0-92f6-fa060272d091 canceled by user f481ddb2-a981-4770-9330-02a347d1210d',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:14:34 +0000] "PATCH /appointment/b28bf367-36e6-44e0-92f6-fa060272d091/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["5f554e10-213b-4539-ad1d-e4546adf08e3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["5f554e10-213b-4539-ad1d-e4546adf08e3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6a5c8e1a-69f0-41bd-927b-255411d40f58"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:14:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:16:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:16:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:16:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 52ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$Ho.UnwgclTqHqmzYqX9vlO0DuFbuszSejFvAQZWfBqSw5eRg85DX.",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'User registered successfully: 16bfc786-609a-404d-8fb3-4851cde78229',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'User logged in successfully: client@example.com (ID: 16bfc786-609a-404d-8fb3-4851cde78229)',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745921827681@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["abae02b3-22f5-4fed-892b-119b5a6778c9"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["54103a37-1204-4658-baba-a95b55476a27"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["16bfc786-609a-404d-8fb3-4851cde78229","abae02b3-22f5-4fed-892b-119b5a6778c9","54103a37-1204-4658-baba-a95b55476a27","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["54103a37-1204-4658-baba-a95b55476a27"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Appointment successfully booked for client 16bfc786-609a-404d-8fb3-4851cde78229 on slot 54103a37-1204-4658-baba-a95b55476a27',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["16bfc786-609a-404d-8fb3-4851cde78229"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["abae02b3-22f5-4fed-892b-119b5a6778c9"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "GET /appointment/provider/view-bookings/abae02b3-22f5-4fed-892b-119b5a6778c9 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["16bfc786-609a-404d-8fb3-4851cde78229"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["6e49501b-df7c-43ad-9afd-9b2da6df973c"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["6e49501b-df7c-43ad-9afd-9b2da6df973c"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Appointment 6e49501b-df7c-43ad-9afd-9b2da6df973c canceled by user 16bfc786-609a-404d-8fb3-4851cde78229',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:17:07 +0000] "PATCH /appointment/6e49501b-df7c-43ad-9afd-9b2da6df973c/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["54103a37-1204-4658-baba-a95b55476a27"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["54103a37-1204-4658-baba-a95b55476a27"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["abae02b3-22f5-4fed-892b-119b5a6778c9"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:17:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:19:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:20:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:20:00'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 38ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$8NheQmWeEJnmeG2nK1IJNOdLI/9oZWGJNVc6DKwSlNuHqXuWTX4Qa",null], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:00'
}
{
  message: 'User registered successfully: 125cfe02-7be1-42d8-aa15-bc149de46d55',
  level: 'info',
  timestamp: '2025-04-29 11:20:00'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:00 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:00'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'User logged in successfully: client@example.com (ID: 125cfe02-7be1-42d8-aa15-bc149de46d55)',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922001187@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["85a64920-fcbd-4818-a3ca-8166ce8a7bdb"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["166ed0f7-45a2-4ff7-b75a-666e87bf6c1e"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["125cfe02-7be1-42d8-aa15-bc149de46d55","85a64920-fcbd-4818-a3ca-8166ce8a7bdb","166ed0f7-45a2-4ff7-b75a-666e87bf6c1e","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["166ed0f7-45a2-4ff7-b75a-666e87bf6c1e"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Appointment successfully booked for client 125cfe02-7be1-42d8-aa15-bc149de46d55 on slot 166ed0f7-45a2-4ff7-b75a-666e87bf6c1e',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["125cfe02-7be1-42d8-aa15-bc149de46d55"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["85a64920-fcbd-4818-a3ca-8166ce8a7bdb"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "GET /appointment/provider/view-bookings/85a64920-fcbd-4818-a3ca-8166ce8a7bdb HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["125cfe02-7be1-42d8-aa15-bc149de46d55"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["1b8f1211-f4cd-4bc9-bc35-daf5568d9468"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["1b8f1211-f4cd-4bc9-bc35-daf5568d9468"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Appointment 1b8f1211-f4cd-4bc9-bc35-daf5568d9468 canceled by user 125cfe02-7be1-42d8-aa15-bc149de46d55',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "PATCH /appointment/1b8f1211-f4cd-4bc9-bc35-daf5568d9468/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["85a64920-fcbd-4818-a3ca-8166ce8a7bdb"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["393800c1-2f15-4552-a3b1-66549f46177b"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["125cfe02-7be1-42d8-aa15-bc149de46d55","85a64920-fcbd-4818-a3ca-8166ce8a7bdb","393800c1-2f15-4552-a3b1-66549f46177b","2025-05-02T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["393800c1-2f15-4552-a3b1-66549f46177b"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Appointment successfully booked for client 125cfe02-7be1-42d8-aa15-bc149de46d55 on slot 393800c1-2f15-4552-a3b1-66549f46177b',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["1a62919b-0e28-4249-9f01-a31075bf6d7a"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["1a62919b-0e28-4249-9f01-a31075bf6d7a"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["393800c1-2f15-4552-a3b1-66549f46177b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Appointment 1a62919b-0e28-4249-9f01-a31075bf6d7a canceled successfully by provider 85a64920-fcbd-4818-a3ca-8166ce8a7bdb',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  level: 'error',
  message: "Error canceling appointment 1a62919b-0e28-4249-9f01-a31075bf6d7a by provider 85a64920-fcbd-4818-a3ca-8166ce8a7bdb: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at providerCancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:68:14)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:20:01 +0000] "PATCH /appointment/provider/85a64920-fcbd-4818-a3ca-8166ce8a7bdb/1a62919b-0e28-4249-9f01-a31075bf6d7a/cancel HTTP/1.1" 500 103 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["166ed0f7-45a2-4ff7-b75a-666e87bf6c1e"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["166ed0f7-45a2-4ff7-b75a-666e87bf6c1e"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["85a64920-fcbd-4818-a3ca-8166ce8a7bdb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:20:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:21:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 57ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$r4PO7dUfr36Xl6il5J/iwOQvEOOvJN0W/OGdjg1zevFU1yk2jVJW6",null], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: 'User registered successfully: fe55778a-5571-465f-9f0a-f3beff16fbfc',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:53 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:53'
}
{
  message: 'User logged in successfully: client@example.com (ID: fe55778a-5571-465f-9f0a-f3beff16fbfc)',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:54 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922114096@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["be1ae29b-8c4e-420c-85b2-4b89a83f52ec"], duration: 9ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["d2c844fa-be4d-433a-9c06-05458b4d40dd"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["fe55778a-5571-465f-9f0a-f3beff16fbfc","be1ae29b-8c4e-420c-85b2-4b89a83f52ec","d2c844fa-be4d-433a-9c06-05458b4d40dd","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["d2c844fa-be4d-433a-9c06-05458b4d40dd"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Appointment successfully booked for client fe55778a-5571-465f-9f0a-f3beff16fbfc on slot d2c844fa-be4d-433a-9c06-05458b4d40dd',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:54 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["fe55778a-5571-465f-9f0a-f3beff16fbfc"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:54 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["be1ae29b-8c4e-420c-85b2-4b89a83f52ec"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:54 +0000] "GET /appointment/provider/view-bookings/be1ae29b-8c4e-420c-85b2-4b89a83f52ec HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["fe55778a-5571-465f-9f0a-f3beff16fbfc"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:54 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["81cc0b2c-5c88-483a-b205-c047799650d6"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["81cc0b2c-5c88-483a-b205-c047799650d6"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Appointment 81cc0b2c-5c88-483a-b205-c047799650d6 canceled by user fe55778a-5571-465f-9f0a-f3beff16fbfc',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:21:54 +0000] "PATCH /appointment/81cc0b2c-5c88-483a-b205-c047799650d6/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["d2c844fa-be4d-433a-9c06-05458b4d40dd"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["d2c844fa-be4d-433a-9c06-05458b4d40dd"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["be1ae29b-8c4e-420c-85b2-4b89a83f52ec"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:21:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:23:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:23:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:23:26'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 55ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:23:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$txvuibSg2kxlp7eElvBKAeGfQKmbJ46SG0tnX5dPXUbWKYg0Kjaoq",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'User registered successfully: 47f8f915-0b04-4119-a25f-bccedf1f87d0',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'User logged in successfully: client@example.com (ID: 47f8f915-0b04-4119-a25f-bccedf1f87d0)',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922207327@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["d7cded59-b53c-491f-8081-aa7f6f941e39"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["7e341e06-6c49-4f8c-815a-e450a33298c7"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["47f8f915-0b04-4119-a25f-bccedf1f87d0","d7cded59-b53c-491f-8081-aa7f6f941e39","7e341e06-6c49-4f8c-815a-e450a33298c7","2025-04-30T23:00:00.000Z","booked"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["7e341e06-6c49-4f8c-815a-e450a33298c7"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Appointment successfully booked for client 47f8f915-0b04-4119-a25f-bccedf1f87d0 on slot 7e341e06-6c49-4f8c-815a-e450a33298c7',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["47f8f915-0b04-4119-a25f-bccedf1f87d0"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["d7cded59-b53c-491f-8081-aa7f6f941e39"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "GET /appointment/provider/view-bookings/d7cded59-b53c-491f-8081-aa7f6f941e39 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["47f8f915-0b04-4119-a25f-bccedf1f87d0"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["7787edc0-e632-4ddb-ba88-0092499adefb"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["7787edc0-e632-4ddb-ba88-0092499adefb"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Appointment 7787edc0-e632-4ddb-ba88-0092499adefb canceled by user 47f8f915-0b04-4119-a25f-bccedf1f87d0',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "PATCH /appointment/7787edc0-e632-4ddb-ba88-0092499adefb/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["47f8f915-0b04-4119-a25f-bccedf1f87d0"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 276 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["7787edc0-e632-4ddb-ba88-0092499adefb"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Cancel failed: Appointment 7787edc0-e632-4ddb-ba88-0092499adefb already canceled',
  level: 'warn',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:23:27 +0000] "PATCH /appointment/provider/d7cded59-b53c-491f-8081-aa7f6f941e39/7787edc0-e632-4ddb-ba88-0092499adefb/cancel HTTP/1.1" 409 45 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["7e341e06-6c49-4f8c-815a-e450a33298c7"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["7e341e06-6c49-4f8c-815a-e450a33298c7"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["d7cded59-b53c-491f-8081-aa7f6f941e39"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:23:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:24:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:24:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:24:29'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 66ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:24:29'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$WV6nfxPZBEjfZgyNjt17GeJBTBuKforSo16RP0DmT6TUIIT4WQHAO",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'User registered successfully: b242c8e5-4288-41fe-bc5e-06c27251c373',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'User logged in successfully: client@example.com (ID: b242c8e5-4288-41fe-bc5e-06c27251c373)',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922270248@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["14546375-2433-4bff-882c-fdb4fc4c542b"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["016c88b0-4e5f-4a0a-aff3-4f3419e01483"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["b242c8e5-4288-41fe-bc5e-06c27251c373","14546375-2433-4bff-882c-fdb4fc4c542b","016c88b0-4e5f-4a0a-aff3-4f3419e01483","2025-04-30T23:00:00.000Z","booked"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["016c88b0-4e5f-4a0a-aff3-4f3419e01483"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Appointment successfully booked for client b242c8e5-4288-41fe-bc5e-06c27251c373 on slot 016c88b0-4e5f-4a0a-aff3-4f3419e01483',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["b242c8e5-4288-41fe-bc5e-06c27251c373"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["14546375-2433-4bff-882c-fdb4fc4c542b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "GET /appointment/provider/view-bookings/14546375-2433-4bff-882c-fdb4fc4c542b HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["b242c8e5-4288-41fe-bc5e-06c27251c373"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["f255c65e-8bee-41a3-884c-cad7309b2447"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["f255c65e-8bee-41a3-884c-cad7309b2447"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 0ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Appointment f255c65e-8bee-41a3-884c-cad7309b2447 canceled by user b242c8e5-4288-41fe-bc5e-06c27251c373',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "PATCH /appointment/f255c65e-8bee-41a3-884c-cad7309b2447/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["14546375-2433-4bff-882c-fdb4fc4c542b"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["9dde152a-a959-4f77-9a53-079571ae390b"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["b242c8e5-4288-41fe-bc5e-06c27251c373","14546375-2433-4bff-882c-fdb4fc4c542b","9dde152a-a959-4f77-9a53-079571ae390b","2025-05-02T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["9dde152a-a959-4f77-9a53-079571ae390b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Appointment successfully booked for client b242c8e5-4288-41fe-bc5e-06c27251c373 on slot 9dde152a-a959-4f77-9a53-079571ae390b',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["fd857419-cc44-4d54-9570-a6e5c2764cc4"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["fd857419-cc44-4d54-9570-a6e5c2764cc4"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["9dde152a-a959-4f77-9a53-079571ae390b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Appointment fd857419-cc44-4d54-9570-a6e5c2764cc4 canceled successfully by provider 14546375-2433-4bff-882c-fdb4fc4c542b',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  level: 'error',
  message: "Error canceling appointment fd857419-cc44-4d54-9570-a6e5c2764cc4 by provider 14546375-2433-4bff-882c-fdb4fc4c542b: Cannot read properties of undefined (reading 'to')",
  stack: "TypeError: Cannot read properties of undefined (reading 'to')\n" +
    '    at providerCancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:68:14)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:24:30 +0000] "PATCH /appointment/provider/14546375-2433-4bff-882c-fdb4fc4c542b/fd857419-cc44-4d54-9570-a6e5c2764cc4/cancel HTTP/1.1" 500 103 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["016c88b0-4e5f-4a0a-aff3-4f3419e01483"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["016c88b0-4e5f-4a0a-aff3-4f3419e01483"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["14546375-2433-4bff-882c-fdb4fc4c542b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:24:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:25:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 43ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$RcVMn0H2VwOiRVxW0kXmW.xrf4DJy3H9tVr65VpMNIKtSO/7Io9HC",null], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'User registered successfully: e29383f7-4df1-4c84-bdc4-684e6cf47bc5',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'User logged in successfully: client@example.com (ID: e29383f7-4df1-4c84-bdc4-684e6cf47bc5)',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922334462@gmail.com0"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["b82110aa-009d-48a0-8e58-d83cf40ea010"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["f08d1a42-17c0-4af4-a1fd-e4a30f5c8391"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["e29383f7-4df1-4c84-bdc4-684e6cf47bc5","b82110aa-009d-48a0-8e58-d83cf40ea010","f08d1a42-17c0-4af4-a1fd-e4a30f5c8391","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["f08d1a42-17c0-4af4-a1fd-e4a30f5c8391"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Appointment successfully booked for client e29383f7-4df1-4c84-bdc4-684e6cf47bc5 on slot f08d1a42-17c0-4af4-a1fd-e4a30f5c8391',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e29383f7-4df1-4c84-bdc4-684e6cf47bc5"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["b82110aa-009d-48a0-8e58-d83cf40ea010"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "GET /appointment/provider/view-bookings/b82110aa-009d-48a0-8e58-d83cf40ea010 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e29383f7-4df1-4c84-bdc4-684e6cf47bc5"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["9f51d52f-fb57-4ddb-b77c-3e7391a0f7bf"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["9f51d52f-fb57-4ddb-b77c-3e7391a0f7bf"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Appointment 9f51d52f-fb57-4ddb-b77c-3e7391a0f7bf canceled by user e29383f7-4df1-4c84-bdc4-684e6cf47bc5',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "PATCH /appointment/9f51d52f-fb57-4ddb-b77c-3e7391a0f7bf/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["b82110aa-009d-48a0-8e58-d83cf40ea010"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["de8eaa43-e22a-4a64-a3ee-7fa70b98b495"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["e29383f7-4df1-4c84-bdc4-684e6cf47bc5","b82110aa-009d-48a0-8e58-d83cf40ea010","de8eaa43-e22a-4a64-a3ee-7fa70b98b495","2025-05-02T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["de8eaa43-e22a-4a64-a3ee-7fa70b98b495"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Appointment successfully booked for client e29383f7-4df1-4c84-bdc4-684e6cf47bc5 on slot de8eaa43-e22a-4a64-a3ee-7fa70b98b495',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["2dd7e564-9282-4978-a999-7bda26a0a6ca"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["2dd7e564-9282-4978-a999-7bda26a0a6ca"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["de8eaa43-e22a-4a64-a3ee-7fa70b98b495"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Appointment 2dd7e564-9282-4978-a999-7bda26a0a6ca canceled successfully by provider b82110aa-009d-48a0-8e58-d83cf40ea010',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:25:34 +0000] "PATCH /appointment/provider/b82110aa-009d-48a0-8e58-d83cf40ea010/2dd7e564-9282-4978-a999-7bda26a0a6ca/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["f08d1a42-17c0-4af4-a1fd-e4a30f5c8391"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["f08d1a42-17c0-4af4-a1fd-e4a30f5c8391"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["b82110aa-009d-48a0-8e58-d83cf40ea010"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:25:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:28:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:28:42'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 47ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:28:42'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$0JRii04jexeMA0xWRDRHmeiIzjSxUPsEwjeB/KU.adTIUA6a06gja",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'User registered successfully: 178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'User logged in successfully: client@example.com (ID: 178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c)',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922523334@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["6f91ab64-b91e-4f9d-959c-ede34829481f"], duration: 6ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["42d78cbc-3b4a-4228-8617-3a289bfb24d3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c","6f91ab64-b91e-4f9d-959c-ede34829481f","42d78cbc-3b4a-4228-8617-3a289bfb24d3","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["42d78cbc-3b4a-4228-8617-3a289bfb24d3"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Appointment successfully booked for client 178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c on slot 42d78cbc-3b4a-4228-8617-3a289bfb24d3',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["6f91ab64-b91e-4f9d-959c-ede34829481f"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "GET /appointment/provider/view-bookings/6f91ab64-b91e-4f9d-959c-ede34829481f HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["e9845135-fd68-48a9-a383-03ad12b0f935"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["e9845135-fd68-48a9-a383-03ad12b0f935"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Appointment e9845135-fd68-48a9-a383-03ad12b0f935 canceled by user 178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "PATCH /appointment/e9845135-fd68-48a9-a383-03ad12b0f935/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["6f91ab64-b91e-4f9d-959c-ede34829481f"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["ab7ec79c-be92-4a52-8640-6f9f03a55db3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c","6f91ab64-b91e-4f9d-959c-ede34829481f","ab7ec79c-be92-4a52-8640-6f9f03a55db3","2025-05-02T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["ab7ec79c-be92-4a52-8640-6f9f03a55db3"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Appointment successfully booked for client 178fa6c5-ac8e-4d1e-9f97-9020a7b8ba3c on slot ab7ec79c-be92-4a52-8640-6f9f03a55db3',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["61e953e5-f609-44ac-aa63-1cd65b061745"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["61e953e5-f609-44ac-aa63-1cd65b061745"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["ab7ec79c-be92-4a52-8640-6f9f03a55db3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Appointment 61e953e5-f609-44ac-aa63-1cd65b061745 canceled successfully by provider 6f91ab64-b91e-4f9d-959c-ede34829481f',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:28:43 +0000] "PATCH /appointment/provider/6f91ab64-b91e-4f9d-959c-ede34829481f/61e953e5-f609-44ac-aa63-1cd65b061745/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["42d78cbc-3b4a-4228-8617-3a289bfb24d3"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["42d78cbc-3b4a-4228-8617-3a289bfb24d3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6f91ab64-b91e-4f9d-959c-ede34829481f"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:28:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 25ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:29:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 38ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$NJza5aA.OARyPMcDwH.cQenjpmkS0mKDJvWaXw2vIJqjv6TQBwDu2",null], duration: 33ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'User registered successfully: 400dbaf9-556b-4480-95cc-5ff01c3d8eda',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'User logged in successfully: client@example.com (ID: 400dbaf9-556b-4480-95cc-5ff01c3d8eda)',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922584535@gmail.com0"], duration: 33ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["8529846a-9ecc-4e93-bfba-fed6f293edbd"], duration: 5ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["6bf503ab-86f4-440c-a568-2f9259a9dda6"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["400dbaf9-556b-4480-95cc-5ff01c3d8eda","8529846a-9ecc-4e93-bfba-fed6f293edbd","6bf503ab-86f4-440c-a568-2f9259a9dda6","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["6bf503ab-86f4-440c-a568-2f9259a9dda6"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Appointment successfully booked for client 400dbaf9-556b-4480-95cc-5ff01c3d8eda on slot 6bf503ab-86f4-440c-a568-2f9259a9dda6',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["400dbaf9-556b-4480-95cc-5ff01c3d8eda"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["8529846a-9ecc-4e93-bfba-fed6f293edbd"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "GET /appointment/provider/view-bookings/8529846a-9ecc-4e93-bfba-fed6f293edbd HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["400dbaf9-556b-4480-95cc-5ff01c3d8eda"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["6335ae7a-c731-46a2-a868-5130e9909385"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["6335ae7a-c731-46a2-a868-5130e9909385"], duration: 33ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Appointment 6335ae7a-c731-46a2-a868-5130e9909385 canceled by user 400dbaf9-556b-4480-95cc-5ff01c3d8eda',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "PATCH /appointment/6335ae7a-c731-46a2-a868-5130e9909385/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["8529846a-9ecc-4e93-bfba-fed6f293edbd"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0dcb23a9-61a2-4338-8a1d-9724be7c4344"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["400dbaf9-556b-4480-95cc-5ff01c3d8eda","8529846a-9ecc-4e93-bfba-fed6f293edbd","0dcb23a9-61a2-4338-8a1d-9724be7c4344","2025-05-02T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["0dcb23a9-61a2-4338-8a1d-9724be7c4344"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Appointment successfully booked for client 400dbaf9-556b-4480-95cc-5ff01c3d8eda on slot 0dcb23a9-61a2-4338-8a1d-9724be7c4344',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["2b97ecbb-c84d-45b3-b95a-9ed1d73e6c45"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["2b97ecbb-c84d-45b3-b95a-9ed1d73e6c45"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["0dcb23a9-61a2-4338-8a1d-9724be7c4344"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Appointment 2b97ecbb-c84d-45b3-b95a-9ed1d73e6c45 canceled successfully by provider 8529846a-9ecc-4e93-bfba-fed6f293edbd',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:29:44 +0000] "PATCH /appointment/provider/8529846a-9ecc-4e93-bfba-fed6f293edbd/2b97ecbb-c84d-45b3-b95a-9ed1d73e6c45/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["6bf503ab-86f4-440c-a568-2f9259a9dda6"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["6bf503ab-86f4-440c-a568-2f9259a9dda6"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["8529846a-9ecc-4e93-bfba-fed6f293edbd"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:29:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:30:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 37ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$YKJ/Mu.q7oZEEp2Rh55bwuRTizpc9SPv6DnEGlSscdPBO.tfUFxaa",null], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'User registered successfully: 00f2a0b7-566c-481f-a6e1-77262ea50c38',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'User logged in successfully: client@example.com (ID: 00f2a0b7-566c-481f-a6e1-77262ea50c38)',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745922626485@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["6695b264-73ec-49de-8e6a-bc7d79be8ebb"], duration: 8ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["1828d288-3b8e-4497-a308-7773785e083e"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["00f2a0b7-566c-481f-a6e1-77262ea50c38","6695b264-73ec-49de-8e6a-bc7d79be8ebb","1828d288-3b8e-4497-a308-7773785e083e","2025-04-30T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["1828d288-3b8e-4497-a308-7773785e083e"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Appointment successfully booked for client 00f2a0b7-566c-481f-a6e1-77262ea50c38 on slot 1828d288-3b8e-4497-a308-7773785e083e',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["00f2a0b7-566c-481f-a6e1-77262ea50c38"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["6695b264-73ec-49de-8e6a-bc7d79be8ebb"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "GET /appointment/provider/view-bookings/6695b264-73ec-49de-8e6a-bc7d79be8ebb HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["00f2a0b7-566c-481f-a6e1-77262ea50c38"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["9adf550f-a404-4bad-a1ea-5fac733aa5d5"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["9adf550f-a404-4bad-a1ea-5fac733aa5d5"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Appointment 9adf550f-a404-4bad-a1ea-5fac733aa5d5 canceled by user 00f2a0b7-566c-481f-a6e1-77262ea50c38',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "PATCH /appointment/9adf550f-a404-4bad-a1ea-5fac733aa5d5/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["6695b264-73ec-49de-8e6a-bc7d79be8ebb"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["5526e25a-0fdc-44ec-b18d-8cdde8ee8e98"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["00f2a0b7-566c-481f-a6e1-77262ea50c38","6695b264-73ec-49de-8e6a-bc7d79be8ebb","5526e25a-0fdc-44ec-b18d-8cdde8ee8e98","2025-05-02T23:00:00.000Z","booked"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["5526e25a-0fdc-44ec-b18d-8cdde8ee8e98"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Appointment successfully booked for client 00f2a0b7-566c-481f-a6e1-77262ea50c38 on slot 5526e25a-0fdc-44ec-b18d-8cdde8ee8e98',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["5c614e74-290c-47e5-917e-c7a9847bb360"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["5c614e74-290c-47e5-917e-c7a9847bb360"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["5526e25a-0fdc-44ec-b18d-8cdde8ee8e98"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Appointment 5c614e74-290c-47e5-917e-c7a9847bb360 canceled successfully by provider 6695b264-73ec-49de-8e6a-bc7d79be8ebb',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:30:26 +0000] "PATCH /appointment/provider/6695b264-73ec-49de-8e6a-bc7d79be8ebb/5c614e74-290c-47e5-917e-c7a9847bb360/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["1828d288-3b8e-4497-a308-7773785e083e"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["1828d288-3b8e-4497-a308-7773785e083e"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6695b264-73ec-49de-8e6a-bc7d79be8ebb"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:30:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:36:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:36:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:36:52'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 45ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:36:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$aLPP4DAsXrkp3TxTChm6feSshqAJbnByXv.l0LjlIa3eWHExY9vPi",null], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'User registered successfully: 533d25d0-a7c2-49ce-b6e3-e67d8a5db57a',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'User logged in successfully: client@example.com (ID: 533d25d0-a7c2-49ce-b6e3-e67d8a5db57a)',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745923013277@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["06346f91-59d4-40eb-81a3-bfac7672b04b"], duration: 6ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["789b1372-e6d1-4cc4-88a9-0fce56f20fa6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["533d25d0-a7c2-49ce-b6e3-e67d8a5db57a","06346f91-59d4-40eb-81a3-bfac7672b04b","789b1372-e6d1-4cc4-88a9-0fce56f20fa6","2025-04-30T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["789b1372-e6d1-4cc4-88a9-0fce56f20fa6"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Appointment successfully booked for client 533d25d0-a7c2-49ce-b6e3-e67d8a5db57a on slot 789b1372-e6d1-4cc4-88a9-0fce56f20fa6',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["533d25d0-a7c2-49ce-b6e3-e67d8a5db57a"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["06346f91-59d4-40eb-81a3-bfac7672b04b"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "GET /appointment/provider/view-bookings/06346f91-59d4-40eb-81a3-bfac7672b04b HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["533d25d0-a7c2-49ce-b6e3-e67d8a5db57a"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["75d6b837-a15e-47ce-93d6-1b8f93dc8733"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["75d6b837-a15e-47ce-93d6-1b8f93dc8733"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Appointment 75d6b837-a15e-47ce-93d6-1b8f93dc8733 canceled by user 533d25d0-a7c2-49ce-b6e3-e67d8a5db57a',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "PATCH /appointment/75d6b837-a15e-47ce-93d6-1b8f93dc8733/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["06346f91-59d4-40eb-81a3-bfac7672b04b"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["9d198732-7b24-424e-9db4-90bcd02194b3"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["533d25d0-a7c2-49ce-b6e3-e67d8a5db57a","06346f91-59d4-40eb-81a3-bfac7672b04b","9d198732-7b24-424e-9db4-90bcd02194b3","2025-05-02T23:00:00.000Z","booked"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["9d198732-7b24-424e-9db4-90bcd02194b3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Appointment successfully booked for client 533d25d0-a7c2-49ce-b6e3-e67d8a5db57a on slot 9d198732-7b24-424e-9db4-90bcd02194b3',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["bc615fe7-1695-49f9-a4b5-5b643babf606"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["bc615fe7-1695-49f9-a4b5-5b643babf606"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["9d198732-7b24-424e-9db4-90bcd02194b3"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Appointment bc615fe7-1695-49f9-a4b5-5b643babf606 canceled successfully by provider 06346f91-59d4-40eb-81a3-bfac7672b04b',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:36:53 +0000] "PATCH /appointment/provider/06346f91-59d4-40eb-81a3-bfac7672b04b/bc615fe7-1695-49f9-a4b5-5b643babf606/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["789b1372-e6d1-4cc4-88a9-0fce56f20fa6"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["789b1372-e6d1-4cc4-88a9-0fce56f20fa6"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["06346f91-59d4-40eb-81a3-bfac7672b04b"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:36:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:38:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 100ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 67ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 57ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745923085593@example.com"], duration: 55ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["d9a980cc-901c-4d79-be47-f9a1971854fc","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 0f2b3e89-88d5-4558-a433-7934e1d6c39d)',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["d9a980cc-901c-4d79-be47-f9a1971854fc","2025-05-01","09:00:00","09:30:00"], duration: 15ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Time slot created Successfully by the user d9a980cc-901c-4d79-be47-f9a1971854fc : 67ba3aa2-d156-49eb-a102-440378a5974d',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "POST /timeslots/providers/d9a980cc-901c-4d79-be47-f9a1971854fc/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '67ba3aa2-d156-49eb-a102-440378a5974d',
    provider_id: 'd9a980cc-901c-4d79-be47-f9a1971854fc',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 11:38:05',
    updated_at: '2025-04-29 11:38:05'
  },
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["d9a980cc-901c-4d79-be47-f9a1971854fc"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "GET /timeslots/providers/d9a980cc-901c-4d79-be47-f9a1971854fc/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 11:38:05',
        updated_at: '2025-04-29 11:38:05'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-05-02","12:00:00","12:30:00","67ba3aa2-d156-49eb-a102-440378a5974d","d9a980cc-901c-4d79-be47-f9a1971854fc"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Slot 67ba3aa2-d156-49eb-a102-440378a5974d updated Successfully by provider d9a980cc-901c-4d79-be47-f9a1971854fc',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "PUT /timeslots/providers/d9a980cc-901c-4d79-be47-f9a1971854fc/update-timeslot/67ba3aa2-d156-49eb-a102-440378a5974d HTTP/1.1" 200 310 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Time slot updated successfully',
  updatedSlot: {
    id: '67ba3aa2-d156-49eb-a102-440378a5974d',
    provider_id: 'd9a980cc-901c-4d79-be47-f9a1971854fc',
    day: '2025-05-02',
    start_time: '12:00:00',
    end_time: '12:30:00',
    is_booked: false,
    created_at: '2025-04-29 11:38:05',
    updated_at: '2025-04-29 11:38:05'
  },
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["d9a980cc-901c-4d79-be47-f9a1971854fc","2025-04-24","2025-08-30"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "GET /timeslots/search/providers/d9a980cc-901c-4d79-be47-f9a1971854fc/available-slots?from=2025-04-24&to=2025-08-30 HTTP/1.1" 200 101 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: {
    day: '2025-05-01T23:00:00.000Z',
    start_time: '12:00:00',
    end_time: '12:30:00'
  },
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["67ba3aa2-d156-49eb-a102-440378a5974d","d9a980cc-901c-4d79-be47-f9a1971854fc"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Time slot with id: 67ba3aa2-d156-49eb-a102-440378a5974d has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "DELETE /timeslots/providers/d9a980cc-901c-4d79-be47-f9a1971854fc/delete-timeslot/67ba3aa2-d156-49eb-a102-440378a5974d HTTP/1.1" 200 317 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["67ba3aa2-d156-49eb-a102-440378a5974d"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["d9a980cc-901c-4d79-be47-f9a1971854fc"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","Client","client@example.com","$2b$10$BQ6jUFPhfHVap8OYH3ktOu/otkik.GkaI7PgInE9USxbteO.9Maam",null], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'User registered successfully: 3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "POST /auth/register HTTP/1.1" 201 116 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745923085593@example.com","$2b$10$y6mS2rU6EDmVCnpPOkQHDePbrBoiUx5DrsgrV8HDqsw.M3sdjRI9C",""], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'User registered successfully: bcaf10ae-eeb2-450c-be64-0a42874fe8df',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:05 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:05'
}
{
  message: 'User logged in successfully: client@example.com (ID: 3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9)',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "POST /auth/login HTTP/1.1" 200 401 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: ["provider1745923086149@gmail.com0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-01..., params: ["7426b3e0-3442-4a30-b64d-0b1a69d67da0"], duration: 9ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a59f2e51-2ab3-44b1-a2ed-4e3549286d3c"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9","7426b3e0-3442-4a30-b64d-0b1a69d67da0","a59f2e51-2ab3-44b1-a2ed-4e3549286d3c","2025-04-30T23:00:00.000Z","booked"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["a59f2e51-2ab3-44b1-a2ed-4e3549286d3c"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Appointment successfully booked for client 3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9 on slot a59f2e51-2ab3-44b1-a2ed-4e3549286d3c',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["7426b3e0-3442-4a30-b64d-0b1a69d67da0"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "GET /appointment/provider/view-bookings/7426b3e0-3442-4a30-b64d-0b1a69d67da0 HTTP/1.1" 200 268 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 274 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["de9be0eb-ad59-488d-a7fb-2c2558817c25"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["de9be0eb-ad59-488d-a7fb-2c2558817c25"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Appointment de9be0eb-ad59-488d-a7fb-2c2558817c25 canceled by user 3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "PATCH /appointment/de9be0eb-ad59-488d-a7fb-2c2558817c25/cancel HTTP/1.1" 200 416 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    `      VALUES ($1, '2025-05-03..., params: ["7426b3e0-3442-4a30-b64d-0b1a69d67da0"], duration: 4ms, rows: 1}`,
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["04cd8946-9fea-4714-9f89-bb736c8194fa"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9","7426b3e0-3442-4a30-b64d-0b1a69d67da0","04cd8946-9fea-4714-9f89-bb736c8194fa","2025-05-02T23:00:00.000Z","booked"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["04cd8946-9fea-4714-9f89-bb736c8194fa"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Appointment successfully booked for client 3cfc044d-2c5e-4ae5-90cb-d19e1e5a4ba9 on slot 04cd8946-9fea-4714-9f89-bb736c8194fa',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["0f925b2f-786b-45c1-9921-2c72b3e027a1"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["0f925b2f-786b-45c1-9921-2c72b3e027a1"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["04cd8946-9fea-4714-9f89-bb736c8194fa"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Appointment 0f925b2f-786b-45c1-9921-2c72b3e027a1 canceled successfully by provider 7426b3e0-3442-4a30-b64d-0b1a69d67da0',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:38:06 +0000] "PATCH /appointment/provider/7426b3e0-3442-4a30-b64d-0b1a69d67da0/0f925b2f-786b-45c1-9921-2c72b3e027a1/cancel HTTP/1.1" 200 409 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: DELETE FROM appointments WHERE timeslot_id = $1..., params: ["a59f2e51-2ab3-44b1-a2ed-4e3549286d3c"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["a59f2e51-2ab3-44b1-a2ed-4e3549286d3c"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7426b3e0-3442-4a30-b64d-0b1a69d67da0"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["client@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:38:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:39:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:40:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 11:43:04'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-28T02:05:11.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-29 11:44:51'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:44:51 +0000] "POST /appointment/booking HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 11:44:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:45:04'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 25ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:45:04'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-29 11:45:04'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:45:04 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 11:45:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["d1168cd1-497e-47d0-8028-88d558df0541"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","e1022995-d7f7-4ebc-98fd-cad361260475","d1168cd1-497e-47d0-8028-88d558df0541","2025-04-26T23:00:00.000Z","booked"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["d1168cd1-497e-47d0-8028-88d558df0541"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot d1168cd1-497e-47d0-8028-88d558df0541',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  _nsps: <ref *1> Map(1) {
    '/' => <ref *2> Namespace {
      _events: [Object: null prototype] { connection: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: Map(0) {},
      _preConnectSockets: Map(0) {},
      _fns: [],
      _ids: 0,
      server: Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Circular *1],
        parentNsps: Map(0) {},
        parentNamespacesFromRegExp: Map(0) {},
        _path: '/socket.io',
        clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: {
          protocol: 5,
          PacketType: {
            '0': 'CONNECT',
            '1': 'DISCONNECT',
            '2': 'EVENT',
            '3': 'ACK',
            '4': 'CONNECT_ERROR',
            '5': 'BINARY_EVENT',
            '6': 'BINARY_ACK',
            CONNECT: 0,
            DISCONNECT: 1,
            EVENT: 2,
            ACK: 3,
            CONNECT_ERROR: 4,
            BINARY_EVENT: 5,
            BINARY_ACK: 6
          },
          Encoder: [class Encoder],
          Decoder: [class Decoder extends Emitter]
        },
        encoder: Encoder { replacer: undefined },
        opts: {
          cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
          cleanupEmptyChildNamespaces: false
        },
        _adapter: [class Adapter extends EventEmitter],
        sockets: [Circular *2],
        eio: Server {
          _events: [Object: null prototype] {
            connection: [Function: bound onconnection]
          },
          _eventsCount: 1,
          _maxListeners: undefined,
          middlewares: [ [Function: corsMiddleware] ],
          clients: {},
          clientsCount: 0,
          opts: {
            wsEngine: [class WebSocketServer extends EventEmitter],
            pingTimeout: 20000,
            pingInterval: 25000,
            upgradeTimeout: 10000,
            maxHttpBufferSize: 1000000,
            transports: [ 'polling', 'websocket' ],
            allowUpgrades: true,
            httpCompression: { threshold: 1024 },
            cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
            allowEIO3: false,
            cleanupEmptyChildNamespaces: false,
            path: '/socket.io'
          },
          ws: WebSocketServer {
            _events: [Object: null prototype] {
              headers: [Function (anonymous)]
            },
            _eventsCount: 1,
            _maxListeners: undefined,
            options: {
              allowSynchronousEvents: true,
              autoPong: true,
              maxPayload: 1000000,
              skipUTF8Validation: false,
              perMessageDeflate: undefined,
              handleProtocols: null,
              clientTracking: false,
              verifyClient: null,
              noServer: true,
              backlog: null,
              server: null,
              host: null,
              path: null,
              port: null,
              WebSocket: <ref *3> [class WebSocket extends EventEmitter] {
                CONNECTING: 0,
                OPEN: 1,
                CLOSING: 2,
                CLOSED: 3,
                createWebSocketStream: [Function: createWebSocketStream],
                Server: [class WebSocketServer extends EventEmitter],
                Receiver: [class Receiver extends Writable],
                Sender: [class Sender],
                WebSocket: [Circular *3],
                WebSocketServer: [class WebSocketServer extends EventEmitter]
              }
            },
            _state: 0,
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        httpServer: <ref *4> Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          requireHostHeader: true,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype] {
            connection: [Function: connectionListener],
            listening: [
              [Function: setupConnectionsTracking],
              [Function: bound init],
              [Function: onListening]
            ],
            close: [Function: bound close],
            upgrade: [Function (anonymous)],
            request: [Function (anonymous)],
            error: [Function: onError]
          },
          _eventsCount: 6,
          _maxListeners: undefined,
          _connections: 1,
          _handle: TCP {
            reading: false,
            onconnection: [Function: onconnection],
            [Symbol(owner_symbol)]: [Circular *4]
          },
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          _listeningId: 2,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 65536,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::3000',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 662,
          [Symbol(kUniqueHeaders)]: null,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 120944,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 664,
            [Symbol(triggerId)]: 663,
            [Symbol(kAsyncContextFrame)]: undefined
          }
        },
        engine: Server {
          _events: [Object: null prototype] {
            connection: [Function: bound onconnection]
          },
          _eventsCount: 1,
          _maxListeners: undefined,
          middlewares: [ [Function: corsMiddleware] ],
          clients: {},
          clientsCount: 0,
          opts: {
            wsEngine: [class WebSocketServer extends EventEmitter],
            pingTimeout: 20000,
            pingInterval: 25000,
            upgradeTimeout: 10000,
            maxHttpBufferSize: 1000000,
            transports: [ 'polling', 'websocket' ],
            allowUpgrades: true,
            httpCompression: { threshold: 1024 },
            cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
            allowEIO3: false,
            cleanupEmptyChildNamespaces: false,
            path: '/socket.io'
          },
          ws: WebSocketServer {
            _events: [Object: null prototype] {
              headers: [Function (anonymous)]
            },
            _eventsCount: 1,
            _maxListeners: undefined,
            options: {
              allowSynchronousEvents: true,
              autoPong: true,
              maxPayload: 1000000,
              skipUTF8Validation: false,
              perMessageDeflate: undefined,
              handleProtocols: null,
              clientTracking: false,
              verifyClient: null,
              noServer: true,
              backlog: null,
              server: null,
              host: null,
              path: null,
              port: null,
              WebSocket: <ref *3> [class WebSocket extends EventEmitter] {
                CONNECTING: 0,
                OPEN: 1,
                CLOSING: 2,
                CLOSED: 3,
                createWebSocketStream: [Function: createWebSocketStream],
                Server: [class WebSocketServer extends EventEmitter],
                Receiver: [class Receiver extends Writable],
                Sender: [class Sender],
                WebSocket: [Circular *3],
                WebSocketServer: [class WebSocketServer extends EventEmitter]
              }
            },
            _state: 0,
            [Symbol(shapeMode)]: false,
            [Symbol(kCapture)]: false
          },
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        _corsMiddleware: [Function: corsMiddleware],
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      },
      name: '/',
      adapter: Adapter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        nsp: [Circular *2],
        rooms: Map(0) {},
        sids: Map(0) {},
        encoder: Encoder { replacer: undefined },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    }
  },
  parentNsps: Map(0) {},
  parentNamespacesFromRegExp: Map(0) {},
  _path: '/socket.io',
  clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
  _connectTimeout: 45000,
  _serveClient: true,
  _parser: {
    protocol: 5,
    PacketType: {
      '0': 'CONNECT',
      '1': 'DISCONNECT',
      '2': 'EVENT',
      '3': 'ACK',
      '4': 'CONNECT_ERROR',
      '5': 'BINARY_EVENT',
      '6': 'BINARY_ACK',
      CONNECT: 0,
      DISCONNECT: 1,
      EVENT: 2,
      ACK: 3,
      CONNECT_ERROR: 4,
      BINARY_EVENT: 5,
      BINARY_ACK: 6
    },
    Encoder: [class Encoder],
    Decoder: [class Decoder extends Emitter]
  },
  encoder: Encoder { replacer: undefined },
  opts: {
    cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
    cleanupEmptyChildNamespaces: false
  },
  _adapter: [class Adapter extends EventEmitter],
  sockets: <ref *2> Namespace {
    _events: [Object: null prototype] { connection: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map(0) {},
    _preConnectSockets: Map(0) {},
    _fns: [],
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: <ref *1> Map(1) { '/' => [Circular *2] },
      parentNsps: Map(0) {},
      parentNamespacesFromRegExp: Map(0) {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: {
        protocol: 5,
        PacketType: {
          '0': 'CONNECT',
          '1': 'DISCONNECT',
          '2': 'EVENT',
          '3': 'ACK',
          '4': 'CONNECT_ERROR',
          '5': 'BINARY_EVENT',
          '6': 'BINARY_ACK',
          CONNECT: 0,
          DISCONNECT: 1,
          EVENT: 2,
          ACK: 3,
          CONNECT_ERROR: 4,
          BINARY_EVENT: 5,
          BINARY_ACK: 6
        },
        Encoder: [class Encoder],
        Decoder: [class Decoder extends Emitter]
      },
      encoder: Encoder { replacer: undefined },
      opts: {
        cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
        cleanupEmptyChildNamespaces: false
      },
      _adapter: [class Adapter extends EventEmitter],
      sockets: [Circular *2],
      eio: Server {
        _events: [Object: null prototype] {
          connection: [Function: bound onconnection]
        },
        _eventsCount: 1,
        _maxListeners: undefined,
        middlewares: [ [Function: corsMiddleware] ],
        clients: {},
        clientsCount: 0,
        opts: {
          wsEngine: [class WebSocketServer extends EventEmitter],
          pingTimeout: 20000,
          pingInterval: 25000,
          upgradeTimeout: 10000,
          maxHttpBufferSize: 1000000,
          transports: [ 'polling', 'websocket' ],
          allowUpgrades: true,
          httpCompression: { threshold: 1024 },
          cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
          allowEIO3: false,
          cleanupEmptyChildNamespaces: false,
          path: '/socket.io'
        },
        ws: WebSocketServer {
          _events: [Object: null prototype] { headers: [Function (anonymous)] },
          _eventsCount: 1,
          _maxListeners: undefined,
          options: {
            allowSynchronousEvents: true,
            autoPong: true,
            maxPayload: 1000000,
            skipUTF8Validation: false,
            perMessageDeflate: undefined,
            handleProtocols: null,
            clientTracking: false,
            verifyClient: null,
            noServer: true,
            backlog: null,
            server: null,
            host: null,
            path: null,
            port: null,
            WebSocket: <ref *3> [class WebSocket extends EventEmitter] {
              CONNECTING: 0,
              OPEN: 1,
              CLOSING: 2,
              CLOSED: 3,
              createWebSocketStream: [Function: createWebSocketStream],
              Server: [class WebSocketServer extends EventEmitter],
              Receiver: [class Receiver extends Writable],
              Sender: [class Sender],
              WebSocket: [Circular *3],
              WebSocketServer: [class WebSocketServer extends EventEmitter]
            }
          },
          _state: 0,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      },
      httpServer: <ref *4> Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype] {
          connection: [Function: connectionListener],
          listening: [
            [Function: setupConnectionsTracking],
            [Function: bound init],
            [Function: onListening]
          ],
          close: [Function: bound close],
          upgrade: [Function (anonymous)],
          request: [Function (anonymous)],
          error: [Function: onError]
        },
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: TCP {
          reading: false,
          onconnection: [Function: onconnection],
          [Symbol(owner_symbol)]: [Circular *4]
        },
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        _listeningId: 2,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 65536,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 662,
        [Symbol(kUniqueHeaders)]: null,
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 120944,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 664,
          [Symbol(triggerId)]: 663,
          [Symbol(kAsyncContextFrame)]: undefined
        }
      },
      engine: Server {
        _events: [Object: null prototype] {
          connection: [Function: bound onconnection]
        },
        _eventsCount: 1,
        _maxListeners: undefined,
        middlewares: [ [Function: corsMiddleware] ],
        clients: {},
        clientsCount: 0,
        opts: {
          wsEngine: [class WebSocketServer extends EventEmitter],
          pingTimeout: 20000,
          pingInterval: 25000,
          upgradeTimeout: 10000,
          maxHttpBufferSize: 1000000,
          transports: [ 'polling', 'websocket' ],
          allowUpgrades: true,
          httpCompression: { threshold: 1024 },
          cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
          allowEIO3: false,
          cleanupEmptyChildNamespaces: false,
          path: '/socket.io'
        },
        ws: WebSocketServer {
          _events: [Object: null prototype] { headers: [Function (anonymous)] },
          _eventsCount: 1,
          _maxListeners: undefined,
          options: {
            allowSynchronousEvents: true,
            autoPong: true,
            maxPayload: 1000000,
            skipUTF8Validation: false,
            perMessageDeflate: undefined,
            handleProtocols: null,
            clientTracking: false,
            verifyClient: null,
            noServer: true,
            backlog: null,
            server: null,
            host: null,
            path: null,
            port: null,
            WebSocket: <ref *3> [class WebSocket extends EventEmitter] {
              CONNECTING: 0,
              OPEN: 1,
              CLOSING: 2,
              CLOSED: 3,
              createWebSocketStream: [Function: createWebSocketStream],
              Server: [class WebSocketServer extends EventEmitter],
              Receiver: [class Receiver extends Writable],
              Sender: [class Sender],
              WebSocket: [Circular *3],
              WebSocketServer: [class WebSocketServer extends EventEmitter]
            }
          },
          _state: 0,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        },
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      },
      _corsMiddleware: [Function: corsMiddleware],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular *2],
      rooms: Map(0) {},
      sids: Map(0) {},
      encoder: Encoder { replacer: undefined },
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  eio: Server {
    _events: [Object: null prototype] {
      connection: [Function: bound onconnection]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    middlewares: [ [Function: corsMiddleware] ],
    clients: {},
    clientsCount: 0,
    opts: {
      wsEngine: [class WebSocketServer extends EventEmitter],
      pingTimeout: 20000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 1000000,
      transports: [ 'polling', 'websocket' ],
      allowUpgrades: true,
      httpCompression: { threshold: 1024 },
      cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
      allowEIO3: false,
      cleanupEmptyChildNamespaces: false,
      path: '/socket.io'
    },
    ws: WebSocketServer {
      _events: [Object: null prototype] { headers: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      options: {
        allowSynchronousEvents: true,
        autoPong: true,
        maxPayload: 1000000,
        skipUTF8Validation: false,
        perMessageDeflate: undefined,
        handleProtocols: null,
        clientTracking: false,
        verifyClient: null,
        noServer: true,
        backlog: null,
        server: null,
        host: null,
        path: null,
        port: null,
        WebSocket: <ref *3> [class WebSocket extends EventEmitter] {
          CONNECTING: 0,
          OPEN: 1,
          CLOSING: 2,
          CLOSED: 3,
          createWebSocketStream: [Function: createWebSocketStream],
          Server: [class WebSocketServer extends EventEmitter],
          Receiver: [class Receiver extends Writable],
          Sender: [class Sender],
          WebSocket: [Circular *3],
          WebSocketServer: [class WebSocketServer extends EventEmitter]
        }
      },
      _state: 0,
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  httpServer: <ref *4> Server {
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    requestTimeout: 300000,
    headersTimeout: 60000,
    keepAliveTimeout: 5000,
    connectionsCheckingInterval: 30000,
    requireHostHeader: true,
    joinDuplicateHeaders: undefined,
    rejectNonStandardBodyWrites: false,
    _events: [Object: null prototype] {
      connection: [Function: connectionListener],
      listening: [
        [Function: setupConnectionsTracking],
        [Function: bound init],
        [Function: onListening]
      ],
      close: [Function: bound close],
      upgrade: [Function (anonymous)],
      request: [Function (anonymous)],
      error: [Function: onError]
    },
    _eventsCount: 6,
    _maxListeners: undefined,
    _connections: 1,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner_symbol)]: [Circular *4]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    _listeningId: 2,
    allowHalfOpen: true,
    pauseOnConnect: false,
    noDelay: true,
    keepAlive: false,
    keepAliveInitialDelay: 0,
    highWaterMark: 65536,
    httpAllowHalfOpen: false,
    timeout: 0,
    maxHeadersCount: null,
    maxRequestsPerSocket: 0,
    _connectionKey: '6::::3000',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 662,
    [Symbol(kUniqueHeaders)]: null,
    [Symbol(http.server.connections)]: ConnectionsList {},
    [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
      _idleTimeout: 30000,
      _idlePrev: [TimersList],
      _idleNext: [TimersList],
      _idleStart: 120944,
      _onTimeout: [Function: bound checkConnections],
      _timerArgs: undefined,
      _repeat: 30000,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(kHasPrimitive)]: false,
      [Symbol(asyncId)]: 664,
      [Symbol(triggerId)]: 663,
      [Symbol(kAsyncContextFrame)]: undefined
    }
  },
  engine: Server {
    _events: [Object: null prototype] {
      connection: [Function: bound onconnection]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    middlewares: [ [Function: corsMiddleware] ],
    clients: {},
    clientsCount: 0,
    opts: {
      wsEngine: [class WebSocketServer extends EventEmitter],
      pingTimeout: 20000,
      pingInterval: 25000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 1000000,
      transports: [ 'polling', 'websocket' ],
      allowUpgrades: true,
      httpCompression: { threshold: 1024 },
      cors: { origin: '*', methods: [ 'GET', 'POST', 'PATCH' ] },
      allowEIO3: false,
      cleanupEmptyChildNamespaces: false,
      path: '/socket.io'
    },
    ws: WebSocketServer {
      _events: [Object: null prototype] { headers: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      options: {
        allowSynchronousEvents: true,
        autoPong: true,
        maxPayload: 1000000,
        skipUTF8Validation: false,
        perMessageDeflate: undefined,
        handleProtocols: null,
        clientTracking: false,
        verifyClient: null,
        noServer: true,
        backlog: null,
        server: null,
        host: null,
        path: null,
        port: null,
        WebSocket: <ref *3> [class WebSocket extends EventEmitter] {
          CONNECTING: 0,
          OPEN: 1,
          CLOSING: 2,
          CLOSED: 3,
          createWebSocketStream: [Function: createWebSocketStream],
          Server: [class WebSocketServer extends EventEmitter],
          Receiver: [class Receiver extends Writable],
          Sender: [class Sender],
          WebSocket: [Circular *3],
          WebSocketServer: [class WebSocketServer extends EventEmitter]
        }
      },
      _state: 0,
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  _corsMiddleware: [Function: corsMiddleware],
  level: 'info',
  message: 'Socket.IO instance in real app:',
  timestamp: '2025-04-29 11:45:25',
  [Symbol(shapeMode)]: false,
  [Symbol(kCapture)]: false
}
{
  message: '🔔 Notification sent to provider e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:10:45:25 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-29 11:45:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Attempting to start server on port 3001',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Starting server on port 3001',
  level: 'info',
  timestamp: '2025-04-29 12:18:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Attempting to start server on port 3001',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:20:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:21:04'
}
{
  message: 'Attempting to start server on port 3001',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:21:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 28ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:23:17'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-29 12:23:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:23:34'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-29 12:23:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:24:01'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-29 12:24:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:24:18'
}
{
  message: '::1 - - [29/Apr/2025:11:32:56 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-29 12:32:56'
}
{
  message: '::1 - - [29/Apr/2025:11:32:56 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-29 12:32:56'
}
{
  message: '::1 - - [29/Apr/2025:11:32:56 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-29 12:32:56'
}
{
  message: '::1 - - [29/Apr/2025:11:32:56 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-29 12:32:56'
}
{
  message: '::1 - - [29/Apr/2025:11:32:56 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-29 12:32:56'
}
{
  message: '::1 - - [29/Apr/2025:11:32:58 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-29 12:32:58'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-29 12:50:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 12:50:19'
}
{
  message: '\x1B[0mGET /api-docs/ \x1B[36m304\x1B[0m 10.670 ms - -\x1B[0m',
  level: 'info',
  timestamp: '2025-04-29 12:50:48'
}
{
  message: '\x1B[0mGET /api-docs/swagger-ui.css \x1B[36m304\x1B[0m 6.511 ms - -\x1B[0m',
  level: 'info',
  timestamp: '2025-04-29 12:50:48'
}
{
  message: '\x1B[0mGET /api-docs/swagger-ui-standalone-preset.js \x1B[36m304\x1B[0m 10.696 ms - -\x1B[0m',
  level: 'info',
  timestamp: '2025-04-29 12:50:48'
}
{
  message: '\x1B[0mGET /api-docs/swagger-ui-init.js \x1B[32m200\x1B[0m 6.167 ms - 61238\x1B[0m',
  level: 'info',
  timestamp: '2025-04-29 12:50:48'
}
{
  message: '\x1B[0mGET /api-docs/swagger-ui-bundle.js \x1B[36m304\x1B[0m 9.040 ms - -\x1B[0m',
  level: 'info',
  timestamp: '2025-04-29 12:50:48'
}
{
  message: '\x1B[0mGET /api-docs/favicon-32x32.png \x1B[36m304\x1B[0m 3.324 ms - -\x1B[0m',
  level: 'info',
  timestamp: '2025-04-29 12:50:49'
}
