{
  message: '::1 - - [24/Apr/2025:11:04:42 +0000] "GET /users/re HTTP/1.1" 404 147 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-24 12:04:42'
}
{"level":"info","message":"::1 - - [24/Apr/2025:11:05:56 +0000] \"GET /users/re HTTP/1.1\" 404 147 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\"","timestamp":"2025-04-24 12:05:56"}
{
  message: 'localhost',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'bookingdb',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: '557Py2mjs8.',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{ message: '5432', level: 'info', timestamp: '2025-04-24 13:32:45' }
{ message: 'ian', level: 'info', timestamp: '2025-04-24 13:32:45' }
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_day_time ON time_slots(day, start_time, end_time);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX idx_appointments_provider_status ON appointments(provider_id, status);..., params: undefined, duration: 29ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, error: relation "appointments" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 14:19:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:30:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:31:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:41:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:25 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:25'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:58 +0000] "POST /auth/register HTTP/1.1" 400 1413 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:58'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:43:10 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:43:10'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:44:32 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:44:32'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:49:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:50:12 +0000] "POST /auth/register HTTP/1.1" 400 50 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:50:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:52:21 +0000] "POST /auth/register HTTP/1.1" 400 60 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:52:21'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:54:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 23ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 15:54:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Toto","brian@gmail.com","$2b$10$Q8PrUcbPrVjeeO73XiYXXukfLu7x9Lm3Rt9mqePFX5yuimwVVXixC",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: 'User registered successfully: a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:54:44 +0000] "POST /auth/register HTTP/1.1" 201 115 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 17:59:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:42'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:02:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:05:22 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:07:08 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:09:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:09:31 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:10:17 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:12:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 70ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 88ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:11 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:14:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:27 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 62ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:15:57'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:15:57 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:15:57'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 124ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)\n' +
    '    at runNextTicks (node:internal/process/task_queues:65:5)\n' +
    '    at process.processImmediate (node:internal/timers:479:9)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 113ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Client connected from Pool (Total count: 3',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 231ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:47:34 +0000] "POST /api/auth/register HTTP/1.1" 404 157 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 71ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 79ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:52:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 44ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$oO812uPRA/WECJaOZ1gfO.nOE1o0vkOXljE1MGy1RGMk0ETW1FtZi",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'User registered successfully: b486f2f2-e19f-4b00-b28b-b7aed76b6e81',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 115ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 49ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9895ef84-c61f-41a6-816f-96dd39944bca)',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  level: 'error',
  message: "Error during login process for fakeuser@example.com:  Cannot read properties of undefined (reading 'password')",
  stack: "TypeError: Cannot read properties of undefined (reading 'password')\n" +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:20:72)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 500 70 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$x/L5i3pLahkKvvgfhXUifuTOIjaIUmD5HSRuUTdZwZsBl6WvNrTEa",""], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User registered successfully: 703e1d26-f7b7-4b76-ba7e-945536a088c4',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 58ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9d9d9578-6d23-4c89-b19d-eceed0ca063c)',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$/aL2gmrDdhmA0lPRGMkLNu2WyGLTo2oFluCXt1WlEcSXm589t6J8y",""], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'User registered successfully: 6f5a6cf0-db61-4708-a55f-d5b2f2345c4b',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 21:18:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:27:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:32:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Tony","Styles","tony@barbershop.com","hashed-password-1","Barber","Experienced barber, specializing in fades and trims.",4.8], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Linda","Wellness","linda@massagehub.com","hashed-password-2","Massage Therapist","Certified massage therapist focusing on deep tissue and relaxation techniques.",4.9], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:37:20 +0000] "POST /timeslot/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 404 212 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:37:20'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:38:51 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:42:11 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:43:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 36ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:44:05 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 08:45:48' }
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:45:48 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:47:50 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '85da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["85da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Access denied: User ID 85da2cd5-1c59-4f8d-b374-f95ee0d6f533 is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:48:48 +0000] "POST /timeslots/providers/85da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 33ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:39 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Duplicate time slot attempt by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'warn',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:43 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:08:28'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:08:28 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 419 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:09:13'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:09:13 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 125 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:13:38 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 200 836 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:15:49 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:59:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:13:52 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots/%2066aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 404 253 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:13:52'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:14:41 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 404 250 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:14:41'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 3ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:17:11 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 10:18:23' }
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:18:23 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 10:19:16' }
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:19:16 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:22:05 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 200 12 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 25ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: [null], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:24:08 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 200 12 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:25:24 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:25:24'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:25:55 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:25:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:27:12 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:27:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:29:05 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["7ea6049b-cb9c-4767-8263-6d4e152b9c89","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Time slot with id: 7ea6049b-cb9c-4767-8263-6d4e152b9c89 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:33:39 +0000] "DELETE /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/delete-timeslot/7ea6049b-cb9c-4767-8263-6d4e152b9c89 HTTP/1.1" 201 270 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:12:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:12:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  length: 319,
  name: 'error',
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_tasks_updated_at\n' +
    '      BEFORE UPDATE ON tasks \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'namespace.c',
  line: '434',
  routine: 'RangeVarGetRelidExtended',
  level: 'error',
  message: 'Error while initializing the schema relation "tasks" does not exist',
  stack: 'error: relation "tasks" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:1)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  length: 319,
  name: 'error',
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_tasks_updated_at\n' +
    '      BEFORE UPDATE ON tasks \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'namespace.c',
  line: '434',
  routine: 'RangeVarGetRelidExtended',
  level: 'error',
  message: 'Error while initializing the schema relation "tasks" does not exist',
  stack: 'error: relation "tasks" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:08:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  length: 372,
  name: 'error',
  severity: 'ERROR',
  code: '42710',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_time_slots_updated_at\n' +
    '      BEFORE UPDATE ON time_slots \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'trigger.c',
  line: '768',
  routine: 'CreateTriggerFiringOn',
  level: 'error',
  message: 'Error while initializing the schema trigger "update_time_slots_updated_at" for relation "time_slots" already exists',
  stack: 'error: trigger "update_time_slots_updated_at" for relation "time_slots" already exists\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:11:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 24ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  length: 372,
  name: 'error',
  severity: 'ERROR',
  code: '42710',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_time_slots_updated_at\n' +
    '      BEFORE UPDATE ON time_slots \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'trigger.c',
  line: '768',
  routine: 'CreateTriggerFiringOn',
  level: 'error',
  message: 'Error while initializing the schema trigger "update_time_slots_updated_at" for relation "time_slots" already exists',
  stack: 'error: trigger "update_time_slots_updated_at" for relation "time_slots" already exists\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-27","12:00:00","12:30:00"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-27","12:00:00","12:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:23:36 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:25:17 +0000] "PUT /providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 404 238 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:25:17'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Error executing query: { text: UPDATE SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '               ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: syntax error at or near "="}',
  level: 'error',
  timestamp: '2025-04-25 13:28:17'
}
{
  length: 90,
  name: 'error',
  severity: 'ERROR',
  code: '42601',
  detail: undefined,
  hint: undefined,
  position: '49',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'scan.l',
  line: '1244',
  routine: 'scanner_yyerror',
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  syntax error at or near "="',
  stack: 'error: syntax error at or near "="\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:13:34)',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:28:17 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 43 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:31:59'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:31:59'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Error executing query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: could not determine data type of parameter $4}',
  level: 'error',
  timestamp: '2025-04-25 13:32:06'
}
{
  length: 124,
  name: 'error',
  severity: 'ERROR',
  code: '42P18',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '740',
  routine: 'pg_analyze_and_rewrite_varparams',
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  could not determine data type of parameter $4',
  stack: 'error: could not determine data type of parameter $4\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:13:34)',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:32:06 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 59 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 35ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  result is not defined',
  stack: 'ReferenceError: result is not defined\n' +
    '    at updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:27:25)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:32:45 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:33:13 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 200 261 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-27","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:13:48:01 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 200 251 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:05:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:06:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:09:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:10:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:10:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:15:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:15:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 26ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:19:28 +0000] "GET /search/providers/:id/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 175 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:19:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:20:05 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:20:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:20:19 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:20:19'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:22:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:22:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:07:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["7ea6049b-cb9c-4767-8263-6d4e152b9c89","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 16:09:58'
}
{
  level: 'error',
  message: "Error deleting time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  Cannot read properties of undefined (reading 'created_at')",
  stack: "TypeError: Cannot read properties of undefined (reading 'created_at')\n" +
    '    at formatTimestamps (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:8:39)\n' +
    '    at deleteTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:105:25)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:09:58 +0000] "DELETE /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/delete-timeslot/7ea6049b-cb9c-4767-8263-6d4e152b9c89 HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:10:08 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:10:08'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:10:11 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:10:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 16:11:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:11:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:11:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:17:44 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:17:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:31'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:31'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:32 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:45 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:19:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:19:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:19:30'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:19:30 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1657 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:19:30'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:19:33'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:19:33 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1657 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:19:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:20:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:20:24 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 64 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:20:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 7ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 17ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 1ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 19:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 09:44:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:44:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 102ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 99ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 09:49:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:49:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 97ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:08:49:21 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 425 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:04:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:04:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 67ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:35:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 51ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:32:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:32:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 53ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: '::1 - - [26/Apr/2025:10:49:25 +0000] "GET /actors/search?name=TOm%20 HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:25'
}
{
  message: '::1 - - [26/Apr/2025:10:49:26 +0000] "GET /actors/search?name=TOm HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:26'
}
{
  message: '::1 - - [26/Apr/2025:10:49:27 +0000] "GET /actors/search?name=T HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:27'
}
{
  message: '::1 - - [26/Apr/2025:10:49:27 +0000] "GET /actors/search?name=Tom HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:27'
}
{
  message: '::1 - - [26/Apr/2025:10:49:28 +0000] "GET /actors/search?name=Tom%20 HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:28'
}
{
  message: '::1 - - [26/Apr/2025:10:49:28 +0000] "GET /actors/search?name=Tom%20H HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:28'
}
{
  message: '::1 - - [26/Apr/2025:10:49:29 +0000] "GET /actors/search?name=Tom%20Holla HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:29'
}
{
  message: '::1 - - [26/Apr/2025:10:49:30 +0000] "GET /actors/search?name=Tom%20Holland HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:01:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:21:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:22:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:24:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:31:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:35:01 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:35:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:35:29 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:35:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 73ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:43:19 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:01 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:01'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:03 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:44:18'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:44:18'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:44:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:19 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:46 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:46:27 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:46:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:47:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:47:00'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:07 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:29 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:29'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:31 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:31'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:32 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:49:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 52ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:49:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 70ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, time_slot_id, appointment_date, status)\n' +
    '   ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], error: column "time_slot_id" of relation "appointments" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 12:49:41'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '58',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets',
  level: 'error',
  message: 'Error booking appointment for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column "time_slot_id" of relation "appointments" does not exist',
  stack: 'error: column "time_slot_id" of relation "appointments" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:38:31)',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:49:41 +0000] "GET /appointment/booking HTTP/1.1" 500 130 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:50:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 64ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, appointment_date, status)\n' +
    '    ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], error: column "appointment_date" of relation "appointments" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 12:50:41'
}
{
  length: 141,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '71',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets',
  level: 'error',
  message: 'Error booking appointment for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column "appointment_date" of relation "appointments" does not exist',
  stack: 'error: column "appointment_date" of relation "appointments" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:38:31)',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:50:41 +0000] "GET /appointment/booking HTTP/1.1" 500 134 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:50:54 +0000] "GET /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-24T19:16:56.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-26 12:51:42'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:51:42 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:51:42'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:70:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)',
  timestamp: '2025-04-26 12:51:53'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:51:53 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:51:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 75ms, rows: 4}',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:52:22 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 344 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 60ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-26 13:08:12'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:08:12 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:08:12'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed invalid token',
  level: 'error',
  stack: 'JsonWebTokenError: invalid token\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:82:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:291:5)',
  timestamp: '2025-04-26 13:09:18'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:09:18 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:09:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], error: column a.time_slot_id does not exist}',
  level: 'error',
  timestamp: '2025-04-26 13:10:11'
}
{
  length: 173,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "a.timeslot_id".',
  position: '259',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error fetching appointments for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column a.time_slot_id does not exist',
  stack: 'error: column a.time_slot_id does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewMyAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:10:11 +0000] "GET /appointment/view-bookings HTTP/1.1" 500 89 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], duration: 34ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:15:48'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:15:48 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 272 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:15:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:17:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS a.created_at,\n' +
    '             t.day, t.start_time, t.end_time,\n' +
    '             p.fir..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], error: syntax error at or near "."}',
  level: 'error',
  timestamp: '2025-04-26 13:17:17'
}
{
  length: 90,
  name: 'error',
  severity: 'ERROR',
  code: '42601',
  detail: undefined,
  hint: undefined,
  position: '24',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'scan.l',
  line: '1244',
  routine: 'scanner_yyerror',
  level: 'error',
  message: 'Error fetching appointments for client a9b58b58-e455-4dfe-88c8-16cd0878c210: syntax error at or near "."',
  stack: 'error: syntax error at or near "."\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewMyAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:17:17'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:17:17 +0000] "GET /appointment/view-bookings HTTP/1.1" 500 82 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:17:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:48:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], error: column a.time_slot_id does not exist}',
  level: 'error',
  timestamp: '2025-04-26 13:52:28'
}
{
  length: 173,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "a.timeslot_id".',
  position: '255',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error fetching appointments for provider e1022995-d7f7-4ebc-98fd-cad361260475: column a.time_slot_id does not exist',
  stack: 'error: column a.time_slot_id does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewProviderAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:52:28 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 500 98 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 42ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:52:56 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 200 19 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], duration: 61ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:53:12 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 272 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 49ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:53:44 +0000] "GET /appointment/provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 200 267 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:12:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:15:59 +0000] "GET /4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 182 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:15:59'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:16:28 +0000] "GET /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 194 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:16:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:16:30 +0000] "GET /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 194 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:16:30'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed invalid token',
  level: 'error',
  stack: 'JsonWebTokenError: invalid token\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:82:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)',
  timestamp: '2025-04-26 14:17:09'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:17:09 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:17:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:18:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:18:27'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 14:18:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:18:28 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:18:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: 'Error executing query: { text: \n' +
    '        SELECT client_id, provider_id, time_slot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], error: column "time_slot_id" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 14:18:49'
}
{
  length: 183,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "appointments.timeslot_id".',
  position: '41',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error canceling appointment 4e50b113-db0e-48ba-b2be-76039fca95a0: column "time_slot_id" does not exist',
  stack: 'error: column "time_slot_id" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async cancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:15:33)',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:18:49 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 500 91 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Appointment 4e50b113-db0e-48ba-b2be-76039fca95a0 canceled by user a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:19:09 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:34:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:34:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:35:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 8ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:37:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 00:58:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 00:58:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 00:58:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-26T13:47:07.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-28 01:04:59'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:04:59 +0000] "POST /appointment/booking HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:04:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:05:10'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 61ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:10'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-28 01:05:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:11 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:34 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 75ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","a4989665-3dfc-4c53-b6fc-816b1ab26e18","2025-04-24T23:00:00.000Z","booked"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:53 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: [null], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Appointment 8dbe9a24-14c0-435f-8f93-38a78b5669ce canceled successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:07:27 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/8dbe9a24-14c0-435f-8f93-38a78b5669ce/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:34:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:34:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:35:31 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:38:04 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Cancel failed: Appointment 8dbe9a24-14c0-435f-8f93-38a78b5669ce already canceled',
  level: 'warn',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:39:00 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/8dbe9a24-14c0-435f-8f93-38a78b5669ce/cancel HTTP/1.1" 409 45 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:39:11 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:41:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:41:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","618b47c2-ac87-41b0-a88c-1a039fe85a1d","2025-04-24T23:00:00.000Z","booked"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:42:54 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["ced2d41d-18bb-4a83-b723-053286453258"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["ced2d41d-18bb-4a83-b723-053286453258"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Appointment ced2d41d-18bb-4a83-b723-053286453258 canceled successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:43:39 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/ced2d41d-18bb-4a83-b723-053286453258/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:48:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 50ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","618b47c2-ac87-41b0-a88c-1a039fe85a1d","2025-04-24T23:00:00.000Z","booked"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: '🔔 Notification sent to provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:48:43 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:51:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:51:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:54:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:54:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:56:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:57:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:05:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 69ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:21:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 60ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:21:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:20:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 09:05:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:26:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:26:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:28:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:28:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:30:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 11:38:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:35:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 12:56:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:56:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 12:57:43'
}
{
  message: '::1 - - [28/Apr/2025:11:58:29 +0000] "GET / HTTP/1.1" 200 176 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:29'
}
{
  message: '::1 - - [28/Apr/2025:11:58:29 +0000] "GET /stylesheets/style.css HTTP/1.1" 304 - "http://localhost:3000/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:29'
}
{
  message: '::1 - - [28/Apr/2025:11:58:36 +0000] "GET /api-docs HTTP/1.1" 301 158 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:36'
}
{
  message: '::1 - - [28/Apr/2025:11:58:36 +0000] "GET /api-docs/ HTTP/1.1" 200 3106 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:36'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 200 154986 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 52392 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 200 229223 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:37 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 200 1468326 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:37'
}
{
  message: '::1 - - [28/Apr/2025:11:58:38 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 200 628 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 12:58:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:07:13'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:38 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 55622 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:38'
}
{
  message: '::1 - - [28/Apr/2025:12:07:40 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:07:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:08:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:05'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:20 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:20'
}
{
  message: '::1 - - [28/Apr/2025:12:08:21 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:08:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:08:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:08:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:08:58'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: '::1 - - [28/Apr/2025:12:09:06 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 55743 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:09:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:09:37'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/ HTTP/1.1" 304 - "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui.css HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui-bundle.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui-init.js HTTP/1.1" 200 55622 "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:38 +0000] "GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:38'
}
{
  message: '::1 - - [28/Apr/2025:12:09:39 +0000] "GET /api-docs/favicon-32x32.png HTTP/1.1" 304 - "http://localhost:3000/api-docs/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-28 13:09:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:38:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:38:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:38:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:39:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:39:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 169ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 144ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 80bdb4b2-37a8-4374-945d-06be28ab0a26)',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:27 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:27 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:27 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$qi3BoF.jwXHNSUIXG6J7duLY6kjka.AKaFU5ln/S4zMZ8fD0G9IYS",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:27'
}
{
  message: 'User registered successfully: 2da57ef3-cba3-4b42-b8ff-3063b7f64c0b',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:28 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:41:28 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:41:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:41:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:46:25'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 66ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:46:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:29'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 216ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email)\n' +
    `      VALUES ('Test', 'Provider', 'provi..., params: undefined, error: null value in column "password" of relation "providers" violates not-null constraint}`,
  level: 'error',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 148ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /providers/undefined/create-timeslots HTTP/1.1" 404 176 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 3d8ca3d4-1c98-4988-b7c3-0387a21e8c28)',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$zqcP4SIAFm3uKcJISapNl.E2aC8H.G0qx/uNOZsUwXMLxAusFmhcG",""], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'User registered successfully: 63f011af-f7d1-4dde-9fd6-7c7143249b64',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:46:30 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:46:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:48:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:48:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 13:54:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 13:54:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:54:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 189ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 142ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 133ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /providers/42c6402c-4667-4d21-a214-c9f286ee6e16/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["42c6402c-4667-4d21-a214-c9f286ee6e16"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 78502707-3d9b-4995-b171-704c16396742)',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$X2R6Jt0TVNHKK8mI5ZlaPOzCT4RUSyrOfiKdo5IG64HHGdEb7TMk6",""], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'User registered successfully: 3b959057-740c-4c73-9d9d-c67405a6d5d8',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:54:15 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:54:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 201ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 163ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /providers/f2b299b7-aaf0-4562-909a-2103d5a5a3b6/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 136ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f2b299b7-aaf0-4562-909a-2103d5a5a3b6"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 2f7dea88-2299-4dcd-89c0-6198dfdb637c)',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 6ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:17 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$O/9w/wZwm/V6FQ.3LlKxg.J5Kg0rE6o6COrIXdhmwvHuL96x5Wxl6",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'User registered successfully: b553d319-4567-4b58-a203-6c21bb32961c',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:18 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:12:58:18 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 13:58:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:00:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 242ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:43 +0000] "POST /providers/beef51ba-f3bd-44e8-a952-e1399761f3f7/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 346ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 230ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["beef51ba-f3bd-44e8-a952-e1399761f3f7"], duration: 27ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 20ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:43'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: f5a2ee0d-b3c6-489b-8369-ccd17ef69578)',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 30ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$d4SOtrMEcNxZP45jVmOAv.jfkGVh43SeEn4MaVUwNBZuItsymfo0C",""], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'User registered successfully: 966c76e9-f6ae-4f21-9896-3ae7544a3b4b',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:00:44 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:00:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:03:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:03:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:03:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 105ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 146ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 198ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /providers/fc07ed64-c9bc-4e1c-97f8-b265fac950d0/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fc07ed64-c9bc-4e1c-97f8-b265fac950d0"], duration: 30ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: d86c018d-dfce-41e5-ab92-1fb658789a57)',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$lW3sq/eX32wAkT8rcWyR6uDoyOZFCrgqLxJCqzBllMPDQ0p72ZmW6",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'User registered successfully: 15be1a96-a7ee-4e3e-aa8d-4863ea81e9f6',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:03:48 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:03:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:08:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:18 +0000] "POST /providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 175ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 121ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 132ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 04b3073e-7dd5-49d2-a5f9-f16346700b6b)',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Z/RimF.Bg48o9f6AaZOK.u3kGmk0Uh7tLqpVhqi8Fx.a3sqpGIrRm",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'User registered successfully: 772d587a-0860-4fd9-81d8-db82a11810bb',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:08:19 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:08:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 53ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:11:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 147ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 158ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 118ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:44 +0000] "POST /providers/65ac1b08-afdf-412c-b05a-012554afe4fd/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["65ac1b08-afdf-412c-b05a-012554afe4fd"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:44'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 07e6647c-3625-4787-b35a-f40f893a7ce0)',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$.yWCob7/I3UHHvkcZ6R3D.YUN6vZAQZFex5dBotpCv7xpsF.O5hRC",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'User registered successfully: b9c0f46c-5f86-467f-8c44-dd7e6fd406c1',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:11:45 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:11:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:13:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 172ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 240ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:19 +0000] "POST /providers/d7eaf1cb-fd6b-4d44-8a36-5446a6f47615/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["d7eaf1cb-fd6b-4d44-8a36-5446a6f47615"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 145ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: bcd7fa53-33e3-4960-b7ac-466daa9716a8)',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Kdzv1l7zYXmCGKUsWRgfsuxOjJdK.5feH9ktYyAXaAjMKqPIo7wTC",""], duration: 28ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'User registered successfully: 07baf321-a203-44b9-820f-60ee07f1057f',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:13:20 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:13:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:14:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:18:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 181ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 164ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:54 +0000] "POST /providers/e9fd8643-f539-49ce-89f3-df961ecdf85d/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 227ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 2e709973-3b90-4537-af70-f3da4e01eec7)',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:54 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["e9fd8643-f539-49ce-89f3-df961ecdf85d"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:54'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$OOfLMGW3aWTxwESIyYrX2ODwfNM0os4So.6uPwXZJ5c0KYdNPqUMG",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'User registered successfully: 3cd199de-c80c-48cf-81ce-97d4d6e83948',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:18:55 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:18:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:28:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 202ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 155ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 133ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /providers/a4dd47d4-43ed-4f94-a479-026db55abe8b/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 02cd8c1b-d80c-4ba8-8cb9-de707091f115)',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a4dd47d4-43ed-4f94-a479-026db55abe8b"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Q89L5U6BkoHktiKMsew5wes4dxOZ22wpWECMFP8SzmqEUUC22ybtm",""], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'User registered successfully: ab65f4ab-e607-46e6-9c3f-b0c824abf7ee',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:47 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:28:48 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:28:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:31:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  level: 'info',
  message: 'Provider ID',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 169ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 157ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 131ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /providers/19bb468d-f586-43e9-abd4-a19dd3c7f90e/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: ea19f929-af92-4ac7-bb54-7386679847f5)',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["19bb468d-f586-43e9-abd4-a19dd3c7f90e"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$bFerqINe4XHtclbMSKeZ/OEX071Z2nTTwYITBfA50XYDJzcmUQUiy",""], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'User registered successfully: 7a6afbbb-ee65-4884-8afa-c8c74edaeb64',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:21 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:21'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:31:22 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:31:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 63ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:34:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Provider ID: providerId',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 196ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 176ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 106ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:30 +0000] "POST /providers/866eec72-aedd-4d68-a04a-8415a38be836/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["866eec72-aedd-4d68-a04a-8415a38be836"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:30'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 88c858c4-12ac-479a-b132-6bd3208507ad)',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$aIH5GtrvHE/cwiazdFYVouAo5J8n4ultHP0ighUloI6v2XUERho3C",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'User registered successfully: fe64bfa0-b362-4cbf-8733-53eb279a7ca8',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:34:31 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:34:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:39:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:35'
}
{
  message: 'Provider ID: undefined',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 197ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 148ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /providers/57257866-6ca2-404e-a7bd-0f18c184cf4b/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 134ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["57257866-6ca2-404e-a7bd-0f18c184cf4b"], duration: 48ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 32d27966-e586-469f-b31b-356d2a864949)',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$1x44HRY1ncHlcggoOHgpoOGsZsx04Wu1Kl.fF6L5TQlCDTk/AggD2",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'User registered successfully: 4b3cd2cf-a005-4c51-8f7e-d05a0587ad05',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:39:36 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:39:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 51ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:52:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:12'
}
{
  message: 'Provider ID: undefined',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 240ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 165ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /providers/63f43b98-fbeb-4090-ba62-49fa0fe3c73a/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["63f43b98-fbeb-4090-ba62-49fa0fe3c73a"], duration: 52ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 175ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: b6577a3a-9591-4b14-bd2b-b52513a8e20d)',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:13 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:13'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$ZnaLRRbm8AvmmoJe0DwpJuYjuDd.9NuF7r3OX1r2LHI5sQnnkiisK",""], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'User registered successfully: c7daf691-4cb1-45a4-bce5-57750cc24327',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:14 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:52:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:52:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:53:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 188ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 148ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 108ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Provider ID: 24862967-dd38-4c37-b24c-ac800104bd82',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /providers/24862967-dd38-4c37-b24c-ac800104bd82/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: ed5bc0cf-61b8-455c-8650-dca1e53bd6e5)',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:02 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:02'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$HJcvi9HoG.PM3SfQ.U22S.iEbNWzSZXD0k0FsFG9yeL9LPaJOZAl6",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'User registered successfully: 614b6f1b-effa-490e-92be-2f1de975fe02',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:03 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:54:03 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:54:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 30ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:55:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 157ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    `      VALUES ('Test..., params: undefined, error: duplicate key value violates unique constraint "providers_email_key"}`,
  level: 'error',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 140ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 2ef98fe4-5269-463f-8982-ffdaf3119444)',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:30 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:30 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:30 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:30'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$03VpFHiOYSj1/GEBZjksYebMIro6k1AMOWOzlnSa9V.MLPO9PK5vy",""], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'User registered successfully: 1735a10b-d726-4a43-bc73-c48150f7bd8e',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:31 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:55:31 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:55:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 14:56:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 14:56:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 179ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 193ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Provider ID: 2e4baec7-e080-478d-a6ec-cd766bc9c7aa',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /providers/2e4baec7-e080-478d-a6ec-cd766bc9c7aa/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["2e4baec7-e080-478d-a6ec-cd766bc9c7aa"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 121ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9ccf2004-ba96-43d7-885e-e03b1964a187)',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$H66hhYXheZi6W0RZ23zZ5.YM9BItjobASuB6O..rTXAFAUCP1mRcG",""], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'User registered successfully: 1b8ff715-8e46-4e63-b599-f597d1dfbf8b',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:41 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:41'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:13:56:42 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 14:56:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:18:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:18:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:19:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:20:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:21:25 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 15:21:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:24:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:24:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 226ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 123ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 162ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Provider ID: 14b3b008-94ff-40f9-b420-70cdbb72e02e',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /providers/14b3b008-94ff-40f9-b420-70cdbb72e02e/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 479fac02-6bf5-473a-9f41-e97be4c6a04e)',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["14b3b008-94ff-40f9-b420-70cdbb72e02e"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:27 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$PkC89/f9aaqGuiM8u6uDAue4bjqBIhnslqiZxzt4HrxcBf6vAKQ6y",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'User registered successfully: 674912b5-e9bb-4ea5-ab34-a8a5c421abbc',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:28 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:27:28 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:27:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:31:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:32:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:32:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 210ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 107ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Provider ID: caf19de7-96c2-4330-bb01-6b50b1fb4844',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 184ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "POST /providers/caf19de7-96c2-4330-bb01-6b50b1fb4844/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "GET /provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 404 198 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["caf19de7-96c2-4330-bb01-6b50b1fb4844"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "PATCH /provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/your-appointment-id/cancel HTTP/1.1" 404 213 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: f6a5331c-81cb-4bc6-83d5-2508e85bee51)',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:49 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:49'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$PlX8D8mf/Yeyiuslm22FNendh7O3bpSr5eAeeqCEHrJ6rHEbAdoLK",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'User registered successfully: 6d206dfe-d690-42de-9d7c-c93c647e8606',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:33:50 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:33:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:37:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 129ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "GET /provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 404 198 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 208ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Test..., params: undefined, duration: 178ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Provider ID: 413e2abf-bfc3-43b6-8b69-3a909ca600cb',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "PATCH /provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/your-appointment-id/cancel HTTP/1.1" 404 213 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "POST /providers/413e2abf-bfc3-43b6-8b69-3a909ca600cb/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["413e2abf-bfc3-43b6-8b69-3a909ca600cb"], duration: 49ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: f9b814a6-4e6f-47ff-be37-a5dec9c61cbf)',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:25 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:25'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$Z3t0dBVyqR4cYBpwGvbbbOvtDEWq4ht8wo9gJalWek3BTEKsljcLK",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'User registered successfully: 1c2754fe-962c-426d-b44d-4b9ef2bd7c09',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:14:37:26 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 15:37:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 15:38:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:21:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:21:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:21:52'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /booking HTTP/1.1" 404 147 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "GET /view-bookings HTTP/1.1" 404 152 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 220ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "GET /provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 404 198 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 170ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "PATCH /your-booked-appointment-id/cancel HTTP/1.1" 404 174 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "PATCH /provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/your-appointment-id/cancel HTTP/1.1" 404 213 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 3c02ea4b-340e-480f-a00b-8ce6f1407035)',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$z9IO27fg7v5z9k0.cqIiKO5NwDqJ7fJX7rMjBnpWuMTn1QKh7Ptr.",""], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'User registered successfully: 77a6095a-1177-44b1-b71c-e49373156f8f',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:53 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:53'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:21:54 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:21:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:22:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:22:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:22:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:22:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:22:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 91ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 171ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 51371952-f43f-4a8c-acb3-46df4aff693b)',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$PbqF2Fd2yKmcivMFpzsGq.8S35hTBvgo3K28MEnQNLXxHRO9Og9DG",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'User registered successfully: 7278d71c-6fcf-4033-9c7f-306cbfbdc383',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:22:17 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:22:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:36:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:36:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:40:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:40:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:42:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 168ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:41 +0000] "POST /auth/register HTTP/1.1" 400 112 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:41'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 5c8f70c3-750f-44f8-8f13-feffabeccc1f)',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:42 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:42 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:43:42 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:43:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:44:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 195ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/register HTTP/1.1" 400 50 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9aa00048-d7ec-48ea-9d01-2e8b1be3485b)',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:44:47 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:44:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:45:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:45:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855129152@example.com"], duration: 107ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 204ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a5d00e9e-b8cf-4097-ba49-88d453b80915)',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855129152@example.com","$2b$10$peP3asj5yFgYdmSqwCY68uZ9UgFTfJJTHlg5RcKRIZ9Hb3Z3jFzSu",null], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'User registered successfully: 2eedce6a-4173-4f8b-8b6d-77244adce57b',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:45:29 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:45:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:46:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:46:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:46:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 176ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855179064@example.com"], duration: 130ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 65581752-5b40-48ab-92b1-8e8e4d822af1)',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855179064@example.com","$2b$10$rU0qvl/7ZVusAaCFA6oV/u1EPXN2TjTQPvs9PrzgG/cAnON8W.YfO",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'User registered successfully: cf382a23-6365-433d-85ec-f34af093c34f',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:46:19 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:46:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:47:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:47:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:47:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:47:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:47:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 178ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855244972@example.com"], duration: 114ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 5c7faa6c-3262-44c0-a3f9-1961be597388)',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 15ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855244972@example.com","$2b$10$YYcOr.igksi6TQ.Z5Gl7WenxEg5oYUFzxsbX7wXnHKEsmIP7K7zJ6",""], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'User registered successfully: 31863b25-9e4d-464c-b95a-3eefd6da3719',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:47:25 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:47:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 158ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855287747@example.com"], duration: 109ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:07'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: d7c30e8c-c56c-4b7a-b4c2-abfbfd77a7a9)',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855287747@example.com","$2b$10$VWVkvqt3gMDS4PZ4slEMW.d19llSXEQVNh2DQocgpUXV9YF8HvbMO",""], duration: 42ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'User registered successfully: 0de920bc-d5d5-4945-b286-3e64cc9fa878',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:48:08 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:48:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:48:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:58:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 16:58:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 180ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 171ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745855942725@example.com"], duration: 111ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:59:02'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /providers/3dbd7c08-3a6f-4717-9055-74c251e0371d/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["3dbd7c08-3a6f-4717-9055-74c251e0371d"], duration: 48ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a85b5f3c-8680-419e-add5-361e2f115905)',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745855942725@example.com","$2b$10$ITtuZ1aj4BYmpn.1OoQxQewvV/6pUR3KClblTjSFIZiPbIfjQJGv.",""], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'User registered successfully: 500fd9ee-d359-40ec-829f-6fdcf78be61d',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:15:59:03 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 16:59:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:01:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:01:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:01:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 136ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 161ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856113906@example.com"], duration: 115ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /providers/b1dbd73e-9f37-4500-92da-43a2ad884e21/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["b1dbd73e-9f37-4500-92da-43a2ad884e21"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9e6df675-b2b2-4af6-8305-b3b00552039d)',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 39ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856113906@example.com","$2b$10$b0QyMH2uIrJv2qM0huQAc.pSiI8GHLyXLtwQgO3j01gGcwQp5K66u",""], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'User registered successfully: ad888b76-956e-43d7-8a41-b137329480f0',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:01:54 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:01:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:02:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856176773@example.com"], duration: 116ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:02:56'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 221ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 160ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /providers/00993922-01d1-4915-892b-f70fb5f9171e/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["00993922-01d1-4915-892b-f70fb5f9171e"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: b96894de-1a93-487e-9095-c5a1ff2e0554)',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 5ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856176773@example.com","$2b$10$fdizrXEboOuswSP81if8ROwlgUot2FNnzZ5qAyi1A9SamqSu/Z9uu",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'User registered successfully: a2860ba7-b24d-49ac-b482-c116c8c033ae',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:02:57 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:02:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:04:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:04:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856302792@example.com"], duration: 113ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:05:02'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 191ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 151ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /providers/9d0e9d92-2d8b-474c-ac71-014f7a5db49a/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: fa5e40d0-2fde-4ec2-858c-7daf5fd6ad9d)',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["9d0e9d92-2d8b-474c-ac71-014f7a5db49a"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856302792@example.com","$2b$10$qfzOXcDqstUrJ.smkDf5Te7f5ZtIOqhSpjxYN0vOebhBlJSwFHlCG",""], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'User registered successfully: 04e5ae2f-b411-46fd-a847-55a9fa671cf9',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:05:03 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:05:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 55ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 8ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:08:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:08:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 185ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 218ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856510892@example.com"], duration: 130ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /providers/39d26026-0ace-4ea5-bd78-b9df7c4e8bc9/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["39d26026-0ace-4ea5-bd78-b9df7c4e8bc9"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a0db5e47-62d1-43b1-b7b0-12d6bf1f7a50)',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856510892@example.com","$2b$10$CtOg1dC9d1mt54K6QkjE/uJa7cXwGjdZ6.rZ.uxogKPPEmmPaycrW",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'User registered successfully: a3c1bb0f-70a0-4887-a5e8-0089c1e152a1',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:08:31 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:08:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:46'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:09:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:09:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856594047@example.com"], duration: 100ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 167ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 149ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /providers/f75082c2-125c-4a78-be94-ca005ac2cfcb/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f75082c2-125c-4a78-be94-ca005ac2cfcb"], duration: 47ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: cc7f9688-61b7-4faf-adb0-c16e6fb17286)',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856594047@example.com","$2b$10$l3HqleUHHf7qTEoJba0t2ezLI9xMN60x7jRdb1QcZpOj0mY6G2E6i",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'User registered successfully: 7f1eb2e6-6e57-458c-9e2d-ff8528f87907',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:09:54 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:09:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:12:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 199ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 212ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /providers/298e4f98-0d0f-4dcf-ad25-5c6c4c0cced2/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["298e4f98-0d0f-4dcf-ad25-5c6c4c0cced2"], duration: 50ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745856753395@example.com"], duration: 188ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: b9fe5d0f-5aad-4225-a925-141727cdf164)',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:33 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:33'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745856753395@example.com","$2b$10$4iIGHUuZ2skE5vl9Bh8WWOaQm19FvoQMn7Xykv78jWBLxJmLQJuB6",""], duration: 35ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: 'User registered successfully: 600de175-2bec-493c-ae5e-58f0e8e8acb2',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:12:34 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:12:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:19:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 173ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745857155526@example.com"], duration: 118ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 174ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:15 +0000] "POST /providers/b2f67f72-a28c-47d0-8762-21fcffbdd8bd/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: cdc84805-24fa-4bc5-9978-b5b30ee3eff1)',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:15 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["b2f67f72-a28c-47d0-8762-21fcffbdd8bd"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:15'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:16 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:16 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745857155526@example.com","$2b$10$Hnae6YHCHwWWPvOuXFBrj.zXrJjxnHgrBamCOseV2NDWNLP1UW/R6",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'User registered successfully: f2773c96-87bf-4735-a7d1-4fd4cd0d9a19',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:19:16 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:19:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:20:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 234ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /providers/7b895143-f470-43bf-95db-dedf380cd9d5/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7b895143-f470-43bf-95db-dedf380cd9d5"], duration: 26ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 325ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: c7735bf5-78b9-4393-8688-60f643cf3921)',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745857221443@example.com"], duration: 161ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:21 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:21'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745857221443@example.com","$2b$10$oE0avMVNkrEzgPEaxcPRKecDNgowuvSJJ2TqcKLHE6LETjGFQ0AoS",""], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:20:22'
}
{
  message: 'User registered successfully: 244e25c7-9131-4ef2-ae1a-7ac01acc11db',
  level: 'info',
  timestamp: '2025-04-28 17:20:22'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:20:22 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:20:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:25:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 172ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 132ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:25:33'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745857533800@example.com"], duration: 124ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /providers/c46c8ed8-fd22-424c-83b7-4bbef188b85c/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9fdf9a4b-1396-4fab-8782-ba574b434517)',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c46c8ed8-fd22-424c-83b7-4bbef188b85c"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 26ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745857533800@example.com","$2b$10$/pB1lF5hbx9Nip4GuLzUKex5dKmakCe796SQru2FT14TLsflZlR6K",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'User registered successfully: 84f8f28a-54dc-4ef1-8e42-070081060591',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:25:34 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:25:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:44:25'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:44:30'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 171ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 185ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745858670965@example.com"], duration: 131ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["6afa7d52-88a7-4eb2-b9a3-839778429d8c"], duration: 28ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: a2c46e30-d368-4a78-99f6-88d63fe1f3c3)',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 42ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745858670965@example.com","$2b$10$BAQXyn3nXVbAGWWQh.pn.ekOivI.Yxx0/OhJsKjoAUUdAYZo7pgGW",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'User registered successfully: ed00b528-ee7d-4901-bc4e-f6271fa4604f',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:44:31 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:44:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 179ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 145ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["46bc2ea5-faf6-451b-b2c7-e01424a9372d"], duration: 27ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["testuser1745859067510@example.com"], duration: 129ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 876202df-1be7-4004-a3a7-0d7274ffc8bd)',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:07 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:07 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:07 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:07'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Test","User","testuser1745859067510@example.com","$2b$10$kY6Uv81/NjU9H1pFF6vCoO1PJ0EVsKXoRpDlPpozYwUdDmw2mrF96",""], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: 'User registered successfully: 0ef8bee2-310a-4088-ad98-899f549c0496',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:51:08 +0000] "POST /auth/register HTTP/1.1" 201 114 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:51:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:52:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:52:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:52:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:52:26'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 149ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:52:26'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["15faf609-17e0-4c85-b97e-db7327aa4e9a"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:52:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 65ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:53:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 132ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["690381b1-027c-492b-8910-76755cf079f7"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:53:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:53:50'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:54:04 +0000] "POST /providers/c0e33914-6223-42b4-9068-4f7dd360cd6a/create-timeslots HTTP/1.1" 404 203 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c0e33914-6223-42b4-9068-4f7dd360cd6a"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:54:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 30ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:59:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 143ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:16:59:29 +0000] "POST /timeslot/providers/ce87d070-772f-40de-acc4-07de29a18023/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["ce87d070-772f-40de-acc4-07de29a18023"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 17:59:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 17:59:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:00:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:00:05'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 139ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:00:05'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:00:06 +0000] "POST /timeslot/providers/7fce423b-6298-4fc9-8322-f1771c088979/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:00:06'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["7fce423b-6298-4fc9-8322-f1771c088979"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:00:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:00:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:00:33 +0000] "POST /timeslot/providers/f9c27d35-ca95-4b18-b872-d9ed705353d8/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f9c27d35-ca95-4b18-b872-d9ed705353d8"], duration: 48ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:00:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 48ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:02:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 114ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:02:08 +0000] "POST /timeslot/providers/372a19f9-1658-4205-9378-9330d246cc47/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["372a19f9-1658-4205-9378-9330d246cc47"], duration: 42ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:02:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:12:31'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:12:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:12:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 184ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:12:52 +0000] "POST /timeslot/providers/c8d90a2a-7b08-461d-a1b6-43b280991626/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c8d90a2a-7b08-461d-a1b6-43b280991626"], duration: 22ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:12:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:19:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 12ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:19:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 143ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:19:35 +0000] "POST /timeslot/providers/368e934c-0408-4222-9b9a-5128ddab96bc/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["368e934c-0408-4222-9b9a-5128ddab96bc"], duration: 44ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:19:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:20:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 18:20:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 136ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:17:20:42 +0000] "POST /timeslot/providers/30b3ed50-dbbb-49a6-9be5-bf888df1e305/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["30b3ed50-dbbb-49a6-9be5-bf888df1e305"], duration: 44ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 18:20:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:03:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:03:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:04:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:04:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 247ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:04:14'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["a4fb9c0f-b6ed-4782-809a-40bf0ff159c6"], duration: 52ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:04:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:05:23'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:05:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 147ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:05:32 +0000] "POST /timeslot/providers/1461cd80-b74c-4a7e-8427-67e24954ca11/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:05:32'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1461cd80-b74c-4a7e-8427-67e24954ca11"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:05:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:06:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:06:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 175ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:06:52 +0000] "POST /timeslot/providers/51772082-6c28-4d08-9f97-e0f8996fab33/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["51772082-6c28-4d08-9f97-e0f8996fab33"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:06:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:11:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:11:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:11:10'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 234ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:11:10'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:11:11 +0000] "POST /timeslot/providers/1436042b-169e-4e19-bb6c-0070b3fb67dc/create-timeslots HTTP/1.1" 404 212 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:11:11'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["1436042b-169e-4e19-bb6c-0070b3fb67dc"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:11:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:15:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:15:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:15:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 156ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["fd86006c-49c3-40ca-aa63-f78c4dc9b793","2025-05-01","09:00:00","09:30:00"], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["fd86006c-49c3-40ca-aa63-f78c4dc9b793","2025-05-01","09:00:00","09:30:00"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Time slot created Successfully by the user fd86006c-49c3-40ca-aa63-f78c4dc9b793 : c67eb7bf-90a9-4327-b347-a4a0cb5395b1',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:15:27 +0000] "POST /timeslots/providers/fd86006c-49c3-40ca-aa63-f78c4dc9b793/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["c67eb7bf-90a9-4327-b347-a4a0cb5395b1"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fd86006c-49c3-40ca-aa63-f78c4dc9b793"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:15:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:16:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:16:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:16:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 175ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["c3fe1a82-fdb6-4971-96db-a2f2d5b3504a","2025-05-01","09:00:00","09:30:00"], duration: 9ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["c3fe1a82-fdb6-4971-96db-a2f2d5b3504a","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Time slot created Successfully by the user c3fe1a82-fdb6-4971-96db-a2f2d5b3504a : 8ed27693-5f7e-4598-9e21-9443afb06447',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:18:57 +0000] "POST /timeslots/providers/c3fe1a82-fdb6-4971-96db-a2f2d5b3504a/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:18:57'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["8ed27693-5f7e-4598-9e21-9443afb06447"], duration: 37ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:18:58'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["c3fe1a82-fdb6-4971-96db-a2f2d5b3504a"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:18:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:26:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 125ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["137fd17e-10e6-4be7-aefc-cf008f9345aa","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:26:56'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["137fd17e-10e6-4be7-aefc-cf008f9345aa","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Time slot created Successfully by the user 137fd17e-10e6-4be7-aefc-cf008f9345aa : 0654e7f4-4be4-4281-8e71-0455d0a38331',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:26:57 +0000] "POST /timeslots/providers/137fd17e-10e6-4be7-aefc-cf008f9345aa/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["0654e7f4-4be4-4281-8e71-0455d0a38331"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["137fd17e-10e6-4be7-aefc-cf008f9345aa"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:26:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:27:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:27:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 194ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d","2025-05-01","09:00:00","09:30:00"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Time slot created Successfully by the user fdd49d77-09be-4b82-bc58-2bdb3d26345d : 3e611054-cc56-4678-a2a9-e57251e48d64',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:27:40 +0000] "POST /timeslots/providers/fdd49d77-09be-4b82-bc58-2bdb3d26345d/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:27:40 +0000] "GET /timeslots/providers/fdd49d77-09be-4b82-bc58-2bdb3d26345d/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["3e611054-cc56-4678-a2a9-e57251e48d64"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["fdd49d77-09be-4b82-bc58-2bdb3d26345d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:27:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:28:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:28:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:29:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 171ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["e10a79fa-2668-4221-b562-01b5938869f8","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["e10a79fa-2668-4221-b562-01b5938869f8","2025-05-01","09:00:00","09:30:00"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Time slot created Successfully by the user e10a79fa-2668-4221-b562-01b5938869f8 : d0c6eba3-a54c-4568-914e-b07324859353',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:29:23 +0000] "POST /timeslots/providers/e10a79fa-2668-4221-b562-01b5938869f8/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'd0c6eba3-a54c-4568-914e-b07324859353',
    provider_id: 'e10a79fa-2668-4221-b562-01b5938869f8',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:29:23',
    updated_at: '2025-04-29 07:29:23'
  },
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e10a79fa-2668-4221-b562-01b5938869f8"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:29:23 +0000] "GET /timeslots/providers/e10a79fa-2668-4221-b562-01b5938869f8/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  slots: [
    {
      day: '2025-04-30T23:00:00.000Z',
      start_time: '09:00:00',
      end_time: '09:30:00',
      is_booked: false,
      created_at: '2025-04-29 07:29:23',
      updated_at: '2025-04-29 07:29:23'
    }
  ],
  level: 'info',
  message: 'List of created time slots:',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["d0c6eba3-a54c-4568-914e-b07324859353"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["e10a79fa-2668-4221-b562-01b5938869f8"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:29:23'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:30:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:30:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:30:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 139ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4","2025-05-01","09:00:00","09:30:00"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Time slot created Successfully by the user d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4 : 85126e6d-d82e-4f8e-817a-0561e047a86f',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:30:48 +0000] "POST /timeslots/providers/d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '85126e6d-d82e-4f8e-817a-0561e047a86f',
    provider_id: 'd30f4bd6-7ba7-4e8a-a542-c5efe11c47c4',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:30:48',
    updated_at: '2025-04-29 07:30:48'
  },
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:30:48 +0000] "GET /timeslots/providers/d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["85126e6d-d82e-4f8e-817a-0561e047a86f"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["d30f4bd6-7ba7-4e8a-a542-c5efe11c47c4"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:30:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:31:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:31:38'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:31:38'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8","2025-05-01","09:00:00","09:30:00"], duration: 9ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8","2025-05-01","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Time slot created Successfully by the user 5d8a72ac-0ceb-4225-80df-d03b55c1dac8 : bcaab227-f3c5-4140-9505-aa4381053ddd',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:31:39 +0000] "POST /timeslots/providers/5d8a72ac-0ceb-4225-80df-d03b55c1dac8/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'bcaab227-f3c5-4140-9505-aa4381053ddd',
    provider_id: '5d8a72ac-0ceb-4225-80df-d03b55c1dac8',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:31:39',
    updated_at: '2025-04-29 07:31:39'
  },
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:31:39 +0000] "GET /timeslots/providers/5d8a72ac-0ceb-4225-80df-d03b55c1dac8/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:31:39',
        updated_at: '2025-04-29 07:31:39'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["bcaab227-f3c5-4140-9505-aa4381053ddd"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["5d8a72ac-0ceb-4225-80df-d03b55c1dac8"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:31:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:31:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 48ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:31:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:32:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 65ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:32:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 125ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef","2025-05-01","09:00:00","09:30:00"], duration: 22ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef","2025-05-01","09:00:00","09:30:00"], duration: 15ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Time slot created Successfully by the user f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef : a494d2e9-80af-4a1f-97b2-d25b4a796065',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:32:15 +0000] "POST /timeslots/providers/f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: 'a494d2e9-80af-4a1f-97b2-d25b4a796065',
    provider_id: 'f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:32:15',
    updated_at: '2025-04-29 07:32:15'
  },
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:32:15 +0000] "GET /timeslots/providers/f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:32:15',
        updated_at: '2025-04-29 07:32:15'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["a494d2e9-80af-4a1f-97b2-d25b4a796065"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["f7d4ef4c-0a5a-420f-a0be-f94a5438a3ef"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:32:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:33:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:33:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:33:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 146ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3","2025-05-01","09:00:00","09:30:00"], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3","2025-05-01","09:00:00","09:30:00"], duration: 40ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Time slot created Successfully by the user 5dfae5de-d47c-4287-9dd1-2801d16a93b3 : 11157ace-95b0-467a-b436-a5344e1a64a7',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:33:08 +0000] "POST /timeslots/providers/5dfae5de-d47c-4287-9dd1-2801d16a93b3/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '11157ace-95b0-467a-b436-a5344e1a64a7',
    provider_id: '5dfae5de-d47c-4287-9dd1-2801d16a93b3',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:33:08',
    updated_at: '2025-04-29 07:33:08'
  },
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:33:08 +0000] "GET /timeslots/providers/5dfae5de-d47c-4287-9dd1-2801d16a93b3/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:33:08',
        updated_at: '2025-04-29 07:33:08'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:33:08'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["11157ace-95b0-467a-b436-a5344e1a64a7"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:09'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["5dfae5de-d47c-4287-9dd1-2801d16a93b3"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:33:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:34:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-29 07:34:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-29 07:34:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-29 07:34:23'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty)\n' +
    "      VALUES ('Prov..., params: undefined, duration: 137ms, rows: 1}",
  level: 'info',
  timestamp: '2025-04-29 07:34:23'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250","2025-05-01","09:00:00","09:30:00"], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250","2025-05-01","09:00:00","09:30:00"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Time slot created Successfully by the user 80df618f-0b8e-4fa1-8f87-9494ccffd250 : 4d02b4d9-90ac-411b-a3e1-d3de3b0f339c',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:34:24 +0000] "POST /timeslots/providers/80df618f-0b8e-4fa1-8f87-9494ccffd250/create-timeslots HTTP/1.1" 201 304 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'DEBUG create slot response: Time slot created',
  slot: {
    id: '4d02b4d9-90ac-411b-a3e1-d3de3b0f339c',
    provider_id: '80df618f-0b8e-4fa1-8f87-9494ccffd250',
    day: '2025-04-30T23:00:00.000Z',
    start_time: '09:00:00',
    end_time: '09:30:00',
    is_booked: false,
    created_at: '2025-04-29 07:34:24',
    updated_at: '2025-04-29 07:34:24'
  },
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: '::ffff:127.0.0.1 - - [29/Apr/2025:06:34:24 +0000] "GET /timeslots/providers/80df618f-0b8e-4fa1-8f87-9494ccffd250/view-timeslots HTTP/1.1" 200 180 "-" "-"',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: {
    slots: [
      {
        day: '2025-04-30T23:00:00.000Z',
        start_time: '09:00:00',
        end_time: '09:30:00',
        is_booked: false,
        created_at: '2025-04-29 07:34:24',
        updated_at: '2025-04-29 07:34:24'
      }
    ]
  },
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: DELETE FROM time_slots WHERE id = $1..., params: ["4d02b4d9-90ac-411b-a3e1-d3de3b0f339c"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
{
  message: 'Executed query: { text: DELETE FROM providers WHERE id = $1..., params: ["80df618f-0b8e-4fa1-8f87-9494ccffd250"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-29 07:34:24'
}
