{
  message: '::1 - - [24/Apr/2025:11:04:42 +0000] "GET /users/re HTTP/1.1" 404 147 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-24 12:04:42'
}
{"level":"info","message":"::1 - - [24/Apr/2025:11:05:56 +0000] \"GET /users/re HTTP/1.1\" 404 147 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\"","timestamp":"2025-04-24 12:05:56"}
{
  message: 'localhost',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'bookingdb',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: '557Py2mjs8.',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{ message: '5432', level: 'info', timestamp: '2025-04-24 13:32:45' }
{ message: 'ian', level: 'info', timestamp: '2025-04-24 13:32:45' }
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_day_time ON time_slots(day, start_time, end_time);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX idx_appointments_provider_status ON appointments(provider_id, status);..., params: undefined, duration: 29ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, error: relation "appointments" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 14:19:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:30:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:31:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:41:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:25 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:25'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:58 +0000] "POST /auth/register HTTP/1.1" 400 1413 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:58'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:43:10 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:43:10'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:44:32 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:44:32'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:49:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:50:12 +0000] "POST /auth/register HTTP/1.1" 400 50 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:50:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:52:21 +0000] "POST /auth/register HTTP/1.1" 400 60 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:52:21'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:54:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 23ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 15:54:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Toto","brian@gmail.com","$2b$10$Q8PrUcbPrVjeeO73XiYXXukfLu7x9Lm3Rt9mqePFX5yuimwVVXixC",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: 'User registered successfully: a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:54:44 +0000] "POST /auth/register HTTP/1.1" 201 115 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 17:59:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:42'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:02:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:05:22 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:07:08 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:09:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:09:31 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:10:17 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:12:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 70ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 88ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:11 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:14:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:27 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 62ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:15:57'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:15:57 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:15:57'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 124ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)\n' +
    '    at runNextTicks (node:internal/process/task_queues:65:5)\n' +
    '    at process.processImmediate (node:internal/timers:479:9)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 113ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Client connected from Pool (Total count: 3',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 231ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:47:34 +0000] "POST /api/auth/register HTTP/1.1" 404 157 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 71ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 79ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:52:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 44ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$oO812uPRA/WECJaOZ1gfO.nOE1o0vkOXljE1MGy1RGMk0ETW1FtZi",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'User registered successfully: b486f2f2-e19f-4b00-b28b-b7aed76b6e81',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 115ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 49ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9895ef84-c61f-41a6-816f-96dd39944bca)',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  level: 'error',
  message: "Error during login process for fakeuser@example.com:  Cannot read properties of undefined (reading 'password')",
  stack: "TypeError: Cannot read properties of undefined (reading 'password')\n" +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:20:72)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 500 70 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$x/L5i3pLahkKvvgfhXUifuTOIjaIUmD5HSRuUTdZwZsBl6WvNrTEa",""], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User registered successfully: 703e1d26-f7b7-4b76-ba7e-945536a088c4',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 58ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9d9d9578-6d23-4c89-b19d-eceed0ca063c)',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$/aL2gmrDdhmA0lPRGMkLNu2WyGLTo2oFluCXt1WlEcSXm589t6J8y",""], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'User registered successfully: 6f5a6cf0-db61-4708-a55f-d5b2f2345c4b',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 21:18:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:27:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:32:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Tony","Styles","tony@barbershop.com","hashed-password-1","Barber","Experienced barber, specializing in fades and trims.",4.8], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Linda","Wellness","linda@massagehub.com","hashed-password-2","Massage Therapist","Certified massage therapist focusing on deep tissue and relaxation techniques.",4.9], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:37:20 +0000] "POST /timeslot/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 404 212 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:37:20'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:38:51 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:42:11 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:43:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 36ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:44:05 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 08:45:48' }
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:45:48 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:47:50 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '85da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["85da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Access denied: User ID 85da2cd5-1c59-4f8d-b374-f95ee0d6f533 is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:48:48 +0000] "POST /timeslots/providers/85da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 33ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:39 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Duplicate time slot attempt by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'warn',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:43 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:08:28'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:08:28 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 419 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:09:13'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:09:13 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 125 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:13:38 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 200 836 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:15:49 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
