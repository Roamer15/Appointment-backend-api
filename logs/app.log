{
  message: '::1 - - [24/Apr/2025:11:04:42 +0000] "GET /users/re HTTP/1.1" 404 147 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-24 12:04:42'
}
{"level":"info","message":"::1 - - [24/Apr/2025:11:05:56 +0000] \"GET /users/re HTTP/1.1\" 404 147 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\"","timestamp":"2025-04-24 12:05:56"}
{
  message: 'localhost',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'bookingdb',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: '557Py2mjs8.',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{ message: '5432', level: 'info', timestamp: '2025-04-24 13:32:45' }
{ message: 'ian', level: 'info', timestamp: '2025-04-24 13:32:45' }
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX idx_time_slots_day_time ON time_slots(day, start_time, end_time);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX idx_appointments_provider_status ON appointments(provider_id, status);..., params: undefined, duration: 29ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 13:32:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 13:39:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 13:39:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Attempting to Start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:01:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:13:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 29ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:14:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE INDEX idx_time_slots_provider ON time_slots(provider_id);\n' +
    '          ..., params: undefined, error: relation "idx_time_slots_provider" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:15:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Error executing query: { text: \n' +
    '            CREATE TABLE appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n' +
    '..., params: undefined, error: relation "appointments" already exists}',
  level: 'error',
  timestamp: '2025-04-24 14:16:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:16:38'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 14:19:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 14:20:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:30:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:31:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:32:00'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:41:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:41:15'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:25 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:25'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:42:58 +0000] "POST /auth/register HTTP/1.1" 400 1413 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:42:58'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:43:10 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:43:10'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:44:32 +0000] "POST /auth/register HTTP/1.1" 400 1333 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:44:32'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:49:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:49:52'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:50:12 +0000] "POST /auth/register HTTP/1.1" 400 50 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:50:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:52:21 +0000] "POST /auth/register HTTP/1.1" 400 60 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:52:21'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 15:54:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 15:54:39'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 23ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 15:54:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Toto","brian@gmail.com","$2b$10$Q8PrUcbPrVjeeO73XiYXXukfLu7x9Lm3Rt9mqePFX5yuimwVVXixC",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: 'User registered successfully: a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:14:54:44 +0000] "POST /auth/register HTTP/1.1" 201 115 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 15:54:44'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 17:59:38'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 17:59:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 17:59:42'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:02:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:02:39'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:02:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:05:22 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:05:22'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: 'Error executing query: { text: SELECT id, email, first_name, last_name, password FROM users WHERE email = $1..., params: ["brian@gmail.com"], error: relation "users" does not exist}',
  level: 'error',
  timestamp: '2025-04-24 18:07:08'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:07:08 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:07:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:09:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:09:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:09:31 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:09:31'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 46ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:10:17 +0000] "POST /auth/login HTTP/1.1" 500 418 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:10:17'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:12:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:13:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 70ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:22'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:22'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 88ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:13:23 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:13:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  bcrypt is not defined',
  stack: 'ReferenceError: bcrypt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:18:34)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 18:14:11'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:11 +0000] "POST /auth/login HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:11'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:14:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:14:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 19ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:14:27 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:14:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 62ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:15:56'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  user is not defined',
  stack: 'ReferenceError: user is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:28:19)',
  timestamp: '2025-04-24 18:15:57'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:15:57 +0000] "POST /auth/login HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:15:57'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:03'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 124ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)\n' +
    '    at runNextTicks (node:internal/process/task_queues:65:5)\n' +
    '    at process.processImmediate (node:internal/timers:479:9)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'error',
  message: 'Error during login process for brian@gmail.com:  jwt is not defined',
  stack: 'ReferenceError: jwt is not defined\n' +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:33:11)',
  timestamp: '2025-04-24 18:16:12'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:12 +0000] "POST /auth/login HTTP/1.1" 500 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:12'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 18:16:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-24 18:16:48'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 113ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Client connected from Pool (Total count: 3',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 231ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:17:16:56 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-24 18:16:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:47:34 +0000] "POST /api/auth/register HTTP/1.1" 404 157 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 71ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:47:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 79ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:48:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:52:46'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 44ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$oO812uPRA/WECJaOZ1gfO.nOE1o0vkOXljE1MGy1RGMk0ETW1FtZi",""], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'User registered successfully: b486f2f2-e19f-4b00-b28b-b7aed76b6e81',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:52:47 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:52:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 115ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 49ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9895ef84-c61f-41a6-816f-96dd39944bca)',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  level: 'error',
  message: "Error during login process for fakeuser@example.com:  Cannot read properties of undefined (reading 'password')",
  stack: "TypeError: Cannot read properties of undefined (reading 'password')\n" +
    '    at loginHandler (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/login-controller.js:20:72)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/login HTTP/1.1" 500 70 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$x/L5i3pLahkKvvgfhXUifuTOIjaIUmD5HSRuUTdZwZsBl6WvNrTEa",""], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'User registered successfully: 703e1d26-f7b7-4b76-ba7e-945536a088c4',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:19:58:14 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 20:58:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '    INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '    VALUES ($1,..., params: ["Logan","Testman","logan.test@example.com","123456789",""], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 58ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:36'
}
{
  message: 'User logged in successfully: logan.test@example.com (ID: 9d9d9578-6d23-4c89-b19d-eceed0ca063c)',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 200 413 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 2ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Login attempt failed: Incorrect password - logan.test@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 30 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["fakeuser@example.com"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: "Login Attempt failed: Account with email fakeuser@example.com doesn't exist",
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/login HTTP/1.1" 401 52 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["logan.test@example.com"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO clients (first_name, last_name, email, password, profile_image_url)\n' +
    '      VALUES ..., params: ["Brian","Testman","brian.testman@example.com","$2b$10$/aL2gmrDdhmA0lPRGMkLNu2WyGLTo2oFluCXt1WlEcSXm589t6J8y",""], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'User registered successfully: 6f5a6cf0-db61-4708-a55f-d5b2f2345c4b',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 201 118 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: SELECT email FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Registration attempt failed: Email already exists - email: brian.testman@example.com',
  level: 'warn',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: '::ffff:127.0.0.1 - - [24/Apr/2025:20:03:37 +0000] "POST /auth/register HTTP/1.1" 409 34 "-" "-"',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  message: 'Executed query: { text: DELETE FROM clients WHERE email = $1..., params: ["brian.testman@example.com"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-24 21:03:37'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-24 21:18:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:27:07'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:27:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:29:14'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:32:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Tony","Styles","tony@barbershop.com","hashed-password-1","Barber","Experienced barber, specializing in fades and trims.",4.8], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO providers (first_name, last_name, email, password, specialty, bio, rating)\n' +
    '      ..., params: ["Linda","Wellness","linda@massagehub.com","hashed-password-2","Massage Therapist","Certified massage therapist focusing on deep tissue and relaxation techniques.",4.9], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","09:00:00","09:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-25","10:00:00","10:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Executed query: { text: \n' +
    '        INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '        VALUES ($1, $2, $3,..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475","2025-04-26","14:00:00","14:30:00"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:34:09'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:37:20 +0000] "POST /timeslot/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 404 212 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:37:20'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:38:51 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:38:51'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:42:11 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:42:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:29'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 08:43:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:43:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 36ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:44:05 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:44:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:45:43'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 08:45:48' }
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 11ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:45:48 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:45:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:47:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","09:00:00","09:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:47:50 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:47:50'
}
{
  message: '85da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["85da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Access denied: User ID 85da2cd5-1c59-4f8d-b374-f95ee0d6f533 is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:48:48 +0000] "POST /timeslots/providers/85da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:52:01'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 33ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:39 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:39'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-25","12:00:00","12:30:00"], duration: 1ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Duplicate time slot attempt by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'warn',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:07:52:43 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 08:52:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 08:58:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:04:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:07:23'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:08:28'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:08:28 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 419 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:08:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 0ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:09:09'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Error executing query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at FROM time_slots..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: bind message supplies 1 parameters, but prepared statement "" requires 0}',
  level: 'error',
  timestamp: '2025-04-25 09:09:13'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '08P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '1731',
  routine: 'exec_bind_message',
  level: 'error',
  message: 'Error displaying time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  bind message supplies 1 parameters, but prepared statement "" requires 0',
  stack: 'error: bind message supplies 1 parameters, but prepared statement "" requires 0\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:141:24)\n' +
    '    at async viewTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:10:32)',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:09:13 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 500 125 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:09:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:13:32'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 4ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:13:38 +0000] "GET /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/view-timeslots HTTP/1.1" 200 836 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:13:38'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:08:15:49 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 09:15:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:18:14'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:52:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 09:56:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 09:59:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:08:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:13:52 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots/%2066aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 404 253 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:13:52'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:14:41 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 404 250 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:14:41'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 38ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 3ms, rows: 3}',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:17:11 +0000] "GET /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/view-timeslots HTTP/1.1" 200 506 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:17:11'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 10:18:23' }
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 13ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 10:18:23'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:18:23 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:18:23'
}
{ message: undefined, level: 'info', timestamp: '2025-04-25 10:19:16' }
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: [null], duration: 14ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Access denied: User ID undefined is not a provider',
  level: 'warn',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:19:16 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 403 44 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:19:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:01'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: [null], duration: 1ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:22:05 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 200 12 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:22:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 25ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:22:20'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Executed query: { text: SELECT day, start_time, end_time, is_booked, created_at, updated_at\n' +
    '                               F..., params: [null], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:24:08 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 200 12 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:24:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:25:03'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:11'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:25:24 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:25:24'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 14ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:25:29'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:25:55 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:25:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:27:05'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:27:10'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:27:12 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" - - "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:27:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:29:02'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["66aff2f9-290b-4826-9b74-857b024f1d98","e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:29:05 +0000] "DELETE /timeslots/providers/e1022995-d7f7-4ebc-98fd-cad361260475/delete-timeslot/66aff2f9-290b-4826-9b74-857b024f1d98 HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:29:05'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:33:26'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 16ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["7ea6049b-cb9c-4767-8263-6d4e152b9c89","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Time slot with id: 7ea6049b-cb9c-4767-8263-6d4e152b9c89 has been deleted successfully',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:09:33:39 +0000] "DELETE /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/delete-timeslot/7ea6049b-cb9c-4767-8263-6d4e152b9c89 HTTP/1.1" 201 270 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 10:33:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 10:34:59'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:10:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:12:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:12:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:12:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 12:41:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:04:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:05:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:16'
}
{
  length: 319,
  name: 'error',
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_tasks_updated_at\n' +
    '      BEFORE UPDATE ON tasks \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'namespace.c',
  line: '434',
  routine: 'RangeVarGetRelidExtended',
  level: 'error',
  message: 'Error while initializing the schema relation "tasks" does not exist',
  stack: 'error: relation "tasks" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:1)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:07:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:07:27'
}
{
  length: 319,
  name: 'error',
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_tasks_updated_at\n' +
    '      BEFORE UPDATE ON tasks \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'namespace.c',
  line: '434',
  routine: 'RangeVarGetRelidExtended',
  level: 'error',
  message: 'Error while initializing the schema relation "tasks" does not exist',
  stack: 'error: relation "tasks" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:07:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:08:57'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:08:58'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:09:03'
}
{
  length: 372,
  name: 'error',
  severity: 'ERROR',
  code: '42710',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_time_slots_updated_at\n' +
    '      BEFORE UPDATE ON time_slots \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'trigger.c',
  line: '768',
  routine: 'CreateTriggerFiringOn',
  level: 'error',
  message: 'Error while initializing the schema trigger "update_time_slots_updated_at" for relation "time_slots" already exists',
  stack: 'error: trigger "update_time_slots_updated_at" for relation "time_slots" already exists\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:09:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:11:15'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 24ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:11:35'
}
{
  length: 372,
  name: 'error',
  severity: 'ERROR',
  code: '42710',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: 'SQL statement "CREATE TRIGGER update_time_slots_updated_at\n' +
    '      BEFORE UPDATE ON time_slots \n' +
    '      FOR EACH ROW \n' +
    '      EXECUTE FUNCTION update_updated_at_column()"\n' +
    'PL/pgSQL function inline_code_block line 3 at SQL statement',
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'trigger.c',
  line: '768',
  routine: 'CreateTriggerFiringOn',
  level: 'error',
  message: 'Error while initializing the schema trigger "update_time_slots_updated_at" for relation "time_slots" already exists',
  stack: 'error: trigger "update_time_slots_updated_at" for relation "time_slots" already exists\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg/lib/client.js:545:17\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async initializeDbSchema (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:125:5)\n' +
    '    at async startSever (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/bin/www:132:5)',
  timestamp: '2025-04-25 13:11:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:14:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:21:12'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 23ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT id FROM time_slots\n' +
    '        WHERE provider_id = $1 AND day = $2 AND start_time = $3 A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-27","12:00:00","12:30:00"], duration: 7ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Executed query: { text: \n' +
    '          INSERT INTO time_slots (provider_id, day, start_time, end_time)\n' +
    '          VALUES ($1, $2,..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-27","12:00:00","12:30:00"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: 'Time slot created Successfully by the user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 : 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:23:36 +0000] "POST /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/create-timeslots HTTP/1.1" 201 300 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:23:36'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:25:17 +0000] "PUT /providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 404 238 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:25:17'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Error executing query: { text: UPDATE SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '               ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: syntax error at or near "="}',
  level: 'error',
  timestamp: '2025-04-25 13:28:17'
}
{
  length: 90,
  name: 'error',
  severity: 'ERROR',
  code: '42601',
  detail: undefined,
  hint: undefined,
  position: '49',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'scan.l',
  line: '1244',
  routine: 'scanner_yyerror',
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  syntax error at or near "="',
  stack: 'error: syntax error at or near "="\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:13:34)',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:28:17 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 43 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:28:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:31:58'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:31:59'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:31:59'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Error executing query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], error: could not determine data type of parameter $4}',
  level: 'error',
  timestamp: '2025-04-25 13:32:06'
}
{
  length: 124,
  name: 'error',
  severity: 'ERROR',
  code: '42P18',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'postgres.c',
  line: '740',
  routine: 'pg_analyze_and_rewrite_varparams',
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  could not determine data type of parameter $4',
  stack: 'error: could not determine data type of parameter $4\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:13:34)',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:32:06 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 59 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:32:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 22ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:32:42'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 5ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 35ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  level: 'error',
  message: 'Error Updating time slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 for provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  result is not defined',
  stack: 'ReferenceError: result is not defined\n' +
    '    at updateTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:27:25)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:32:45 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 500 35 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:32:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 13:33:10'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 6ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-28","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:12:33:13 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 200 261 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 13:33:13'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:16:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 19ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:16:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 21ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:44:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:47:34'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 24ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET\n' +
    '                                 day = $1, start_time = $2, end_time = $3\n' +
    '    ..., params: ["2025-04-27","12:00:00","12:30:00","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 updated Successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:13:48:01 +0000] "PUT /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/update-timeslot/0960e2ec-5d18-4b37-b791-d6ab6c13bbc3 HTTP/1.1" 200 251 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 14:48:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:49:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 14:57:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:05:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:06:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 17ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:07:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:09:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:10:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:10:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:12:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 15:15:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:15:23'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 26ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 15:15:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:19:28 +0000] "GET /search/providers/:id/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 175 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:19:28'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:20:05 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:20:05'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:20:19 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:20:19'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:14:22:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 15:22:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:07:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 18ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:07:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:09:17'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Executed query: { text: DELETE\n' +
    '                                 FROM time_slots\n' +
    '                                 WHERE id = ..., params: ["7ea6049b-cb9c-4767-8263-6d4e152b9c89","89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 2ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: 'Time slot not found or not owned by provider',
  level: 'warn',
  timestamp: '2025-04-25 16:09:58'
}
{
  level: 'error',
  message: "Error deleting time slots for user 89da2cd5-1c59-4f8d-b374-f95ee0d6f533 :  Cannot read properties of undefined (reading 'created_at')",
  stack: "TypeError: Cannot read properties of undefined (reading 'created_at')\n" +
    '    at formatTimestamps (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:8:39)\n' +
    '    at deleteTimeSlot (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/timeslot-controller.js:105:25)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:09:58 +0000] "DELETE /timeslots/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/delete-timeslot/7ea6049b-cb9c-4767-8263-6d4e152b9c89 HTTP/1.1" 500 33 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:09:58'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:10:08 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:10:08'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:10:11 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:10:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:08'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 16:11:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:11:43'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:11:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 404 208 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:11:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:16:09'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:10'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:16:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:26'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:17:44 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:17:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:17:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 14ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:31'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:31 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:31'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:32 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 16ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:18:42'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:18:45 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1658 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:18:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:19:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:19:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:19:26'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:19:30'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:19:30 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1657 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:19:30'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:19:33'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:19:33 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 1657 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:19:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 12ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:20:01'
}
{
  level: 'error',
  message: "Auth middleware: token verification failed Cannot read properties of undefined (reading 'id')",
  stack: "TypeError: Cannot read properties of undefined (reading 'id')\n" +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:16:76)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:664:3)',
  timestamp: '2025-04-25 16:20:24'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:20:24 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 500 64 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:20:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 0ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 1ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-25 16:24:41'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 7ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 17ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT * FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          AND is_booked = FALSE\n' +
    '   ..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 1ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  message: '::ffff:127.0.0.1 - - [25/Apr/2025:15:24:48 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 1400 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-25 16:24:48'
}
{
  level: 'info',
  message: 'Received',
  timestamp: '2025-04-25 19:13:19'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 09:44:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:44:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 102ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 13ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 10ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:44:55'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 99ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 20ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 09:49:05'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 09:49:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 09:49:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 97ms, rows: 5}',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:08:49:21 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 425 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 09:49:21'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:00:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:02:18'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:03:36'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:04:23'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:24'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:04:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 67ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:04:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:06:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:35:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:35:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:42:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:43:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 51ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:43:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 10:48:54'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:13:32'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:13:33'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:15:08'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:32:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:32:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 53ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:32:20'
}
{
  message: '::1 - - [26/Apr/2025:10:49:25 +0000] "GET /actors/search?name=TOm%20 HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:25'
}
{
  message: '::1 - - [26/Apr/2025:10:49:26 +0000] "GET /actors/search?name=TOm HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:26'
}
{
  message: '::1 - - [26/Apr/2025:10:49:27 +0000] "GET /actors/search?name=T HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:27'
}
{
  message: '::1 - - [26/Apr/2025:10:49:27 +0000] "GET /actors/search?name=Tom HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:27'
}
{
  message: '::1 - - [26/Apr/2025:10:49:28 +0000] "GET /actors/search?name=Tom%20 HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:28'
}
{
  message: '::1 - - [26/Apr/2025:10:49:28 +0000] "GET /actors/search?name=Tom%20H HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:28'
}
{
  message: '::1 - - [26/Apr/2025:10:49:29 +0000] "GET /actors/search?name=Tom%20Holla HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:29'
}
{
  message: '::1 - - [26/Apr/2025:10:49:30 +0000] "GET /actors/search?name=Tom%20Holland HTTP/1.1" 404 152 "http://localhost:3001/" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36"',
  level: 'info',
  timestamp: '2025-04-26 11:49:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 9ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 11:56:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:00:19'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:00:20'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:01:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:01:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:03:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:21:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:21:47'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:22:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:22:57'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:24:16'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:24:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:28:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:31:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:31:50'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:35:01 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:35:01'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:35:20'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:35:29 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:35:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 73ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:43:19 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:43:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:01 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:01'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:03 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:44:18'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 41ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:44:18'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:44:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:19 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:19'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:44:46 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:44:46'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:17'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:46:27 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:46:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:46:59'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:47:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:47:00'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:07 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:07'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:29 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:29'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:31 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:31'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:47:32 +0000] "GET /appointment/booking HTTP/1.1" 400 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:47:32'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:49:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 52ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:49:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 70ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:49:37'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 18ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, time_slot_id, appointment_date, status)\n' +
    '   ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], error: column "time_slot_id" of relation "appointments" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 12:49:41'
}
{
  length: 137,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '58',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets',
  level: 'error',
  message: 'Error booking appointment for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column "time_slot_id" of relation "appointments" does not exist',
  stack: 'error: column "time_slot_id" of relation "appointments" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:38:31)',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:49:41 +0000] "GET /appointment/booking HTTP/1.1" 500 130 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:49:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:50:37'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 64ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:38'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: 'Error executing query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, appointment_date, status)\n' +
    '    ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], error: column "appointment_date" of relation "appointments" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 12:50:41'
}
{
  length: 141,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '71',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1066',
  routine: 'checkInsertTargets',
  level: 'error',
  message: 'Error booking appointment for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column "appointment_date" of relation "appointments" does not exist',
  stack: 'error: column "appointment_date" of relation "appointments" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async bookAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:38:31)',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:50:41 +0000] "GET /appointment/booking HTTP/1.1" 500 134 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:50:41'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 8ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 12:50:51'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","0960e2ec-5d18-4b37-b791-d6ab6c13bbc3","2025-04-26T23:00:00.000Z","booked"], duration: 51ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["0960e2ec-5d18-4b37-b791-d6ab6c13bbc3"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 0960e2ec-5d18-4b37-b791-d6ab6c13bbc3',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:50:54 +0000] "GET /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:50:54'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-24T19:16:56.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-26 12:51:42'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:51:42 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:51:42'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:70:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)',
  timestamp: '2025-04-26 12:51:53'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:51:53 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:51:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT day, start_time, end_time FROM time_slots\n' +
    '        WHERE provider_id = $1\n' +
    '          A..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533","2025-04-24","2025-04-30"], duration: 75ms, rows: 4}',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Slots found for interval',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:11:52:22 +0000] "GET /search/providers/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/available-slots?from=2025-04-24&to=2025-04-30 HTTP/1.1" 200 344 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 12:52:22'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 40ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:01:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:06:20'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 60ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:06:21'
}
{
  message: 'Auth middleware: no token provided',
  level: 'warn',
  timestamp: '2025-04-26 13:08:12'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:08:12 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 53 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:08:12'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed invalid token',
  level: 'error',
  stack: 'JsonWebTokenError: invalid token\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:82:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at processParams (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:582:12)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:291:5)',
  timestamp: '2025-04-26 13:09:18'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:09:18 +0000] "GET /appointment/view-bookings HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:09:18'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], error: column a.time_slot_id does not exist}',
  level: 'error',
  timestamp: '2025-04-26 13:10:11'
}
{
  length: 173,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "a.timeslot_id".',
  position: '259',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error fetching appointments for client a9b58b58-e455-4dfe-88c8-16cd0878c210: column a.time_slot_id does not exist',
  stack: 'error: column a.time_slot_id does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewMyAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:10:11 +0000] "GET /appointment/view-bookings HTTP/1.1" 500 89 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:10:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:15:47'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], duration: 34ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:15:48'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:15:48 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 272 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:15:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:17:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 34ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:12'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS a.created_at,\n' +
    '             t.day, t.start_time, t.end_time,\n' +
    '             p.fir..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], error: syntax error at or near "."}',
  level: 'error',
  timestamp: '2025-04-26 13:17:17'
}
{
  length: 90,
  name: 'error',
  severity: 'ERROR',
  code: '42601',
  detail: undefined,
  hint: undefined,
  position: '24',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'scan.l',
  line: '1244',
  routine: 'scanner_yyerror',
  level: 'error',
  message: 'Error fetching appointments for client a9b58b58-e455-4dfe-88c8-16cd0878c210: syntax error at or near "."',
  stack: 'error: syntax error at or near "."\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewMyAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:17:17'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:17:17 +0000] "GET /appointment/view-bookings HTTP/1.1" 500 82 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:17:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:17:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:48:47'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:48:48'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 44ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:50:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:51:41'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 78ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Error executing query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], error: column a.time_slot_id does not exist}',
  level: 'error',
  timestamp: '2025-04-26 13:52:28'
}
{
  length: 173,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "a.timeslot_id".',
  position: '255',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error fetching appointments for provider e1022995-d7f7-4ebc-98fd-cad361260475: column a.time_slot_id does not exist',
  stack: 'error: column a.time_slot_id does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async viewProviderAppointments (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:20:32)',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:52:28 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 500 98 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:52:28'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 49ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 13:52:54'
}
{
  message: 'e1022995-d7f7-4ebc-98fd-cad361260475',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 13ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["e1022995-d7f7-4ebc-98fd-cad361260475"], duration: 42ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:52:56 +0000] "GET /appointment/provider/view-bookings/e1022995-d7f7-4ebc-98fd-cad361260475 HTTP/1.1" 200 19 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:52:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210"], duration: 61ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:53:12 +0000] "GET /appointment/view-bookings HTTP/1.1" 200 272 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:53:12'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 49ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT a.id AS appointment_id, a.status, a.created_at,\n' +
    '             t.day, t.start_time, t.en..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:12:53:44 +0000] "GET /appointment/provider/view-bookings/89da2cd5-1c59-4f8d-b374-f95ee0d6f533 HTTP/1.1" 200 267 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 13:53:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:12:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 61ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 15ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 11ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:12:29'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:15:59 +0000] "GET /4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 182 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:15:59'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:16:28 +0000] "GET /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 194 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:16:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:16:30 +0000] "GET /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 404 194 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:16:30'
}
{
  name: 'JsonWebTokenError',
  message: 'Auth middleware: token verification failed invalid token',
  level: 'error',
  stack: 'JsonWebTokenError: invalid token\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:82:17)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:600:14)\n' +
    '    at param (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:610:14)',
  timestamp: '2025-04-26 14:17:09'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:17:09 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 401 32 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:17:09'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:18:27'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 64ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:18:27'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-26 14:18:28'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:18:28 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:18:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: 'Error executing query: { text: \n' +
    '        SELECT client_id, provider_id, time_slot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], error: column "time_slot_id" does not exist}',
  level: 'error',
  timestamp: '2025-04-26 14:18:49'
}
{
  length: 183,
  name: 'error',
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: 'Perhaps you meant to reference the column "appointments.timeslot_id".',
  position: '41',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '3729',
  routine: 'errorMissingColumn',
  level: 'error',
  message: 'Error canceling appointment 4e50b113-db0e-48ba-b2be-76039fca95a0: column "time_slot_id" does not exist',
  stack: 'error: column "time_slot_id" does not exist\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/pg-pool/index.js:45:11\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async query (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/config/db.js:166:22)\n' +
    '    at async cancelAppointment (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/controllers/appointment-controller.js:15:33)',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:18:49 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 500 91 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:18:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:19:07'
}
{
  message: 'Executed query: { text: \n' +
    '        SELECT client_id, provider_id, timeslot_id, status\n' +
    '        FROM appointments\n' +
    '        WHERE ..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE appointments\n' +
    "        SET status = 'canceled'\n" +
    '        WHERE id = $1\n' +
    '        RETURNING..., params: ["4e50b113-db0e-48ba-b2be-76039fca95a0"], duration: 11ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Executed query: { text: \n' +
    '        UPDATE time_slots\n' +
    '        SET is_booked = FALSE\n' +
    '        WHERE id = $1\n' +
    '      ..., params: [null], duration: 4ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Appointment 4e50b113-db0e-48ba-b2be-76039fca95a0 canceled by user a9b58b58-e455-4dfe-88c8-16cd0878c210',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: '::ffff:127.0.0.1 - - [26/Apr/2025:13:19:09 +0000] "PATCH /appointment/4e50b113-db0e-48ba-b2be-76039fca95a0/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-26 14:19:09'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:34:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:34:25'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:34:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:35:36'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:36'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:37'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 8ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:35:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:37:01'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:02'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-26 14:37:45'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 00:58:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 46ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 11ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 00:58:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 00:58:29'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 00:58:29'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 42ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:03:26'
}
{
  name: 'TokenExpiredError',
  message: 'Auth middleware: token verification failed jwt expired',
  expiredAt: 2025-04-26T13:47:07.000Z,
  level: 'error',
  stack: 'TokenExpiredError: jwt expired\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:190:21\n' +
    '    at getSecret (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:97:14)\n' +
    '    at module.exports [as verify] (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/jsonwebtoken/verify.js:101:10)\n' +
    '    at authMiddleware (file:///home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/middlewares/authMiddleware.js:14:25)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at next (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:157:13)\n' +
    '    at Route.dispatch (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/route.js:117:3)\n' +
    '    at handle (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:435:11)\n' +
    '    at Layer.handleRequest (/home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/lib/layer.js:152:17)\n' +
    '    at /home/com/Desktop/RebaseCodeCamp/month_7/node_projects/appointment-backend-api/node_modules/router/index.js:295:15',
  timestamp: '2025-04-28 01:04:59'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:04:59 +0000] "POST /appointment/booking HTTP/1.1" 401 30 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:04:59'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:05:10'
}
{
  message: 'Executed query: { text: SELECT id, email, first_name, last_name, password FROM clients WHERE email = $1..., params: ["brian@gmail.com"], duration: 61ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:10'
}
{
  message: 'User logged in successfully: brian@gmail.com (ID: a9b58b58-e455-4dfe-88c8-16cd0878c210)',
  level: 'info',
  timestamp: '2025-04-28 01:05:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:11 +0000] "POST /auth/login HTTP/1.1" 200 393 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:34 +0000] "POST /appointment/booking HTTP/1.1" 400 40 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 75ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","a4989665-3dfc-4c53-b6fc-816b1ab26e18","2025-04-24T23:00:00.000Z","booked"], duration: 17ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot a4989665-3dfc-4c53-b6fc-816b1ab26e18',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:05:53 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:05:53'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 8ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 36ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: [null], duration: 3ms, rows: 0}',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Appointment 8dbe9a24-14c0-435f-8f93-38a78b5669ce canceled successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:07:27 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/8dbe9a24-14c0-435f-8f93-38a78b5669ce/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:07:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 47ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:18:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:27:34'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:02'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:34:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:34:53'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:34:54'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 53ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:35:31 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:35:31'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:37:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 6ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:37:57'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:38:04 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:38:04'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:38:50'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["8dbe9a24-14c0-435f-8f93-38a78b5669ce"], duration: 4ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Cancel failed: Appointment 8dbe9a24-14c0-435f-8f93-38a78b5669ce already canceled',
  level: 'warn',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:39:00 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/8dbe9a24-14c0-435f-8f93-38a78b5669ce/cancel HTTP/1.1" 409 45 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:39:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["a4989665-3dfc-4c53-b6fc-816b1ab26e18"], duration: 45ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Booking error: Time slot a4989665-3dfc-4c53-b6fc-816b1ab26e18 is already booked',
  level: 'warn',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:39:11 +0000] "POST /appointment/booking HTTP/1.1" 409 38 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:39:11'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:41:11'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:11'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 2ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:12'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:41:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:41:42'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 55ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","618b47c2-ac87-41b0-a88c-1a039fe85a1d","2025-04-24T23:00:00.000Z","booked"], duration: 12ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 10ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:42:54 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:42:54'
}
{
  message: '89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: SELECT id FROM providers WHERE id = $1..., params: ["89da2cd5-1c59-4f8d-b374-f95ee0d6f533"], duration: 43ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      SELECT provider_id, timeslot_id, status\n' +
    '      FROM appointments\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["ced2d41d-18bb-4a83-b723-053286453258"], duration: 3ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE appointments\n' +
    "      SET status = 'canceled'\n" +
    '      WHERE id = $1\n' +
    '      RETURNING *\n' +
    '    ..., params: ["ced2d41d-18bb-4a83-b723-053286453258"], duration: 7ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Executed query: { text: \n' +
    '      UPDATE time_slots\n' +
    '      SET is_booked = FALSE\n' +
    '      WHERE id = $1\n' +
    '    ..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Appointment ced2d41d-18bb-4a83-b723-053286453258 canceled successfully by provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:43:39 +0000] "PATCH /appointment/provider/89da2cd5-1c59-4f8d-b374-f95ee0d6f533/ced2d41d-18bb-4a83-b723-053286453258/cancel HTTP/1.1" 200 409 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:43:39'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 35ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:46:52'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:48:27'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:48:28'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: SELECT * FROM time_slots WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 50ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: \n' +
    '      INSERT INTO appointments (client_id, provider_id, timeslot_id, ppointment_date, status)\n' +
    '     ..., params: ["a9b58b58-e455-4dfe-88c8-16cd0878c210","89da2cd5-1c59-4f8d-b374-f95ee0d6f533","618b47c2-ac87-41b0-a88c-1a039fe85a1d","2025-04-24T23:00:00.000Z","booked"], duration: 21ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Executed query: { text: UPDATE time_slots SET is_booked = TRUE WHERE id = $1..., params: ["618b47c2-ac87-41b0-a88c-1a039fe85a1d"], duration: 9ms, rows: 1}',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Appointment successfully booked for client a9b58b58-e455-4dfe-88c8-16cd0878c210 on slot 618b47c2-ac87-41b0-a88c-1a039fe85a1d',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: '🔔 Notification sent to provider 89da2cd5-1c59-4f8d-b374-f95ee0d6f533',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: '::ffff:127.0.0.1 - - [28/Apr/2025:00:48:43 +0000] "POST /appointment/booking HTTP/1.1" 201 405 "-" "insomnia/11.0.2"',
  level: 'info',
  timestamp: '2025-04-28 01:48:43'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:51:43'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:51:43'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:51:44'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:54:26'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:54:27'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:54:59'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 54ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:55:00'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:56:52'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 36ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:56:53'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:57:05'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:57:06'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 39ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 01:58:51'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:05:06'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 31ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:05:07'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 38ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:35'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 69ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 6ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:17:56'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:21:15'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 60ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 5ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:16'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:21:48'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 32ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:21:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 56ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:39'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 7ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:22:40'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:24:49'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 33ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 02:35:03'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:20:29'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 45ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 7ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:20:30'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:40:41'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 41ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 5ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:40:42'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 43ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 1ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 08:46:17'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 09:05:25'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 50ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 4ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 4ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:05:26'
}
{
  message: 'Database has been configured for bookingdb database',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Attempting to start server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Client connected from Pool (Total count: 1',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Database connection pool established successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Initializing database schema',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Client connected from Pool (Total count: 2',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS clients (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_random..., params: undefined, duration: 37ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS providers (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_rand..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Clients table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS time_slots (\n' +
    '              id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Time slots table has been created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_provider ON time_slots(provider_id);\n' +
    '        ..., params: undefined, duration: 3ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE INDEX IF NOT EXISTS idx_time_slots_day_time ON time_slots(day, start_time, end_t..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Optimization indexes added',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '            CREATE TABLE IF NOT EXISTS appointments (\n' +
    '            id UUID PRIMARY KEY DEFAULT gen_r..., params: undefined, duration: 2ms, rows: null}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Appointments table created successfully',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Executed query: { text: \n' +
    '                CREATE INDEX IF NOT EXISTS idx_appointments_provider_status ON appointments(provide..., params: undefined, duration: 3ms, rows: undefined}',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
{
  message: 'Starting server on port 3000',
  level: 'info',
  timestamp: '2025-04-28 09:14:40'
}
